if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part] && cur[part] !== Object.prototype[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && goog.global.CLOSURE_UNCOMPILED_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && goog.global.CLOSURE_DEFINES.nodeType === undefined && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.provide can not be used within a goog.module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name];
    } else {
      if (!goog.implicitNamespaces_[name]) {
        var ns = goog.getObjectByName(name);
        return ns != null ? ns : null;
      }
    }
  }
  return null;
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part; part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":"goog"} : {};
    }
    for (var i = 0; provide = provides[i]; i++) {
      deps.nameToPath[provide] = path;
      deps.loadFlags[path] = opt_loadFlags;
    }
    for (var j = 0; require = requires[j]; j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var path = goog.getPathFromDeps_(name);
        if (path) {
          goog.writeScripts_(path);
        } else {
          var errorMessage = "goog.require could not find: " + name;
          goog.logToConsole_(errorMessage);
          throw Error(errorMessage);
        }
      }
    }
    return null;
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.define("goog.TRANSPILE", "detect");
goog.define("goog.TRANSPILER", "transpile.js");
if (goog.DEPENDENCIES_ENABLED) {
  goog.dependencies_ = {loadFlags:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH) && goog.isString(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.oldIeWaiting_ = false;
  goog.importProcessedScript_ = function(src, isModule, needsTranspile) {
    var bootstrap = 'goog.retrieveAndExec_("' + src + '", ' + isModule + ", " + needsTranspile + ");";
    goog.importScript_("", bootstrap);
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0; i < count; i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
    goog.oldIeWaiting_ = false;
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    var loadFlags = path && goog.dependencies_.loadFlags[path] || {};
    var languageLevel = loadFlags["lang"] || "es3";
    if (path && (loadFlags["module"] == "goog" || goog.needsTranspile_(languageLevel))) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModuleFromUrl = function(url) {
    goog.retrieveAndExec_(url, true, false);
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      if (opt_sourceText === undefined) {
        if (!goog.IS_OLD_IE_) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          goog.oldIeWaiting_ = true;
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_(opt_sourceText) + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.needsTranspile_ = function(lang) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!goog.requiresTranspilation_) {
          goog.requiresTranspilation_ = goog.createRequiresTranspilation_();
        }
      }
    }
    if (lang in goog.requiresTranspilation_) {
      return goog.requiresTranspilation_[lang];
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.requiresTranspilation_ = null;
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function(pathToLoad) {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    visitNode(pathToLoad);
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    for (var i = 0; i < scripts.length; i++) {
      var path = scripts[i];
      if (path) {
        var loadFlags = deps.loadFlags[path] || {};
        var languageLevel = loadFlags["lang"] || "es3";
        var needsTranspile = goog.needsTranspile_(languageLevel);
        if (loadFlags["module"] == "goog" || needsTranspile) {
          goog.importProcessedScript_(goog.basePath + path, loadFlags["module"] == "goog", needsTranspile);
        } else {
          goog.importScript_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (goog.hasBadLetScoping == null) {
    var hasBadLetScoping;
    try {
      hasBadLetScoping = !eval('"use strict";' + "let x \x3d 1; function f() { return typeof x; };" + 'f() \x3d\x3d "number";');
    } catch (e) {
      hasBadLetScoping = false;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n" + ";" + "})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:undefined, declareLegacyNamespace:false};
    var exports;
    if (goog.isFunction(moduleDef)) {
      exports = moduleDef.call(undefined, {});
    } else {
      if (goog.isString(moduleDef)) {
        if (goog.useSafari10Workaround()) {
          moduleDef = goog.workaroundSafari10EvalBug(moduleDef);
        }
        exports = goog.loadModuleFromSource_.call(undefined, moduleDef);
      } else {
        throw Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (!goog.isString(moduleName) || !moduleName) {
      throw Error('Invalid module name "' + moduleName + '"');
    }
    if (goog.moduleLoaderState_.declareLegacyNamespace) {
      goog.constructNamespace_(moduleName, exports);
    } else {
      if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
        Object.seal(exports);
      }
    }
    goog.loadedModules_[moduleName] = exports;
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function() {
  var exports = {};
  eval(arguments[0]);
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.retrieveAndExec_ = function(src, isModule, needsTranspile) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText == null) {
      throw new Error('Load of "' + src + '" failed');
    }
    if (needsTranspile) {
      scriptText = goog.transpile_.call(goog.global, scriptText, src);
    }
    if (isModule) {
      scriptText = goog.wrapModule_(src, scriptText);
    } else {
      scriptText += "\n//# sourceURL\x3d" + src;
    }
    var isOldIE = goog.IS_OLD_IE_;
    if (isOldIE && goog.oldIeWaiting_) {
      goog.dependencies_.deferred[originalPath] = scriptText;
      goog.queuedModules_.push(originalPath);
    } else {
      importScript(src, scriptText);
    }
  }
};
goog.transpile_ = function(code, path) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      eval(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call(value);
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor; ctor; ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw Error("goog.scope is not supported within a goog.module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.createRequiresTranspilation_ = function() {
  var requiresTranspilation = {"es3":false};
  var transpilationRequiredForAllLaterModes = false;
  function addNewerLanguageTranspilationCheck(modeName, isSupported) {
    if (transpilationRequiredForAllLaterModes) {
      requiresTranspilation[modeName] = true;
    } else {
      if (isSupported()) {
        requiresTranspilation[modeName] = false;
      } else {
        requiresTranspilation[modeName] = true;
        transpilationRequiredForAllLaterModes = true;
      }
    }
  }
  function evalCheck(code) {
    try {
      return !!eval(code);
    } catch (ignored) {
      return false;
    }
  }
  var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
  addNewerLanguageTranspilationCheck("es5", function() {
    return evalCheck("[1,].length\x3d\x3d1");
  });
  addNewerLanguageTranspilationCheck("es6", function() {
    var re = /Edge\/(\d+)(\.\d)*/i;
    var edgeUserAgent = userAgent.match(re);
    if (edgeUserAgent && Number(edgeUserAgent[1]) < 15) {
      return false;
    }
    var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
    return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
  });
  addNewerLanguageTranspilationCheck("es6-impl", function() {
    return true;
  });
  addNewerLanguageTranspilationCheck("es7", function() {
    return evalCheck("2 ** 2 \x3d\x3d 4");
  });
  addNewerLanguageTranspilationCheck("es8", function() {
    return evalCheck("async () \x3d\x3e 1, true");
  });
  return requiresTranspilation;
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0; i < count; i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0; i < length; i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\x3c"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0; i < s.length; i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    do {
      var v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      var v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0; i < separators.length; i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (var i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (var j = 0; j < b.length; j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i >= 0; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; --i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; i >= 0; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (var i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1; i < arguments.length; i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0; i < minLen; i++) {
    var value = [];
    for (var j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1; i > 0; i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / v2;
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1; i < arguments.length; i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0; i < argLength; i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  var visitedSet = {};
  var proto = obj;
  while (proto && (proto !== Object.prototype || !!opt_includeObjectPrototype) && (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {
    var names = Object.getOwnPropertyNames(proto);
    for (var i = 0; i < names.length; i++) {
      visitedSet[names[i]] = true;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col);
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0; i < l; i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  var rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(this, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2; i >= 0; i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0; i < length; i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0; i < length; i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return !f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  var inner = f;
  return function() {
    if (inner) {
      var tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  var timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    var args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  var timeout = 0;
  var shouldFire = false;
  var args = [];
  var handleTimeout = function() {
    timeout = 0;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  var fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  var timeout = 0;
  var handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    if (!timeout) {
      timeout = goog.global.setTimeout(handleTimeout, interval);
      f.apply(opt_scope, arguments);
    }
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 0.000001);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0; i < length1 + 1; i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0; j < length2 + 1; j++) {
    arr[0][j] = 0;
  }
  for (i = 1; i <= length1; i++) {
    for (j = 1; j <= length2; j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2e-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2e-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1; i >= 0; i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0; i < argLength; i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll(opt_map);
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0; key = this.keys_[i]; i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0; i < keys.length; i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#([\\s\\S]*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(uri.indexOf("#") < 0 && uri.indexOf("?") < 0, "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0; i < pairs.length; i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  if (hashIndex < 0) {
    hashIndex = uri.length;
  }
  var questionIndex = uri.indexOf("?");
  var queryData;
  if (questionIndex < 0 || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  if (!newData) {
    return queryData;
  }
  return queryData ? queryData + "\x26" + newData : newData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push(key + (value === "" ? "" : "\x3d" + goog.string.urlEncode(value)));
    }
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("\x26");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = goog.isDefAndNotNull(opt_value) ? "\x3d" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  if (queryData) {
    goog.array.forEach(queryData.split("\x26"), function(pair) {
      var indexOfEquals = pair.indexOf("\x3d");
      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;
      if (!params.hasOwnProperty(name)) {
        buffer.push(pair);
      }
    });
  }
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("\x26"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getQueryData().clone());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0; pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (goog.isString(unescapedPart)) {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    goog.array.forEach(values, function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0; i < keys.length; i++) {
    var val = vals[i];
    for (var j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0; i < values.length; i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.math.Integer");
goog.math.Integer = function(bits, sign) {
  this.bits_ = [];
  this.sign_ = sign;
  var top = true;
  for (var i = bits.length - 1; i >= 0; i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      this.bits_[i] = val;
      top = false;
    }
  }
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    var cachedObj = goog.math.Integer.IntCache_[value];
    if (cachedObj) {
      return cachedObj;
    }
  }
  var obj = new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
  if (-128 <= value && value < 128) {
    goog.math.Integer.IntCache_[value] = obj;
  }
  return obj;
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0; value >= pow; i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0; i < this.bits_.length; i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0; i < len; i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0; i < arr_index; i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0; i <= len; i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0; i < 2 * len; i++) {
    arr[i] = 0;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    for (var j = 0; j < other.bits_.length; j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0; i < len; i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len; i < 2 * len; i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
    index++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  return res;
};
goog.math.Integer.prototype.divide = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().divide(other.negate());
    } else {
      return this.negate().divide(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.divide(other.negate()).negate();
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.subtract(this.divide(other).multiply(other));
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (var i = 1; i < arguments.length; i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  var storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.math.Long");
goog.require("goog.asserts");
goog.require("goog.reflect");
goog.math.Long = function(low, high) {
  this.low_ = low | 0;
  this.high_ = high | 0;
};
goog.math.Long.IntCache_ = {};
goog.math.Long.valueCache_ = {};
goog.math.Long.getCachedIntValue_ = function(value) {
  return goog.reflect.cache(goog.math.Long.IntCache_, value, function(val) {
    return new goog.math.Long(val, val < 0 ? -1 : 0);
  });
};
goog.math.Long.MAX_VALUE_FOR_RADIX_ = ["", "", "111111111111111111111111111111111111111111111111111111111111111", "2021110011022210012102010021220101220221", "13333333333333333333333333333333", "1104332401304422434310311212", "1540241003031030222122211", "22341010611245052052300", "777777777777777777777", "67404283172107811827", "9223372036854775807", "1728002635214590697", "41a792678515120367", "10b269549075433c37", "4340724c6c71dc7a7", "160e2ad3246366807", "7fffffffffffffff", "33d3d8307b214008", 
"16agh595df825fa7", "ba643dci0ffeehh", "5cbfjia3fh26ja7", "2heiciiie82dh97", "1adaibb21dckfa7", "i6k448cf4192c2", "acd772jnc9l0l7", "64ie1focnn5g77", "3igoecjbmca687", "27c48l5b37oaop", "1bk39f3ah3dmq7", "q1se8f0m04isb", "hajppbc1fc207", "bm03i95hia437", "7vvvvvvvvvvvv", "5hg4ck9jd4u37", "3tdtk1v8j6tpp", "2pijmikexrxp7", "1y2p0ij32e8e7"];
goog.math.Long.MIN_VALUE_FOR_RADIX_ = ["", "", "-1000000000000000000000000000000000000000000000000000000000000000", "-2021110011022210012102010021220101220222", "-20000000000000000000000000000000", "-1104332401304422434310311213", "-1540241003031030222122212", "-22341010611245052052301", "-1000000000000000000000", "-67404283172107811828", "-9223372036854775808", "-1728002635214590698", "-41a792678515120368", "-10b269549075433c38", "-4340724c6c71dc7a8", "-160e2ad3246366808", "-8000000000000000", "-33d3d8307b214009", 
"-16agh595df825fa8", "-ba643dci0ffeehi", "-5cbfjia3fh26ja8", "-2heiciiie82dh98", "-1adaibb21dckfa8", "-i6k448cf4192c3", "-acd772jnc9l0l8", "-64ie1focnn5g78", "-3igoecjbmca688", "-27c48l5b37oaoq", "-1bk39f3ah3dmq8", "-q1se8f0m04isc", "-hajppbc1fc208", "-bm03i95hia438", "-8000000000000", "-5hg4ck9jd4u38", "-3tdtk1v8j6tpq", "-2pijmikexrxp8", "-1y2p0ij32e8e8"];
goog.math.Long.fromInt = function(value) {
  var intValue = value | 0;
  goog.asserts.assert(value === intValue, "value should be a 32-bit integer");
  if (-128 <= intValue && intValue < 128) {
    return goog.math.Long.getCachedIntValue_(intValue);
  } else {
    return new goog.math.Long(intValue, intValue < 0 ? -1 : 0);
  }
};
goog.math.Long.fromNumber = function(value) {
  if (isNaN(value)) {
    return goog.math.Long.getZero();
  } else {
    if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.getMinValue();
    } else {
      if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
        return goog.math.Long.getMaxValue();
      } else {
        if (value < 0) {
          return goog.math.Long.fromNumber(-value).negate();
        } else {
          return new goog.math.Long(value % goog.math.Long.TWO_PWR_32_DBL_ | 0, value / goog.math.Long.TWO_PWR_32_DBL_ | 0);
        }
      }
    }
  }
};
goog.math.Long.fromBits = function(lowBits, highBits) {
  return new goog.math.Long(lowBits, highBits);
};
goog.math.Long.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Long.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Long.getZero();
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Long.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Long.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Long.fromNumber(value));
    }
  }
  return result;
};
goog.math.Long.isStringInRange = function(str, opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  var extremeValue = str.charAt(0) == "-" ? goog.math.Long.MIN_VALUE_FOR_RADIX_[radix] : goog.math.Long.MAX_VALUE_FOR_RADIX_[radix];
  if (str.length < extremeValue.length) {
    return true;
  } else {
    if (str.length == extremeValue.length && str <= extremeValue) {
      return true;
    } else {
      return false;
    }
  }
};
goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
goog.math.Long.TWO_PWR_32_DBL_ = goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
goog.math.Long.TWO_PWR_64_DBL_ = goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
goog.math.Long.TWO_PWR_63_DBL_ = goog.math.Long.TWO_PWR_64_DBL_ / 2;
goog.math.Long.getZero = function() {
  return goog.math.Long.getCachedIntValue_(0);
};
goog.math.Long.getOne = function() {
  return goog.math.Long.getCachedIntValue_(1);
};
goog.math.Long.getNegOne = function() {
  return goog.math.Long.getCachedIntValue_(-1);
};
goog.math.Long.getMaxValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MAX_VALUE, function() {
    return goog.math.Long.fromBits(4294967295 | 0, 2147483647 | 0);
  });
};
goog.math.Long.getMinValue = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.MIN_VALUE, function() {
    return goog.math.Long.fromBits(0, 2147483648 | 0);
  });
};
goog.math.Long.getTwoPwr24 = function() {
  return goog.reflect.cache(goog.math.Long.valueCache_, goog.math.Long.ValueCacheId_.TWO_PWR_24, function() {
    return goog.math.Long.fromInt(1 << 24);
  });
};
goog.math.Long.prototype.toInt = function() {
  return this.low_;
};
goog.math.Long.prototype.toNumber = function() {
  return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
};
goog.math.Long.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  }
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      var radixLong = goog.math.Long.fromNumber(radix);
      var div = this.div(radixLong);
      var rem = div.multiply(radixLong).subtract(this);
      return div.toString(radix) + rem.toInt().toString(radix);
    } else {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.div(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Long.prototype.getHighBits = function() {
  return this.high_;
};
goog.math.Long.prototype.getLowBits = function() {
  return this.low_;
};
goog.math.Long.prototype.getLowBitsUnsigned = function() {
  return this.low_ >= 0 ? this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
};
goog.math.Long.prototype.getNumBitsAbs = function() {
  if (this.isNegative()) {
    if (this.equals(goog.math.Long.getMinValue())) {
      return 64;
    } else {
      return this.negate().getNumBitsAbs();
    }
  } else {
    var val = this.high_ != 0 ? this.high_ : this.low_;
    for (var bit = 31; bit > 0; bit--) {
      if ((val & 1 << bit) != 0) {
        break;
      }
    }
    return this.high_ != 0 ? bit + 33 : bit + 1;
  }
};
goog.math.Long.prototype.isZero = function() {
  return this.high_ == 0 && this.low_ == 0;
};
goog.math.Long.prototype.isNegative = function() {
  return this.high_ < 0;
};
goog.math.Long.prototype.isOdd = function() {
  return (this.low_ & 1) == 1;
};
goog.math.Long.prototype.equals = function(other) {
  return this.high_ == other.high_ && this.low_ == other.low_;
};
goog.math.Long.prototype.notEquals = function(other) {
  return this.high_ != other.high_ || this.low_ != other.low_;
};
goog.math.Long.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Long.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Long.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Long.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Long.prototype.compare = function(other) {
  if (this.equals(other)) {
    return 0;
  }
  var thisNeg = this.isNegative();
  var otherNeg = other.isNegative();
  if (thisNeg && !otherNeg) {
    return -1;
  }
  if (!thisNeg && otherNeg) {
    return 1;
  }
  if (this.subtract(other).isNegative()) {
    return -1;
  } else {
    return 1;
  }
};
goog.math.Long.prototype.negate = function() {
  if (this.equals(goog.math.Long.getMinValue())) {
    return goog.math.Long.getMinValue();
  } else {
    return this.not().add(goog.math.Long.getOne());
  }
};
goog.math.Long.prototype.add = function(other) {
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 + b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 + b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 + b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 + b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Long.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Long.getZero();
  } else {
    if (other.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    return other.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return this.isOdd() ? goog.math.Long.getMinValue() : goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Long.getTwoPwr24()) && other.lessThan(goog.math.Long.getTwoPwr24())) {
    return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
  }
  var a48 = this.high_ >>> 16;
  var a32 = this.high_ & 65535;
  var a16 = this.low_ >>> 16;
  var a00 = this.low_ & 65535;
  var b48 = other.high_ >>> 16;
  var b32 = other.high_ & 65535;
  var b16 = other.low_ >>> 16;
  var b00 = other.low_ & 65535;
  var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
  c00 += a00 * b00;
  c16 += c00 >>> 16;
  c00 &= 65535;
  c16 += a16 * b00;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c16 += a00 * b16;
  c32 += c16 >>> 16;
  c16 &= 65535;
  c32 += a32 * b00;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a16 * b16;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c32 += a00 * b32;
  c48 += c32 >>> 16;
  c32 &= 65535;
  c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
  c48 &= 65535;
  return goog.math.Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
};
goog.math.Long.prototype.div = function(other) {
  if (other.isZero()) {
    throw Error("division by zero");
  } else {
    if (this.isZero()) {
      return goog.math.Long.getZero();
    }
  }
  if (this.equals(goog.math.Long.getMinValue())) {
    if (other.equals(goog.math.Long.getOne()) || other.equals(goog.math.Long.getNegOne())) {
      return goog.math.Long.getMinValue();
    } else {
      if (other.equals(goog.math.Long.getMinValue())) {
        return goog.math.Long.getOne();
      } else {
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.getZero())) {
          return other.isNegative() ? goog.math.Long.getOne() : goog.math.Long.getNegOne();
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    }
  } else {
    if (other.equals(goog.math.Long.getMinValue())) {
      return goog.math.Long.getZero();
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().div(other.negate());
    } else {
      return this.negate().div(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
  }
  var res = goog.math.Long.getZero();
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Long.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Long.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Long.getOne();
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return res;
};
goog.math.Long.prototype.modulo = function(other) {
  return this.subtract(this.div(other).multiply(other));
};
goog.math.Long.prototype.not = function() {
  return goog.math.Long.fromBits(~this.low_, ~this.high_);
};
goog.math.Long.prototype.and = function(other) {
  return goog.math.Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
};
goog.math.Long.prototype.or = function(other) {
  return goog.math.Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
};
goog.math.Long.prototype.xor = function(other) {
  return goog.math.Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
};
goog.math.Long.prototype.shiftLeft = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var low = this.low_;
    if (numBits < 32) {
      var high = this.high_;
      return goog.math.Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
    } else {
      return goog.math.Long.fromBits(0, low << numBits - 32);
    }
  }
};
goog.math.Long.prototype.shiftRight = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
    } else {
      return goog.math.Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
    }
  }
};
goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
  numBits &= 63;
  if (numBits == 0) {
    return this;
  } else {
    var high = this.high_;
    if (numBits < 32) {
      var low = this.low_;
      return goog.math.Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
    } else {
      if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> numBits - 32, 0);
      }
    }
  }
};
goog.math.Long.ValueCacheId_ = {MAX_VALUE:1, MIN_VALUE:2, TWO_PWR_24:6};
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.Uri");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.10.597";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_unchecked_arrays_STAR_ = false;
cljs.core._STAR_warn_on_infer_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.PROTOCOL_SENTINEL !== "undefined") {
} else {
  cljs.core.PROTOCOL_SENTINEL = {};
}
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = null;
}
cljs.core._STAR_exec_tap_fn_STAR_ = function cljs$core$_STAR_exec_tap_fn_STAR_(f) {
  if (typeof setTimeout !== "undefined") {
    var and__7955__auto__ = setTimeout(f, 0);
    if (cljs.core.truth_(and__7955__auto__)) {
      return true;
    } else {
      return and__7955__auto__;
    }
  } else {
    return false;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = null;
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_namespace_maps_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core.set_print_fn_BANG_(function() {
    var xs = arguments;
    return console.log.apply(console, goog.array.clone(xs));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var xs = arguments;
    return console.error.apply(console, goog.array.clone(xs));
  });
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__7955__auto__ = ty;
    if (cljs.core.truth_(and__7955__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__7955__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4655__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4655__auto__)) {
    var s = temp__4655__auto__;
    return s;
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1.0E9 + t[1]) / 1000000.0;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var G__10277 = arguments.length;
  switch(G__10277) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10279 = arguments.length;
      var i__9175__auto___10280 = 0;
      while (true) {
        if (i__9175__auto___10280 < len__9174__auto___10279) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10280]);
          var G__10281 = i__9175__auto___10280 + 1;
          i__9175__auto___10280 = G__10281;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__8943__auto___10282 = dimarray.length;
  var i_10283 = 0;
  while (true) {
    if (i_10283 < n__8943__auto___10282) {
      dimarray[i_10283] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims);
      var G__10284 = i_10283 + 1;
      i_10283 = G__10284;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq10274) {
  var G__10275 = cljs.core.first(seq10274);
  var seq10274__$1 = cljs.core.next(seq10274);
  var G__10276 = cljs.core.first(seq10274__$1);
  var seq10274__$2 = cljs.core.next(seq10274__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10275, G__10276, seq10274__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__8943__auto___10285 = len;
  var i_10286 = 0;
  while (true) {
    if (i_10286 < n__8943__auto___10285) {
      new_arr[i_10286] = arr[i_10286];
      var G__10287 = i_10286 + 1;
      i_10286 = G__10287;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__10288 = i + 1;
      i = G__10288;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.maybe_warn = function cljs$core$maybe_warn(e) {
  if (cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)) {
    return cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(e) : cljs.core._STAR_print_err_fn_STAR_.call(null, e);
  } else {
    return null;
  }
};
cljs.core.checked_aget = function cljs$core$checked_aget(var_args) {
  var G__10293 = arguments.length;
  switch(G__10293) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10296 = arguments.length;
      var i__9175__auto___10297 = 0;
      while (true) {
        if (i__9175__auto___10297 < len__9174__auto___10296) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10297]);
          var G__10298 = i__9175__auto___10297 + 1;
          i__9175__auto___10297 = G__10298;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  try {
    if (cljs.core.truth_(function() {
      var or__7970__auto__ = cljs.core.array_QMARK_(array);
      if (or__7970__auto__) {
        return or__7970__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e10294) {
    var e_10299 = e10294;
    cljs.core.maybe_warn(e_10299);
  }
  return array[idx];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(seq10290) {
  var G__10291 = cljs.core.first(seq10290);
  var seq10290__$1 = cljs.core.next(seq10290);
  var G__10292 = cljs.core.first(seq10290__$1);
  var seq10290__$2 = cljs.core.next(seq10290__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10291, G__10292, seq10290__$2);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function cljs$core$checked_aset(var_args) {
  var G__10305 = arguments.length;
  switch(G__10305) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10308 = arguments.length;
      var i__9175__auto___10309 = 0;
      while (true) {
        if (i__9175__auto___10309 < len__9174__auto___10308) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10309]);
          var G__10310 = i__9175__auto___10309 + 1;
          i__9175__auto___10309 = G__10310;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  try {
    if (cljs.core.truth_(function() {
      var or__7970__auto__ = cljs.core.array_QMARK_(array);
      if (or__7970__auto__) {
        return or__7970__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e10306) {
    var e_10311 = e10306;
    cljs.core.maybe_warn(e_10311);
  }
  return array[idx] = val;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(seq10301) {
  var G__10302 = cljs.core.first(seq10301);
  var seq10301__$1 = cljs.core.next(seq10301);
  var G__10303 = cljs.core.first(seq10301__$1);
  var seq10301__$2 = cljs.core.next(seq10301__$1);
  var G__10304 = cljs.core.first(seq10301__$2);
  var seq10301__$3 = cljs.core.next(seq10301__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10302, G__10303, G__10304, seq10301__$3);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function cljs$core$checked_aget_SINGLEQUOTE_(var_args) {
  var G__10316 = arguments.length;
  switch(G__10316) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10318 = arguments.length;
      var i__9175__auto___10319 = 0;
      while (true) {
        if (i__9175__auto___10319 < len__9174__auto___10318) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10319]);
          var G__10320 = i__9175__auto___10319 + 1;
          i__9175__auto___10319 = G__10320;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  if (cljs.core.truth_(function() {
    var or__7970__auto__ = cljs.core.array_QMARK_(array);
    if (or__7970__auto__) {
      return or__7970__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(seq10313) {
  var G__10314 = cljs.core.first(seq10313);
  var seq10313__$1 = cljs.core.next(seq10313);
  var G__10315 = cljs.core.first(seq10313__$1);
  var seq10313__$2 = cljs.core.next(seq10313__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10314, G__10315, seq10313__$2);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function cljs$core$checked_aset_SINGLEQUOTE_(var_args) {
  var G__10326 = arguments.length;
  switch(G__10326) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10328 = arguments.length;
      var i__9175__auto___10329 = 0;
      while (true) {
        if (i__9175__auto___10329 < len__9174__auto___10328) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10329]);
          var G__10330 = i__9175__auto___10329 + 1;
          i__9175__auto___10329 = G__10330;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  if (cljs.core.truth_(function() {
    var or__7970__auto__ = cljs.core.array_QMARK_(array);
    if (or__7970__auto__) {
      return or__7970__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx] = val;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(seq10322) {
  var G__10323 = cljs.core.first(seq10322);
  var seq10322__$1 = cljs.core.next(seq10322);
  var G__10324 = cljs.core.first(seq10322__$1);
  var seq10322__$2 = cljs.core.next(seq10322__$1);
  var G__10325 = cljs.core.first(seq10322__$2);
  var seq10322__$3 = cljs.core.next(seq10322__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10323, G__10324, G__10325, seq10322__$3);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function cljs$core$aget(var_args) {
  var G__10335 = arguments.length;
  switch(G__10335) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10337 = arguments.length;
      var i__9175__auto___10338 = 0;
      while (true) {
        if (i__9175__auto___10338 < len__9174__auto___10337) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10338]);
          var G__10339 = i__9175__auto___10338 + 1;
          i__9175__auto___10338 = G__10339;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, array[idx], idxs);
};
cljs.core.aget.cljs$lang$applyTo = function(seq10332) {
  var G__10333 = cljs.core.first(seq10332);
  var seq10332__$1 = cljs.core.next(seq10332);
  var G__10334 = cljs.core.first(seq10332__$1);
  var seq10332__$2 = cljs.core.next(seq10332__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10333, G__10334, seq10332__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var G__10345 = arguments.length;
  switch(G__10345) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10347 = arguments.length;
      var i__9175__auto___10348 = 0;
      while (true) {
        if (i__9175__auto___10348 < len__9174__auto___10347) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10348]);
          var G__10349 = i__9175__auto___10348 + 1;
          i__9175__auto___10348 = G__10349;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, array[idx], idx2, idxv);
};
cljs.core.aset.cljs$lang$applyTo = function(seq10341) {
  var G__10342 = cljs.core.first(seq10341);
  var seq10341__$1 = cljs.core.next(seq10341);
  var G__10343 = cljs.core.first(seq10341__$1);
  var seq10341__$2 = cljs.core.next(seq10341__$1);
  var G__10344 = cljs.core.first(seq10341__$2);
  var seq10341__$3 = cljs.core.next(seq10341__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10342, G__10343, G__10344, seq10341__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var G__10351 = arguments.length;
  switch(G__10351) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
    a.push(x);
    return a;
  }, [], aseq);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___10356 = arguments.length;
  var i__9175__auto___10357 = 0;
  while (true) {
    if (i__9175__auto___10357 < len__9174__auto___10356) {
      args__9184__auto__.push(arguments[i__9175__auto___10357]);
      var G__10358 = i__9175__auto___10357 + 1;
      i__9175__auto___10357 = G__10358;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 2 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9185__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq10353) {
  var G__10354 = cljs.core.first(seq10353);
  var seq10353__$1 = cljs.core.next(seq10353);
  var G__10355 = cljs.core.first(seq10353__$1);
  var seq10353__$2 = cljs.core.next(seq10353__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10354, G__10355, seq10353__$2);
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var G__10360 = arguments.length;
  switch(G__10360) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__8669__auto__.call(null, this$);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__8666__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__8669__auto__.call(null, this$, a);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__8666__auto__.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__8669__auto__.call(null, this$, a, b);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__8666__auto__.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$4 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__8669__auto__.call(null, this$, a, b, c);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$4 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__8666__auto__.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$5 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__8669__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$5 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__8666__auto__.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$6 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__8669__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$6 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__8666__auto__.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$7 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__8669__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$7 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__8666__auto__.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$8 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$8 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$9 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$9 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$10 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$10 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$11 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$11 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$12 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$12 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$13 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$13 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$14 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$14 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$15 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$15 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$16 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$16 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$17 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$17 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$18 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$18 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$19 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$19 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$20 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$20 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$21 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$21 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._invoke[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$22 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__8669__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__8666__auto__ = cljs.core._invoke["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$22 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__8666__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__8668__auto__ = value == null ? null : value;
    var m__8669__auto__ = cljs.core._clone[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__8669__auto__.call(null, value);
    } else {
      var m__8666__auto__ = cljs.core._clone["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__8666__auto__.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = function() {
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._count[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._count["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = function() {
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._empty[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._empty["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = function() {
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._conj[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__8669__auto__.call(null, coll, o);
    } else {
      var m__8666__auto__ = cljs.core._conj["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__8666__auto__.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = function() {
};
cljs.core._nth = function cljs$core$_nth(var_args) {
  var G__10363 = arguments.length;
  switch(G__10363) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._nth[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__8669__auto__.call(null, coll, n);
    } else {
      var m__8666__auto__ = cljs.core._nth["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__8666__auto__.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._nth[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__8669__auto__.call(null, coll, n, not_found);
    } else {
      var m__8666__auto__ = cljs.core._nth["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__8666__auto__.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._first[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._first["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._rest[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._rest["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = function() {
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._next[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._next["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = function() {
};
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var G__10366 = arguments.length;
  switch(G__10366) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._lookup[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__8669__auto__.call(null, o, k);
    } else {
      var m__8666__auto__ = cljs.core._lookup["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__8666__auto__.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._lookup[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__8669__auto__.call(null, o, k, not_found);
    } else {
      var m__8666__auto__ = cljs.core._lookup["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__8666__auto__.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__8669__auto__.call(null, coll, k);
    } else {
      var m__8666__auto__ = cljs.core._contains_key_QMARK_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__8666__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._assoc[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__8669__auto__.call(null, coll, k, v);
    } else {
      var m__8666__auto__ = cljs.core._assoc["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__8666__auto__.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IFind = function() {
};
cljs.core._find = function cljs$core$_find(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IFind$_find$arity$2 == null)) {
    return coll.cljs$core$IFind$_find$arity$2(coll, k);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._find[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__8669__auto__.call(null, coll, k);
    } else {
      var m__8666__auto__ = cljs.core._find["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__8666__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IFind.-find", coll);
      }
    }
  }
};
cljs.core.IMap = function() {
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._dissoc[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__8669__auto__.call(null, coll, k);
    } else {
      var m__8666__auto__ = cljs.core._dissoc["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__8666__auto__.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = function() {
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._key[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._key["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._val[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._val["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = function() {
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._disjoin[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__8669__auto__.call(null, coll, v);
    } else {
      var m__8666__auto__ = cljs.core._disjoin["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__8666__auto__.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = function() {
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._peek[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._peek["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._pop[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._pop["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = function() {
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._assoc_n[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__8669__auto__.call(null, coll, n, val);
    } else {
      var m__8666__auto__ = cljs.core._assoc_n["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__8666__auto__.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = function() {
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._deref[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__8669__auto__.call(null, o);
    } else {
      var m__8666__auto__ = cljs.core._deref["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__8666__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = function() {
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__8669__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__8666__auto__ = cljs.core._deref_with_timeout["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__8666__auto__.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = function() {
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._meta[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__8669__auto__.call(null, o);
    } else {
      var m__8666__auto__ = cljs.core._meta["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__8666__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = function() {
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._with_meta[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__8669__auto__.call(null, o, meta);
    } else {
      var m__8666__auto__ = cljs.core._with_meta["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__8666__auto__.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = function() {
};
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var G__10369 = arguments.length;
  switch(G__10369) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._reduce[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__8669__auto__.call(null, coll, f);
    } else {
      var m__8666__auto__ = cljs.core._reduce["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__8666__auto__.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._reduce[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__8669__auto__.call(null, coll, f, start);
    } else {
      var m__8666__auto__ = cljs.core._reduce["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__8666__auto__.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._kv_reduce[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__8669__auto__.call(null, coll, f, init);
    } else {
      var m__8666__auto__ = cljs.core._kv_reduce["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__8666__auto__.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = function() {
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._equiv[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__8669__auto__.call(null, o, other);
    } else {
      var m__8666__auto__ = cljs.core._equiv["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__8666__auto__.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = function() {
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._hash[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__8669__auto__.call(null, o);
    } else {
      var m__8666__auto__ = cljs.core._hash["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__8666__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = function() {
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._seq[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__8669__auto__.call(null, o);
    } else {
      var m__8666__auto__ = cljs.core._seq["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__8666__auto__.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._rseq[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._rseq["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = function() {
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._sorted_seq[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__8669__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__8666__auto__ = cljs.core._sorted_seq["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__8666__auto__.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__8669__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__8666__auto__ = cljs.core._sorted_seq_from["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__8666__auto__.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._entry_key[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__8669__auto__.call(null, coll, entry);
    } else {
      var m__8666__auto__ = cljs.core._entry_key["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__8666__auto__.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._comparator[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._comparator["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = function() {
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__8668__auto__ = writer == null ? null : writer;
    var m__8669__auto__ = cljs.core._write[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__8669__auto__.call(null, writer, s);
    } else {
      var m__8666__auto__ = cljs.core._write["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__8666__auto__.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__8668__auto__ = writer == null ? null : writer;
    var m__8669__auto__ = cljs.core._flush[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__8669__auto__.call(null, writer);
    } else {
      var m__8666__auto__ = cljs.core._flush["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__8666__auto__.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = function() {
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._pr_writer[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__8669__auto__.call(null, o, writer, opts);
    } else {
      var m__8666__auto__ = cljs.core._pr_writer["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__8666__auto__.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = function() {
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    var x__8668__auto__ = x == null ? null : x;
    var m__8669__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8669__auto__.call(null, x);
    } else {
      var m__8666__auto__ = cljs.core._realized_QMARK_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8666__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", x);
      }
    }
  }
};
cljs.core.IWatchable = function() {
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._notify_watches[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__8669__auto__.call(null, this$, oldval, newval);
    } else {
      var m__8666__auto__ = cljs.core._notify_watches["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__8666__auto__.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._add_watch[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__8669__auto__.call(null, this$, key, f);
    } else {
      var m__8666__auto__ = cljs.core._add_watch["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__8666__auto__.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__8668__auto__ = this$ == null ? null : this$;
    var m__8669__auto__ = cljs.core._remove_watch[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__8669__auto__.call(null, this$, key);
    } else {
      var m__8666__auto__ = cljs.core._remove_watch["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__8666__auto__.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = function() {
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._as_transient[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._as_transient["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = function() {
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__8668__auto__ = tcoll == null ? null : tcoll;
    var m__8669__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__8669__auto__.call(null, tcoll, val);
    } else {
      var m__8666__auto__ = cljs.core._conj_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__8666__auto__.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__8668__auto__ = tcoll == null ? null : tcoll;
    var m__8669__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__8669__auto__.call(null, tcoll);
    } else {
      var m__8666__auto__ = cljs.core._persistent_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__8666__auto__.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = function() {
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__8668__auto__ = tcoll == null ? null : tcoll;
    var m__8669__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__8669__auto__.call(null, tcoll, key, val);
    } else {
      var m__8666__auto__ = cljs.core._assoc_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__8666__auto__.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = function() {
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__8668__auto__ = tcoll == null ? null : tcoll;
    var m__8669__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__8669__auto__.call(null, tcoll, key);
    } else {
      var m__8666__auto__ = cljs.core._dissoc_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__8666__auto__.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = function() {
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__8668__auto__ = tcoll == null ? null : tcoll;
    var m__8669__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__8669__auto__.call(null, tcoll, n, val);
    } else {
      var m__8666__auto__ = cljs.core._assoc_n_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__8666__auto__.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__8668__auto__ = tcoll == null ? null : tcoll;
    var m__8669__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__8669__auto__.call(null, tcoll);
    } else {
      var m__8666__auto__ = cljs.core._pop_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__8666__auto__.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = function() {
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__8668__auto__ = tcoll == null ? null : tcoll;
    var m__8669__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__8669__auto__.call(null, tcoll, v);
    } else {
      var m__8666__auto__ = cljs.core._disjoin_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__8666__auto__.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = function() {
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__8668__auto__ = x == null ? null : x;
    var m__8669__auto__ = cljs.core._compare[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__8669__auto__.call(null, x, y);
    } else {
      var m__8666__auto__ = cljs.core._compare["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__8666__auto__.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = function() {
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._drop_first[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._drop_first["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = function() {
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._chunked_first[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._chunked_first["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._chunked_rest[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._chunked_rest["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = function() {
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._chunked_next[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._chunked_next["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = function() {
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__8668__auto__ = x == null ? null : x;
    var m__8669__auto__ = cljs.core._name[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8669__auto__.call(null, x);
    } else {
      var m__8666__auto__ = cljs.core._name["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8666__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__8668__auto__ = x == null ? null : x;
    var m__8669__auto__ = cljs.core._namespace[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8669__auto__.call(null, x);
    } else {
      var m__8666__auto__ = cljs.core._namespace["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8666__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__8669__auto__.call(null, o, new_value);
    } else {
      var m__8666__auto__ = cljs.core._reset_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__8666__auto__.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = function() {
};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var G__10372 = arguments.length;
  switch(G__10372) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__8669__auto__.call(null, o, f);
    } else {
      var m__8666__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__8666__auto__.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__8669__auto__.call(null, o, f, a);
    } else {
      var m__8666__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__8666__auto__.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$4 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__8669__auto__.call(null, o, f, a, b);
    } else {
      var m__8666__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$4 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__8666__auto__.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$5 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__8669__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__8666__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$5 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__8666__auto__.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__8668__auto__ = o == null ? null : o;
    var m__8669__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__8669__auto__.call(null, o, new_value);
    } else {
      var m__8666__auto__ = cljs.core._vreset_BANG_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__8666__auto__.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = function() {
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__8668__auto__ = coll == null ? null : coll;
    var m__8669__auto__ = cljs.core._iterator[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8669__auto__.call(null, coll);
    } else {
      var m__8666__auto__ = cljs.core._iterator["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__8666__auto__.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math !== "undefined" && typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__10374 = i + 2;
        var G__10375 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__10374;
        h1 = G__10375;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__10378 = i + 1;
          var G__10379 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__10378;
          hash = G__10379;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  goog.object.set(cljs.core.string_hash_cache, k, h);
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__10383 = o;
        switch(G__10383) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf() ^ 0;
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o) ^ 0;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(cljs.core.not(a.ns) ? b.ns : false)) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__10386 = null;
  var G__10386__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
  };
  var G__10386__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__10386 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10386__2.call(this, self__, coll);
      case 3:
        return G__10386__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__10386.cljs$core$IFn$_invoke$arity$2 = G__10386__2;
  G__10386.cljs$core$IFn$_invoke$arity$3 = G__10386__3;
  return G__10386;
}();
cljs.core.Symbol.prototype.apply = function(self__, args10385) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10385)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__8430__auto__ = self__._hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var G__10388 = arguments.length;
  switch(G__10388) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  while (true) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      if (typeof name === "string") {
        var idx = name.indexOf("/");
        if (idx < 1) {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
        } else {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
        }
      } else {
        if (cljs.core.var_QMARK_(name)) {
          return name.sym;
        } else {
          if (name instanceof cljs.core.Keyword) {
            var G__10390 = name.fqn;
            name = G__10390;
            continue;
          } else {
            throw new Error("no conversion to symbol");
          }
        }
      }
    }
    break;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.sym, other.sym);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var G__10434 = null;
  var G__10434__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10392 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10392.cljs$core$IFn$_invoke$arity$0 ? fexpr__10392.cljs$core$IFn$_invoke$arity$0() : fexpr__10392.call(null);
  };
  var G__10434__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10393 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10393.cljs$core$IFn$_invoke$arity$1 ? fexpr__10393.cljs$core$IFn$_invoke$arity$1(a) : fexpr__10393.call(null, a);
  };
  var G__10434__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10394 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10394.cljs$core$IFn$_invoke$arity$2 ? fexpr__10394.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__10394.call(null, a, b);
  };
  var G__10434__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10395 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10395.cljs$core$IFn$_invoke$arity$3 ? fexpr__10395.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__10395.call(null, a, b, c);
  };
  var G__10434__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10396 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10396.cljs$core$IFn$_invoke$arity$4 ? fexpr__10396.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__10396.call(null, a, b, c, d);
  };
  var G__10434__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10397 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10397.cljs$core$IFn$_invoke$arity$5 ? fexpr__10397.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__10397.call(null, a, b, c, d, e);
  };
  var G__10434__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10398 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10398.cljs$core$IFn$_invoke$arity$6 ? fexpr__10398.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__10398.call(null, a, b, c, d, e, f);
  };
  var G__10434__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10399 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10399.cljs$core$IFn$_invoke$arity$7 ? fexpr__10399.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__10399.call(null, a, b, c, d, e, f, g);
  };
  var G__10434__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10400 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10400.cljs$core$IFn$_invoke$arity$8 ? fexpr__10400.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__10400.call(null, a, b, c, d, e, f, g, h);
  };
  var G__10434__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10401 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10401.cljs$core$IFn$_invoke$arity$9 ? fexpr__10401.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__10401.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__10434__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10402 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10402.cljs$core$IFn$_invoke$arity$10 ? fexpr__10402.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__10402.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__10434__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10403 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10403.cljs$core$IFn$_invoke$arity$11 ? fexpr__10403.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__10403.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__10434__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10404 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10404.cljs$core$IFn$_invoke$arity$12 ? fexpr__10404.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__10404.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__10434__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10405 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10405.cljs$core$IFn$_invoke$arity$13 ? fexpr__10405.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__10405.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__10434__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10406 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10406.cljs$core$IFn$_invoke$arity$14 ? fexpr__10406.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__10406.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__10434__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10407 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10407.cljs$core$IFn$_invoke$arity$15 ? fexpr__10407.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__10407.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__10434__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10408 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10408.cljs$core$IFn$_invoke$arity$16 ? fexpr__10408.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__10408.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__10434__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10409 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10409.cljs$core$IFn$_invoke$arity$17 ? fexpr__10409.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__10409.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__10434__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10410 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10410.cljs$core$IFn$_invoke$arity$18 ? fexpr__10410.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__10410.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__10434__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10411 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10411.cljs$core$IFn$_invoke$arity$19 ? fexpr__10411.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__10411.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__10434__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__10412 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__10412.cljs$core$IFn$_invoke$arity$20 ? fexpr__10412.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__10412.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__10434__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__10434 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10434__1.call(this, self__);
      case 2:
        return G__10434__2.call(this, self__, a);
      case 3:
        return G__10434__3.call(this, self__, a, b);
      case 4:
        return G__10434__4.call(this, self__, a, b, c);
      case 5:
        return G__10434__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10434__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10434__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10434__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10434__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10434__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10434__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10434__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10434__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10434__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10434__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10434__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10434__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10434__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10434__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10434__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10434__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10434__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__10434.cljs$core$IFn$_invoke$arity$1 = G__10434__1;
  G__10434.cljs$core$IFn$_invoke$arity$2 = G__10434__2;
  G__10434.cljs$core$IFn$_invoke$arity$3 = G__10434__3;
  G__10434.cljs$core$IFn$_invoke$arity$4 = G__10434__4;
  G__10434.cljs$core$IFn$_invoke$arity$5 = G__10434__5;
  G__10434.cljs$core$IFn$_invoke$arity$6 = G__10434__6;
  G__10434.cljs$core$IFn$_invoke$arity$7 = G__10434__7;
  G__10434.cljs$core$IFn$_invoke$arity$8 = G__10434__8;
  G__10434.cljs$core$IFn$_invoke$arity$9 = G__10434__9;
  G__10434.cljs$core$IFn$_invoke$arity$10 = G__10434__10;
  G__10434.cljs$core$IFn$_invoke$arity$11 = G__10434__11;
  G__10434.cljs$core$IFn$_invoke$arity$12 = G__10434__12;
  G__10434.cljs$core$IFn$_invoke$arity$13 = G__10434__13;
  G__10434.cljs$core$IFn$_invoke$arity$14 = G__10434__14;
  G__10434.cljs$core$IFn$_invoke$arity$15 = G__10434__15;
  G__10434.cljs$core$IFn$_invoke$arity$16 = G__10434__16;
  G__10434.cljs$core$IFn$_invoke$arity$17 = G__10434__17;
  G__10434.cljs$core$IFn$_invoke$arity$18 = G__10434__18;
  G__10434.cljs$core$IFn$_invoke$arity$19 = G__10434__19;
  G__10434.cljs$core$IFn$_invoke$arity$20 = G__10434__20;
  G__10434.cljs$core$IFn$_invoke$arity$21 = G__10434__21;
  G__10434.cljs$core$IFn$_invoke$arity$22 = G__10434__22;
  return G__10434;
}();
cljs.core.Var.prototype.apply = function(self__, args10391) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10391)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  var fexpr__10413 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10413.cljs$core$IFn$_invoke$arity$0 ? fexpr__10413.cljs$core$IFn$_invoke$arity$0() : fexpr__10413.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var fexpr__10414 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10414.cljs$core$IFn$_invoke$arity$1 ? fexpr__10414.cljs$core$IFn$_invoke$arity$1(a) : fexpr__10414.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var fexpr__10415 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10415.cljs$core$IFn$_invoke$arity$2 ? fexpr__10415.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__10415.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var fexpr__10416 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10416.cljs$core$IFn$_invoke$arity$3 ? fexpr__10416.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__10416.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var fexpr__10417 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10417.cljs$core$IFn$_invoke$arity$4 ? fexpr__10417.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__10417.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var fexpr__10418 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10418.cljs$core$IFn$_invoke$arity$5 ? fexpr__10418.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__10418.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var fexpr__10419 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10419.cljs$core$IFn$_invoke$arity$6 ? fexpr__10419.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__10419.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var fexpr__10420 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10420.cljs$core$IFn$_invoke$arity$7 ? fexpr__10420.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__10420.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var fexpr__10421 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10421.cljs$core$IFn$_invoke$arity$8 ? fexpr__10421.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__10421.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var fexpr__10422 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10422.cljs$core$IFn$_invoke$arity$9 ? fexpr__10422.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__10422.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var fexpr__10423 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10423.cljs$core$IFn$_invoke$arity$10 ? fexpr__10423.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__10423.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var fexpr__10424 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10424.cljs$core$IFn$_invoke$arity$11 ? fexpr__10424.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__10424.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var fexpr__10425 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10425.cljs$core$IFn$_invoke$arity$12 ? fexpr__10425.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__10425.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var fexpr__10426 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10426.cljs$core$IFn$_invoke$arity$13 ? fexpr__10426.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__10426.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var fexpr__10427 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10427.cljs$core$IFn$_invoke$arity$14 ? fexpr__10427.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__10427.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var fexpr__10428 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10428.cljs$core$IFn$_invoke$arity$15 ? fexpr__10428.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__10428.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var fexpr__10429 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10429.cljs$core$IFn$_invoke$arity$16 ? fexpr__10429.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__10429.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var fexpr__10430 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10430.cljs$core$IFn$_invoke$arity$17 ? fexpr__10430.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__10430.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var fexpr__10431 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10431.cljs$core$IFn$_invoke$arity$18 ? fexpr__10431.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__10431.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var fexpr__10432 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10432.cljs$core$IFn$_invoke$arity$19 ? fexpr__10432.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__10432.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var fexpr__10433 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__10433.cljs$core$IFn$_invoke$arity$20 ? fexpr__10433.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__10433.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll), " is not ISeqable"].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return s.cljs$core$ISeq$_rest$arity$1(null);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var G__10445 = arguments.length;
  switch(G__10445) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10447 = arguments.length;
      var i__9175__auto___10448 = 0;
      while (true) {
        if (i__9175__auto___10448 < len__9174__auto___10447) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10448]);
          var G__10449 = i__9175__auto___10448 + 1;
          i__9175__auto___10448 = G__10449;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__10450 = y;
        var G__10451 = cljs.core.first(more);
        var G__10452 = cljs.core.next(more);
        x = G__10450;
        y = G__10451;
        more = G__10452;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq10442) {
  var G__10443 = cljs.core.first(seq10442);
  var seq10442__$1 = cljs.core.next(seq10442);
  var G__10444 = cljs.core.first(seq10442__$1);
  var seq10442__$2 = cljs.core.next(seq10442__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10443, G__10444, seq10442__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq(self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10453 = n + 1;
      var G__10454 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__10455 = cljs.core.next(coll__$1);
      n = G__10453;
      hash_code = G__10454;
      coll__$1 = G__10455;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10456 = n + 1;
      var G__10457 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__10458 = cljs.core.next(coll__$1);
      n = G__10456;
      hash_code = G__10457;
      coll__$1 = G__10458;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", true);
goog.object.set(cljs.core._count, "null", function(_) {
  return 0;
});
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    return goog.array.defaultCompare(this$__$1.valueOf(), other.valueOf());
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    var x__8668__auto__ = inst == null ? null : inst;
    var m__8669__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__8669__auto__.call(null, inst);
    } else {
      var m__8666__auto__ = cljs.core.inst_ms_STAR_["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__8666__auto__.call(null, inst);
      } else {
        throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
      }
    }
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
goog.object.set(cljs.core.IEquiv, "number", true);
goog.object.set(cljs.core._equiv, "number", function(x, o) {
  return x === o;
});
goog.object.set(cljs.core.Fn, "function", true);
goog.object.set(cljs.core.IMeta, "function", true);
goog.object.set(cljs.core._meta, "function", function(_) {
  return null;
});
goog.object.set(cljs.core.IHash, "_", true);
goog.object.set(cljs.core._hash, "_", function(o) {
  return goog.getUid(o);
});
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var G__10461 = arguments.length;
  switch(G__10461) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cicoll.cljs$core$IIndexed$_nth$arity$2(null, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10462 = val;
          var G__10463 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10462, G__10463) : f.call(null, G__10462, G__10463);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10467 = nval;
          var G__10468 = n + 1;
          val = G__10467;
          n = G__10468;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__10464 = val__$1;
        var G__10465 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10464, G__10465) : f.call(null, G__10464, G__10465);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__10469 = nval;
        var G__10470 = n + 1;
        val__$1 = G__10469;
        n = G__10470;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var G__10472 = arguments.length;
  switch(G__10472) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10473 = val;
          var G__10474 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10473, G__10474) : f.call(null, G__10473, G__10474);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10480 = nval;
          var G__10481 = n + 1;
          val = G__10480;
          n = G__10481;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__10475 = val__$1;
        var G__10476 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10475, G__10476) : f.call(null, G__10475, G__10476);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__10482 = nval;
        var G__10483 = n + 1;
        val__$1 = G__10482;
        n = G__10483;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__10477 = val__$1;
        var G__10478 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10477, G__10478) : f.call(null, G__10477, G__10478);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__10484 = nval;
        var G__10485 = n + 1;
        val__$1 = G__10484;
        n = G__10485;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var G__10489 = arguments.length;
  switch(G__10489) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__8326__auto__ = 0;
      var y__8327__auto__ = start + len;
      return x__8326__auto__ > y__8327__auto__ ? x__8326__auto__ : y__8327__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__10491 = idx + 1;
          idx = G__10491;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var G__10493 = arguments.length;
  switch(G__10493) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__8333__auto__ = len - 1;
      var y__8334__auto__ = start;
      return x__8333__auto__ < y__8334__auto__ ? x__8333__auto__ : y__8334__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__10495 = idx - 1;
          idx = G__10495;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__10496 = null;
  var G__10496__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10496__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10496 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10496__1.call(this, x);
      case 2:
        return G__10496__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10496.cljs$core$IFn$_invoke$arity$1 = G__10496__1;
  G__10496.cljs$core$IFn$_invoke$arity$2 = G__10496__2;
  return G__10496;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__10497 = null;
  var G__10497__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10497__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10497 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10497__1.call(this, x);
      case 2:
        return G__10497__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10497.cljs$core$IFn$_invoke$arity$1 = G__10497__1;
  G__10497.cljs$core$IFn$_invoke$arity$2 = G__10497__2;
  return G__10497;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    throw new Error("Index out of bounds");
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__8326__auto__ = 0;
  var y__8327__auto__ = self__.arr.length - self__.i;
  return x__8326__auto__ > y__8327__auto__ ? x__8326__auto__ : y__8327__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = coll__$1.cljs$core$ICounted$_count$arity$1(null);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
goog.object.set(cljs.core.IndexedSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var G__10499 = arguments.length;
  switch(G__10499) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var G__10502 = arguments.length;
  switch(G__10502) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__10504 = null;
  var G__10504__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10504__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10504 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10504__1.call(this, x);
      case 2:
        return G__10504__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10504.cljs$core$IFn$_invoke$arity$1 = G__10504__1;
  G__10504.cljs$core$IFn$_invoke$arity$2 = G__10504__2;
  return G__10504;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__10505 = null;
  var G__10505__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10505__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10505 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10505__1.call(this, x);
      case 2:
        return G__10505__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10505.cljs$core$IFn$_invoke$arity$1 = G__10505__1;
  G__10505.cljs$core$IFn$_invoke$arity$2 = G__10505__2;
  return G__10505;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
goog.object.set(cljs.core.RSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__10506 = sn;
      s = G__10506;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
goog.object.set(cljs.core.IEquiv, "_", true);
goog.object.set(cljs.core._equiv, "_", function(x, o) {
  return x === o;
});
cljs.core.conj = function cljs$core$conj(var_args) {
  var G__10511 = arguments.length;
  switch(G__10511) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10513 = arguments.length;
      var i__9175__auto___10514 = 0;
      while (true) {
        if (i__9175__auto___10514 < len__9174__auto___10513) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10514]);
          var G__10515 = i__9175__auto___10514 + 1;
          i__9175__auto___10514 = G__10515;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return new cljs.core.List(null, x, null, 1, null);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__10516 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__10517 = cljs.core.first(xs);
      var G__10518 = cljs.core.next(xs);
      coll = G__10516;
      x = G__10517;
      xs = G__10518;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq10508) {
  var G__10509 = cljs.core.first(seq10508);
  var seq10508__$1 = cljs.core.next(seq10508);
  var G__10510 = cljs.core.first(seq10508__$1);
  var seq10508__$2 = cljs.core.next(seq10508__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10509, G__10510, seq10508__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : false : false) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : !coll.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll)) {
        return cljs.core._empty(coll);
      } else {
        return null;
      }
    }
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__10521 = cljs.core.next(s);
      var G__10522 = acc + 1;
      s = G__10521;
      acc = G__10522;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var G__10526 = arguments.length;
  switch(G__10526) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__10528 = cljs.core.next(coll);
            var G__10529 = n - 1;
            coll = G__10528;
            n = G__10529;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__10530 = cljs.core.next(coll);
            var G__10531 = n - 1;
            var G__10532 = not_found;
            coll = G__10530;
            n = G__10531;
            not_found = G__10532;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var G__10534 = arguments.length;
  switch(G__10534) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (function() {
              var or__7970__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__7970__auto__) {
                return or__7970__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                throw new Error("Index out of bounds");
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              return not_found;
            }
          } else {
            if (function() {
              var or__7970__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__7970__auto__) {
                return or__7970__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                return not_found;
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    var temp__4655__auto__ = n__$1 > 0 && cljs.core.seq(xs);
    if (temp__4655__auto__) {
      var xs__$1 = temp__4655__auto__;
      var G__10544 = n__$1 - 1;
      var G__10545 = cljs.core.rest(xs__$1);
      n__$1 = G__10544;
      xs = G__10545;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var G__10547 = arguments.length;
  switch(G__10547) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && k < o.length) {
            return o.charAt(k | 0);
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && (-1 < k && k < o.length)) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var G__10556 = arguments.length;
  switch(G__10556) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10559 = arguments.length;
      var i__9175__auto___10560 = 0;
      while (true) {
        if (i__9175__auto___10560 < len__9174__auto___10559) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10560]);
          var G__10561 = i__9175__auto___10560 + 1;
          i__9175__auto___10560 = G__10561;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IAssociative$ ? true : false : false) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(null, k, v);
  } else {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentArrayMap.createAsIfByAssoc([k, v]);
    }
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__10562 = ret;
      var G__10563 = cljs.core.first(kvs);
      var G__10564 = cljs.core.second(kvs);
      var G__10565 = cljs.core.nnext(kvs);
      coll = G__10562;
      k = G__10563;
      v = G__10564;
      kvs = G__10565;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq10552) {
  var G__10553 = cljs.core.first(seq10552);
  var seq10552__$1 = cljs.core.next(seq10552);
  var G__10554 = cljs.core.first(seq10552__$1);
  var seq10552__$2 = cljs.core.next(seq10552__$1);
  var G__10555 = cljs.core.first(seq10552__$2);
  var seq10552__$3 = cljs.core.next(seq10552__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10553, G__10554, G__10555, seq10552__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var G__10570 = arguments.length;
  switch(G__10570) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10572 = arguments.length;
      var i__9175__auto___10573 = 0;
      while (true) {
        if (i__9175__auto___10573 < len__9174__auto___10572) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10573]);
          var G__10574 = i__9175__auto___10573 + 1;
          i__9175__auto___10573 = G__10574;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__10575 = ret;
        var G__10576 = cljs.core.first(ks);
        var G__10577 = cljs.core.next(ks);
        coll = G__10575;
        k = G__10576;
        ks = G__10577;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq10567) {
  var G__10568 = cljs.core.first(seq10567);
  var seq10567__$1 = cljs.core.next(seq10567);
  var G__10569 = cljs.core.first(seq10567__$1);
  var seq10567__$2 = cljs.core.next(seq10567__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10568, G__10569, seq10567__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__7970__auto__ = goog.isFunction(f);
  if (or__7970__auto__) {
    return or__7970__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var G__10581 = null;
  var G__10581__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__10581__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__10581__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__10581__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__10581__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__10581__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__10581__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__10581__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__10581__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__10581__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__10581__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__10581__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__10581__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__10581__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__10581__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__10581__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__10581__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__10581__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__10581__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__10581__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__10581__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__10581__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__10581 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10581__1.call(this, self__);
      case 2:
        return G__10581__2.call(this, self__, a);
      case 3:
        return G__10581__3.call(this, self__, a, b);
      case 4:
        return G__10581__4.call(this, self__, a, b, c);
      case 5:
        return G__10581__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10581__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10581__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10581__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10581__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10581__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10581__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10581__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10581__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10581__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10581__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10581__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10581__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10581__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10581__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10581__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10581__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10581__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__10581.cljs$core$IFn$_invoke$arity$1 = G__10581__1;
  G__10581.cljs$core$IFn$_invoke$arity$2 = G__10581__2;
  G__10581.cljs$core$IFn$_invoke$arity$3 = G__10581__3;
  G__10581.cljs$core$IFn$_invoke$arity$4 = G__10581__4;
  G__10581.cljs$core$IFn$_invoke$arity$5 = G__10581__5;
  G__10581.cljs$core$IFn$_invoke$arity$6 = G__10581__6;
  G__10581.cljs$core$IFn$_invoke$arity$7 = G__10581__7;
  G__10581.cljs$core$IFn$_invoke$arity$8 = G__10581__8;
  G__10581.cljs$core$IFn$_invoke$arity$9 = G__10581__9;
  G__10581.cljs$core$IFn$_invoke$arity$10 = G__10581__10;
  G__10581.cljs$core$IFn$_invoke$arity$11 = G__10581__11;
  G__10581.cljs$core$IFn$_invoke$arity$12 = G__10581__12;
  G__10581.cljs$core$IFn$_invoke$arity$13 = G__10581__13;
  G__10581.cljs$core$IFn$_invoke$arity$14 = G__10581__14;
  G__10581.cljs$core$IFn$_invoke$arity$15 = G__10581__15;
  G__10581.cljs$core$IFn$_invoke$arity$16 = G__10581__16;
  G__10581.cljs$core$IFn$_invoke$arity$17 = G__10581__17;
  G__10581.cljs$core$IFn$_invoke$arity$18 = G__10581__18;
  G__10581.cljs$core$IFn$_invoke$arity$19 = G__10581__19;
  G__10581.cljs$core$IFn$_invoke$arity$20 = G__10581__20;
  G__10581.cljs$core$IFn$_invoke$arity$21 = G__10581__21;
  G__10581.cljs$core$IFn$_invoke$arity$22 = G__10581__22;
  return G__10581;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args10580) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10580)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (!(o == null) ? !(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o) : false) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var G__10588 = arguments.length;
  switch(G__10588) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10590 = arguments.length;
      var i__9175__auto___10591 = 0;
      while (true) {
        if (i__9175__auto___10591 < len__9174__auto___10590) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10591]);
          var G__10592 = i__9175__auto___10591 + 1;
          i__9175__auto___10591 = G__10592;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__10593 = ret;
        var G__10594 = cljs.core.first(ks);
        var G__10595 = cljs.core.next(ks);
        coll = G__10593;
        k = G__10594;
        ks = G__10595;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq10585) {
  var G__10586 = cljs.core.first(seq10585);
  var seq10585__$1 = cljs.core.next(seq10585);
  var G__10587 = cljs.core.first(seq10585__$1);
  var seq10585__$2 = cljs.core.next(seq10585__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10586, G__10587, seq10585__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.ifind_QMARK_ = function cljs$core$ifind_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IFind$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var G__10609 = arguments.length;
  switch(G__10609) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10613 = arguments.length;
      var i__9175__auto___10614 = 0;
      while (true) {
        if (i__9175__auto___10614 < len__9174__auto___10613) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10614]);
          var G__10615 = i__9175__auto___10614 + 1;
          i__9175__auto___10614 = G__10615;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__9200__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq10608) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10608));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  return goog.object.getKeys(obj);
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10616 = i__$1 + 1;
      var G__10617 = j__$1 + 1;
      var G__10618 = len__$1 - 1;
      i__$1 = G__10616;
      j__$1 = G__10617;
      len__$1 = G__10618;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10619 = i__$1 - 1;
      var G__10620 = j__$1 - 1;
      var G__10621 = len__$1 - 1;
      i__$1 = G__10619;
      j__$1 = G__10620;
      len__$1 = G__10621;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var or__7970__auto__ = s == null;
  if (or__7970__auto__) {
    return or__7970__auto__;
  } else {
    var or__7970__auto____$1 = !(s == null) ? s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$ ? true : !s.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
    if (or__7970__auto____$1) {
      return or__7970__auto____$1;
    } else {
      return cljs.core.array_QMARK_(s) || typeof s === "string";
    }
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__7970__auto__ = cljs.core.fn_QMARK_(f);
  if (or__7970__auto__) {
    return or__7970__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0);
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative());
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (cljs.core.ifind_QMARK_(coll)) {
    return cljs.core._find(coll, k);
  } else {
    if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
      return new cljs.core.MapEntry(k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k), null);
    } else {
      return null;
    }
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var G__10634 = arguments.length;
  switch(G__10634) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10636 = arguments.length;
      var i__9175__auto___10637 = 0;
      while (true) {
        if (i__9175__auto___10637 < len__9174__auto___10636) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10637]);
          var G__10638 = i__9175__auto___10637 + 1;
          i__9175__auto___10637 = G__10638;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.createAsIfByAssoc([x, y]);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__10639 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__10640 = etc;
          s = G__10639;
          xs = G__10640;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq10631) {
  var G__10632 = cljs.core.first(seq10631);
  var seq10631__$1 = cljs.core.next(seq10631);
  var G__10633 = cljs.core.first(seq10631__$1);
  var seq10631__$2 = cljs.core.next(seq10631__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10632, G__10633, seq10631__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var G__10643 = arguments.length;
  switch(G__10643) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__10645 = xs;
      var G__10646 = ys;
      var G__10647 = len;
      var G__10648 = n + 1;
      xs = G__10645;
      ys = G__10646;
      len = G__10647;
      n = G__10648;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var G__10650 = arguments.length;
  switch(G__10650) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array(coll);
    goog.array.stableSort(a, cljs.core.fn__GT_comparator(comp));
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var G__10653 = arguments.length;
  switch(G__10653) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    var G__10655 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x);
    var G__10656 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y);
    var fexpr__10654 = cljs.core.fn__GT_comparator(comp);
    return fexpr__10654.cljs$core$IFn$_invoke$arity$2 ? fexpr__10654.cljs$core$IFn$_invoke$arity$2(G__10655, G__10656) : fexpr__10654.call(null, G__10655, G__10656);
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var G__10659 = arguments.length;
  switch(G__10659) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var s = temp__4655__auto__;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s));
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__10660 = val__$1;
        var G__10661 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10660, G__10661) : f.call(null, G__10660, G__10661);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__10663 = nval;
        var G__10664 = cljs.core.next(coll__$1);
        val__$1 = G__10663;
        coll__$1 = G__10664;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array(coll);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function cljs$core$iter_reduce(var_args) {
  var G__10666 = arguments.length;
  switch(G__10666) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  var iter = cljs.core._iterator(coll);
  if (cljs.core.truth_(iter.hasNext())) {
    var init = iter.next();
    var acc = init;
    while (true) {
      if (iter.hasNext()) {
        var nacc = function() {
          var G__10667 = acc;
          var G__10668 = iter.next();
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10667, G__10668) : f.call(null, G__10667, G__10668);
        }();
        if (cljs.core.reduced_QMARK_(nacc)) {
          return cljs.core.deref(nacc);
        } else {
          var G__10672 = nacc;
          acc = G__10672;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, init) {
  var iter = cljs.core._iterator(coll);
  var acc = init;
  while (true) {
    if (iter.hasNext()) {
      var nacc = function() {
        var G__10669 = acc;
        var G__10670 = iter.next();
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10669, G__10670) : f.call(null, G__10669, G__10670);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__10673 = nacc;
        acc = G__10673;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var G__10675 = arguments.length;
  switch(G__10675) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var G__10680 = arguments.length;
  switch(G__10680) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__10682 = null;
    var G__10682__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__10682__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__10682__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__10682 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__10682__0.call(this);
        case 1:
          return G__10682__1.call(this, x);
        case 2:
          return G__10682__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10682.cljs$core$IFn$_invoke$arity$0 = G__10682__0;
    G__10682.cljs$core$IFn$_invoke$arity$1 = G__10682__1;
    G__10682.cljs$core$IFn$_invoke$arity$2 = G__10682__2;
    return G__10682;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var G__10684 = arguments.length;
  switch(G__10684) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var G__10690 = arguments.length;
  switch(G__10690) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10692 = arguments.length;
      var i__9175__auto___10693 = 0;
      while (true) {
        if (i__9175__auto___10693 < len__9174__auto___10692) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10693]);
          var G__10694 = i__9175__auto___10693 + 1;
          i__9175__auto___10693 = G__10694;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq10687) {
  var G__10688 = cljs.core.first(seq10687);
  var seq10687__$1 = cljs.core.next(seq10687);
  var G__10689 = cljs.core.first(seq10687__$1);
  var seq10687__$2 = cljs.core.next(seq10687__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10688, G__10689, seq10687__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var G__10699 = arguments.length;
  switch(G__10699) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10701 = arguments.length;
      var i__9175__auto___10702 = 0;
      while (true) {
        if (i__9175__auto___10702 < len__9174__auto___10701) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10702]);
          var G__10703 = i__9175__auto___10702 + 1;
          i__9175__auto___10702 = G__10703;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq10696) {
  var G__10697 = cljs.core.first(seq10696);
  var seq10696__$1 = cljs.core.next(seq10696);
  var G__10698 = cljs.core.first(seq10696__$1);
  var seq10696__$2 = cljs.core.next(seq10696__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10697, G__10698, seq10696__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var G__10708 = arguments.length;
  switch(G__10708) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10710 = arguments.length;
      var i__9175__auto___10711 = 0;
      while (true) {
        if (i__9175__auto___10711 < len__9174__auto___10710) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10711]);
          var G__10712 = i__9175__auto___10711 + 1;
          i__9175__auto___10711 = G__10712;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq10705) {
  var G__10706 = cljs.core.first(seq10705);
  var seq10705__$1 = cljs.core.next(seq10705);
  var G__10707 = cljs.core.first(seq10705__$1);
  var seq10705__$2 = cljs.core.next(seq10705__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10706, G__10707, seq10705__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var G__10717 = arguments.length;
  switch(G__10717) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10719 = arguments.length;
      var i__9175__auto___10720 = 0;
      while (true) {
        if (i__9175__auto___10720 < len__9174__auto___10719) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10720]);
          var G__10721 = i__9175__auto___10720 + 1;
          i__9175__auto___10720 = G__10721;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq10714) {
  var G__10715 = cljs.core.first(seq10714);
  var seq10714__$1 = cljs.core.next(seq10714);
  var G__10716 = cljs.core.first(seq10714__$1);
  var seq10714__$2 = cljs.core.next(seq10714__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10715, G__10716, seq10714__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var G__10726 = arguments.length;
  switch(G__10726) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10728 = arguments.length;
      var i__9175__auto___10729 = 0;
      while (true) {
        if (i__9175__auto___10729 < len__9174__auto___10728) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10729]);
          var G__10730 = i__9175__auto___10729 + 1;
          i__9175__auto___10729 = G__10730;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__10731 = y;
        var G__10732 = cljs.core.first(more);
        var G__10733 = cljs.core.next(more);
        x = G__10731;
        y = G__10732;
        more = G__10733;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq10723) {
  var G__10724 = cljs.core.first(seq10723);
  var seq10723__$1 = cljs.core.next(seq10723);
  var G__10725 = cljs.core.first(seq10723__$1);
  var seq10723__$2 = cljs.core.next(seq10723__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10724, G__10725, seq10723__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var G__10738 = arguments.length;
  switch(G__10738) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10740 = arguments.length;
      var i__9175__auto___10741 = 0;
      while (true) {
        if (i__9175__auto___10741 < len__9174__auto___10740) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10741]);
          var G__10742 = i__9175__auto___10741 + 1;
          i__9175__auto___10741 = G__10742;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__10743 = y;
        var G__10744 = cljs.core.first(more);
        var G__10745 = cljs.core.next(more);
        x = G__10743;
        y = G__10744;
        more = G__10745;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq10735) {
  var G__10736 = cljs.core.first(seq10735);
  var seq10735__$1 = cljs.core.next(seq10735);
  var G__10737 = cljs.core.first(seq10735__$1);
  var seq10735__$2 = cljs.core.next(seq10735__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10736, G__10737, seq10735__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var G__10750 = arguments.length;
  switch(G__10750) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10752 = arguments.length;
      var i__9175__auto___10753 = 0;
      while (true) {
        if (i__9175__auto___10753 < len__9174__auto___10752) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10753]);
          var G__10754 = i__9175__auto___10753 + 1;
          i__9175__auto___10753 = G__10754;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__10755 = y;
        var G__10756 = cljs.core.first(more);
        var G__10757 = cljs.core.next(more);
        x = G__10755;
        y = G__10756;
        more = G__10757;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq10747) {
  var G__10748 = cljs.core.first(seq10747);
  var seq10747__$1 = cljs.core.next(seq10747);
  var G__10749 = cljs.core.first(seq10747__$1);
  var seq10747__$2 = cljs.core.next(seq10747__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10748, G__10749, seq10747__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var G__10762 = arguments.length;
  switch(G__10762) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10764 = arguments.length;
      var i__9175__auto___10765 = 0;
      while (true) {
        if (i__9175__auto___10765 < len__9174__auto___10764) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10765]);
          var G__10766 = i__9175__auto___10765 + 1;
          i__9175__auto___10765 = G__10766;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__10767 = y;
        var G__10768 = cljs.core.first(more);
        var G__10769 = cljs.core.next(more);
        x = G__10767;
        y = G__10768;
        more = G__10769;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq10759) {
  var G__10760 = cljs.core.first(seq10759);
  var seq10759__$1 = cljs.core.next(seq10759);
  var G__10761 = cljs.core.first(seq10759__$1);
  var seq10759__$2 = cljs.core.next(seq10759__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10760, G__10761, seq10759__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var G__10774 = arguments.length;
  switch(G__10774) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10776 = arguments.length;
      var i__9175__auto___10777 = 0;
      while (true) {
        if (i__9175__auto___10777 < len__9174__auto___10776) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10777]);
          var G__10778 = i__9175__auto___10777 + 1;
          i__9175__auto___10777 = G__10778;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__8326__auto__ = x;
  var y__8327__auto__ = y;
  return x__8326__auto__ > y__8327__auto__ ? x__8326__auto__ : y__8327__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__8326__auto__ = x;
    var y__8327__auto__ = y;
    return x__8326__auto__ > y__8327__auto__ ? x__8326__auto__ : y__8327__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq10771) {
  var G__10772 = cljs.core.first(seq10771);
  var seq10771__$1 = cljs.core.next(seq10771);
  var G__10773 = cljs.core.first(seq10771__$1);
  var seq10771__$2 = cljs.core.next(seq10771__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10772, G__10773, seq10771__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var G__10783 = arguments.length;
  switch(G__10783) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10785 = arguments.length;
      var i__9175__auto___10786 = 0;
      while (true) {
        if (i__9175__auto___10786 < len__9174__auto___10785) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10786]);
          var G__10787 = i__9175__auto___10786 + 1;
          i__9175__auto___10786 = G__10787;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__8333__auto__ = x;
  var y__8334__auto__ = y;
  return x__8333__auto__ < y__8334__auto__ ? x__8333__auto__ : y__8334__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__8333__auto__ = x;
    var y__8334__auto__ = y;
    return x__8333__auto__ < y__8334__auto__ ? x__8333__auto__ : y__8334__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq10780) {
  var G__10781 = cljs.core.first(seq10780);
  var seq10780__$1 = cljs.core.next(seq10780);
  var G__10782 = cljs.core.first(seq10780__$1);
  var seq10780__$2 = cljs.core.next(seq10780__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10781, G__10782, seq10780__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var G__10792 = arguments.length;
  switch(G__10792) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10794 = arguments.length;
      var i__9175__auto___10795 = 0;
      while (true) {
        if (i__9175__auto___10795 < len__9174__auto___10794) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10795]);
          var G__10796 = i__9175__auto___10795 + 1;
          i__9175__auto___10795 = G__10796;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq10789) {
  var G__10790 = cljs.core.first(seq10789);
  var seq10789__$1 = cljs.core.next(seq10789);
  var G__10791 = cljs.core.first(seq10789__$1);
  var seq10789__$2 = cljs.core.next(seq10789__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10790, G__10791, seq10789__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var G__10801 = arguments.length;
  switch(G__10801) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10803 = arguments.length;
      var i__9175__auto___10804 = 0;
      while (true) {
        if (i__9175__auto___10804 < len__9174__auto___10803) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10804]);
          var G__10805 = i__9175__auto___10804 + 1;
          i__9175__auto___10804 = G__10805;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq10798) {
  var G__10799 = cljs.core.first(seq10798);
  var seq10798__$1 = cljs.core.next(seq10798);
  var G__10800 = cljs.core.first(seq10798__$1);
  var seq10798__$2 = cljs.core.next(seq10798__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10799, G__10800, seq10798__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var G__10810 = arguments.length;
  switch(G__10810) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10812 = arguments.length;
      var i__9175__auto___10813 = 0;
      while (true) {
        if (i__9175__auto___10813 < len__9174__auto___10812) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10813]);
          var G__10814 = i__9175__auto___10813 + 1;
          i__9175__auto___10813 = G__10814;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq10807) {
  var G__10808 = cljs.core.first(seq10807);
  var seq10807__$1 = cljs.core.next(seq10807);
  var G__10809 = cljs.core.first(seq10807__$1);
  var seq10807__$2 = cljs.core.next(seq10807__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10808, G__10809, seq10807__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var G__10819 = arguments.length;
  switch(G__10819) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10821 = arguments.length;
      var i__9175__auto___10822 = 0;
      while (true) {
        if (i__9175__auto___10822 < len__9174__auto___10821) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10822]);
          var G__10823 = i__9175__auto___10822 + 1;
          i__9175__auto___10822 = G__10823;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq10816) {
  var G__10817 = cljs.core.first(seq10816);
  var seq10816__$1 = cljs.core.next(seq10816);
  var G__10818 = cljs.core.first(seq10816__$1);
  var seq10816__$2 = cljs.core.next(seq10816__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10817, G__10818, seq10816__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var G__10828 = arguments.length;
  switch(G__10828) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10830 = arguments.length;
      var i__9175__auto___10831 = 0;
      while (true) {
        if (i__9175__auto___10831 < len__9174__auto___10830) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10831]);
          var G__10832 = i__9175__auto___10831 + 1;
          i__9175__auto___10831 = G__10832;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq10825) {
  var G__10826 = cljs.core.first(seq10825);
  var seq10825__$1 = cljs.core.next(seq10825);
  var G__10827 = cljs.core.first(seq10825__$1);
  var seq10825__$2 = cljs.core.next(seq10825__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10826, G__10827, seq10825__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod(x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var G__10837 = arguments.length;
  switch(G__10837) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10839 = arguments.length;
      var i__9175__auto___10840 = 0;
      while (true) {
        if (i__9175__auto___10840 < len__9174__auto___10839) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10840]);
          var G__10841 = i__9175__auto___10840 + 1;
          i__9175__auto___10840 = G__10841;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq10834) {
  var G__10835 = cljs.core.first(seq10834);
  var seq10834__$1 = cljs.core.next(seq10834);
  var G__10836 = cljs.core.first(seq10834__$1);
  var seq10834__$2 = cljs.core.next(seq10834__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10835, G__10836, seq10834__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var G__10846 = arguments.length;
  switch(G__10846) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10848 = arguments.length;
      var i__9175__auto___10849 = 0;
      while (true) {
        if (i__9175__auto___10849 < len__9174__auto___10848) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10849]);
          var G__10850 = i__9175__auto___10849 + 1;
          i__9175__auto___10849 = G__10850;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq10843) {
  var G__10844 = cljs.core.first(seq10843);
  var seq10843__$1 = cljs.core.next(seq10843);
  var G__10845 = cljs.core.first(seq10843__$1);
  var seq10843__$2 = cljs.core.next(seq10843__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10844, G__10845, seq10843__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var G__10855 = arguments.length;
  switch(G__10855) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10857 = arguments.length;
      var i__9175__auto___10858 = 0;
      while (true) {
        if (i__9175__auto___10858 < len__9174__auto___10857) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10858]);
          var G__10859 = i__9175__auto___10858 + 1;
          i__9175__auto___10858 = G__10859;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq10852) {
  var G__10853 = cljs.core.first(seq10852);
  var seq10852__$1 = cljs.core.next(seq10852);
  var G__10854 = cljs.core.first(seq10852__$1);
  var seq10852__$2 = cljs.core.next(seq10852__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10853, G__10854, seq10852__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var G__10864 = arguments.length;
  switch(G__10864) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10866 = arguments.length;
      var i__9175__auto___10867 = 0;
      while (true) {
        if (i__9175__auto___10867 < len__9174__auto___10866) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10867]);
          var G__10868 = i__9175__auto___10867 + 1;
          i__9175__auto___10867 = G__10868;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq10861) {
  var G__10862 = cljs.core.first(seq10861);
  var seq10861__$1 = cljs.core.next(seq10861);
  var G__10863 = cljs.core.first(seq10861__$1);
  var seq10861__$2 = cljs.core.next(seq10861__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10862, G__10863, seq10861__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var G__10873 = arguments.length;
  switch(G__10873) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10875 = arguments.length;
      var i__9175__auto___10876 = 0;
      while (true) {
        if (i__9175__auto___10876 < len__9174__auto___10875) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10876]);
          var G__10877 = i__9175__auto___10876 + 1;
          i__9175__auto___10876 = G__10877;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq10870) {
  var G__10871 = cljs.core.first(seq10870);
  var seq10870__$1 = cljs.core.next(seq10870);
  var G__10872 = cljs.core.first(seq10870__$1);
  var seq10870__$2 = cljs.core.next(seq10870__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10871, G__10872, seq10870__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var G__10882 = arguments.length;
  switch(G__10882) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10884 = arguments.length;
      var i__9175__auto___10885 = 0;
      while (true) {
        if (i__9175__auto___10885 < len__9174__auto___10884) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10885]);
          var G__10886 = i__9175__auto___10885 + 1;
          i__9175__auto___10885 = G__10886;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq10879) {
  var G__10880 = cljs.core.first(seq10879);
  var seq10879__$1 = cljs.core.next(seq10879);
  var G__10881 = cljs.core.first(seq10879__$1);
  var seq10879__$2 = cljs.core.next(seq10879__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10880, G__10881, seq10879__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var G__10891 = arguments.length;
  switch(G__10891) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10893 = arguments.length;
      var i__9175__auto___10894 = 0;
      while (true) {
        if (i__9175__auto___10894 < len__9174__auto___10893) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10894]);
          var G__10895 = i__9175__auto___10894 + 1;
          i__9175__auto___10894 = G__10895;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__10896 = y;
        var G__10897 = cljs.core.first(more);
        var G__10898 = cljs.core.next(more);
        x = G__10896;
        y = G__10897;
        more = G__10898;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq10888) {
  var G__10889 = cljs.core.first(seq10888);
  var seq10888__$1 = cljs.core.next(seq10888);
  var G__10890 = cljs.core.first(seq10888__$1);
  var seq10888__$2 = cljs.core.next(seq10888__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10889, G__10890, seq10888__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__10899 = n__$1 - 1;
      var G__10900 = cljs.core.next(xs);
      n__$1 = G__10899;
      xs = G__10900;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var G__10904 = arguments.length;
  switch(G__10904) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___10906 = arguments.length;
      var i__9175__auto___10907 = 0;
      while (true) {
        if (i__9175__auto___10907 < len__9174__auto___10906) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___10907]);
          var G__10908 = i__9175__auto___10907 + 1;
          i__9175__auto___10907 = G__10908;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9200__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__10909 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
      var G__10910 = cljs.core.next(more);
      sb = G__10909;
      more = G__10910;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq10902) {
  var G__10903 = cljs.core.first(seq10902);
  var seq10902__$1 = cljs.core.next(seq10902);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10903, seq10902__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var G__10912 = arguments.length;
  switch(G__10912) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__10914 = cljs.core.next(xs);
            var G__10915 = cljs.core.next(ys);
            xs = G__10914;
            ys = G__10915;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__10916 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__10917 = cljs.core.next(s);
        res = G__10916;
        s = G__10917;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__10918 = (h + (cljs.core.hash(cljs.core.key(e)) ^ cljs.core.hash(cljs.core.val(e)))) % 4503599627370496;
      var G__10919 = cljs.core.next(s);
      h = G__10918;
      s = G__10919;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__10920 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__10921 = cljs.core.next(s__$1);
      h = G__10920;
      s__$1 = G__10921;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__10922_10938 = cljs.core.seq(fn_map);
  var chunk__10923_10939 = null;
  var count__10924_10940 = 0;
  var i__10925_10941 = 0;
  while (true) {
    if (i__10925_10941 < count__10924_10940) {
      var vec__10932_10942 = chunk__10923_10939.cljs$core$IIndexed$_nth$arity$2(null, i__10925_10941);
      var key_name_10943 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10932_10942, 0, null);
      var f_10944 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10932_10942, 1, null);
      var str_name_10945 = cljs.core.name(key_name_10943);
      goog.object.set(obj, str_name_10945, f_10944);
      var G__10946 = seq__10922_10938;
      var G__10947 = chunk__10923_10939;
      var G__10948 = count__10924_10940;
      var G__10949 = i__10925_10941 + 1;
      seq__10922_10938 = G__10946;
      chunk__10923_10939 = G__10947;
      count__10924_10940 = G__10948;
      i__10925_10941 = G__10949;
      continue;
    } else {
      var temp__4657__auto___10950 = cljs.core.seq(seq__10922_10938);
      if (temp__4657__auto___10950) {
        var seq__10922_10951__$1 = temp__4657__auto___10950;
        if (cljs.core.chunked_seq_QMARK_(seq__10922_10951__$1)) {
          var c__8838__auto___10952 = cljs.core.chunk_first(seq__10922_10951__$1);
          var G__10953 = cljs.core.chunk_rest(seq__10922_10951__$1);
          var G__10954 = c__8838__auto___10952;
          var G__10955 = cljs.core.count(c__8838__auto___10952);
          var G__10956 = 0;
          seq__10922_10938 = G__10953;
          chunk__10923_10939 = G__10954;
          count__10924_10940 = G__10955;
          i__10925_10941 = G__10956;
          continue;
        } else {
          var vec__10935_10957 = cljs.core.first(seq__10922_10951__$1);
          var key_name_10958 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10935_10957, 0, null);
          var f_10959 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10935_10957, 1, null);
          var str_name_10960 = cljs.core.name(key_name_10958);
          goog.object.set(obj, str_name_10960, f_10959);
          var G__10961 = cljs.core.next(seq__10922_10951__$1);
          var G__10962 = null;
          var G__10963 = 0;
          var G__10964 = 0;
          seq__10922_10938 = G__10961;
          chunk__10923_10939 = G__10962;
          count__10924_10940 = G__10963;
          i__10925_10941 = G__10964;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__10965 = null;
  var G__10965__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10965__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10965 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10965__1.call(this, x);
      case 2:
        return G__10965__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10965.cljs$core$IFn$_invoke$arity$1 = G__10965__1;
  G__10965.cljs$core$IFn$_invoke$arity$2 = G__10965__2;
  return G__10965;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__10966 = null;
  var G__10966__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__10966__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10966 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10966__1.call(this, x);
      case 2:
        return G__10966__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10966.cljs$core$IFn$_invoke$arity$1 = G__10966__1;
  G__10966.cljs$core$IFn$_invoke$arity$2 = G__10966__2;
  return G__10966;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.List(new_meta, self__.first, self__.rest, self__.count, self__.__hash);
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
goog.object.set(cljs.core.List.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__10968 = null;
  var G__10968__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10968__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10968 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10968__1.call(this, x);
      case 2:
        return G__10968__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10968.cljs$core$IFn$_invoke$arity$1 = G__10968__1;
  G__10968.cljs$core$IFn$_invoke$arity$2 = G__10968__2;
  return G__10968;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__10969 = null;
  var G__10969__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10969__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10969 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10969__1.call(this, x);
      case 2:
        return G__10969__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10969.cljs$core$IFn$_invoke$arity$1 = G__10969__1;
  G__10969.cljs$core$IFn$_invoke$arity$2 = G__10969__2;
  return G__10969;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.EmptyList(new_meta);
  }
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
goog.object.set(cljs.core.EmptyList.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    var or__7970__auto__ = cljs.core.rseq(coll);
    if (or__7970__auto__) {
      return or__7970__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___10972 = arguments.length;
  var i__9175__auto___10973 = 0;
  while (true) {
    if (i__9175__auto___10973 < len__9174__auto___10972) {
      args__9184__auto__.push(arguments[i__9175__auto___10973]);
      var G__10974 = i__9175__auto___10973 + 1;
      i__9175__auto___10973 = G__10974;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(cljs.core._first(xs__$1));
        var G__10975 = cljs.core._next(xs__$1);
        xs__$1 = G__10975;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__10976 = i - 1;
      var G__10977 = cljs.core._conj(r, arr[i - 1]);
      i = G__10976;
      r = G__10977;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq10971) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10971));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__10978 = null;
  var G__10978__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10978__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10978 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10978__1.call(this, x);
      case 2:
        return G__10978__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10978.cljs$core$IFn$_invoke$arity$1 = G__10978__1;
  G__10978.cljs$core$IFn$_invoke$arity$2 = G__10978__2;
  return G__10978;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__10979 = null;
  var G__10979__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10979__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10979 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10979__1.call(this, x);
      case 2:
        return G__10979__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10979.cljs$core$IFn$_invoke$arity$1 = G__10979__1;
  G__10979.cljs$core$IFn$_invoke$arity$2 = G__10979__2;
  return G__10979;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cons(new_meta, self__.first, self__.rest, self__.__hash);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
goog.object.set(cljs.core.Cons.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (coll == null) {
    return new cljs.core.List(null, x, null, 1, null);
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return new cljs.core.Cons(null, x, coll, null);
    } else {
      return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
    }
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(cljs.core.not(a.ns) ? b.ns : false)) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__10982 = null;
  var G__10982__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__10982__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__10982 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10982__2.call(this, self__, coll);
      case 3:
        return G__10982__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__10982.cljs$core$IFn$_invoke$arity$2 = G__10982__2;
  G__10982.cljs$core$IFn$_invoke$arity$3 = G__10982__3;
  return G__10982;
}();
cljs.core.Keyword.prototype.apply = function(self__, args10981) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10981)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__8430__auto__ = self__._hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  return cljs.core.boolean$(cljs.core.ident_QMARK_(x) ? function() {
    var and__7955__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__7955__auto__)) {
      return true;
    } else {
      return and__7955__auto__;
    }
  }() : false);
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  return cljs.core.boolean$(x instanceof cljs.core.Symbol ? function() {
    var and__7955__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__7955__auto__)) {
      return true;
    } else {
      return and__7955__auto__;
    }
  }() : false);
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  return cljs.core.boolean$(x instanceof cljs.core.Keyword ? function() {
    var and__7955__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__7955__auto__)) {
      return true;
    } else {
      return and__7955__auto__;
    }
  }() : false);
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var G__10985 = arguments.length;
  switch(G__10985) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name(name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name(ns) : ns instanceof cljs.core.Symbol ? cljs.core.name(ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name(name) : name instanceof cljs.core.Symbol ? cljs.core.name(name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.truth_(ns__$1) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), "/"].join("") : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__10987 = null;
  var G__10987__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10987__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10987 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10987__1.call(this, x);
      case 2:
        return G__10987__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10987.cljs$core$IFn$_invoke$arity$1 = G__10987__1;
  G__10987.cljs$core$IFn$_invoke$arity$2 = G__10987__2;
  return G__10987;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__10988 = null;
  var G__10988__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10988__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10988 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10988__1.call(this, x);
      case 2:
        return G__10988__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10988.cljs$core$IFn$_invoke$arity$1 = G__10988__1;
  G__10988.cljs$core$IFn$_invoke$arity$2 = G__10988__2;
  return G__10988;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__10989 = ls.sval();
        ls = G__10989;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.LazySeq(new_meta, function() {
      return coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
    }, null, self__.__hash);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
goog.object.set(cljs.core.LazySeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var G__10991 = arguments.length;
  switch(G__10991) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__10993 = null;
  var G__10993__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__10993__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10993 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10993__1.call(this, x);
      case 2:
        return G__10993__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10993.cljs$core$IFn$_invoke$arity$1 = G__10993__1;
  G__10993.cljs$core$IFn$_invoke$arity$2 = G__10993__2;
  return G__10993;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__10994 = null;
  var G__10994__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__10994__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__10994 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__10994__1.call(this, x);
      case 2:
        return G__10994__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10994.cljs$core$IFn$_invoke$arity$1 = G__10994__1;
  G__10994.cljs$core$IFn$_invoke$arity$2 = G__10994__2;
  return G__10994;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return null;
    } else {
      return cljs.core._seq(self__.more);
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ChunkedCons(self__.chunk, self__.more, new_meta, self__.__hash);
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
goog.object.set(cljs.core.ChunkedCons.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return s.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(coll) {
  var ary = [];
  var s = cljs.core.seq(coll);
  while (true) {
    if (!(s == null)) {
      ary.push(cljs.core.first(s));
      var G__10996 = cljs.core.next(s);
      s = G__10996;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_10997 = 0;
  var xs_10998 = cljs.core.seq(coll);
  while (true) {
    if (xs_10998 == null) {
    } else {
      ret[i_10997] = cljs.core.to_array(cljs.core.first(xs_10998));
      var G__10999 = i_10997 + 1;
      var G__11000 = cljs.core.next(xs_10998);
      i_10997 = G__10999;
      xs_10998 = G__11000;
      continue;
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var G__11002 = arguments.length;
  switch(G__11002) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__11004 = i + 1;
        var G__11005 = cljs.core.next(s__$1);
        i = G__11004;
        s__$1 = G__11005;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__8943__auto___11006 = size;
    var i_11007 = 0;
    while (true) {
      if (i_11007 < n__8943__auto___11006) {
        a[i_11007] = init_val_or_seq;
        var G__11008 = i_11007 + 1;
        i_11007 = G__11008;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var G__11010 = arguments.length;
  switch(G__11010) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__11012 = i + 1;
        var G__11013 = cljs.core.next(s__$1);
        i = G__11012;
        s__$1 = G__11013;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__8943__auto___11014 = size;
    var i_11015 = 0;
    while (true) {
      if (i_11015 < n__8943__auto___11014) {
        a[i_11015] = init_val_or_seq;
        var G__11016 = i_11015 + 1;
        i_11015 = G__11016;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var G__11018 = arguments.length;
  switch(G__11018) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__11020 = i + 1;
        var G__11021 = cljs.core.next(s__$1);
        i = G__11020;
        s__$1 = G__11021;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__8943__auto___11022 = size;
    var i_11023 = 0;
    while (true) {
      if (i_11023 < n__8943__auto___11022) {
        a[i_11023] = init_val_or_seq;
        var G__11024 = i_11023 + 1;
        i_11023 = G__11024;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var G__11026 = arguments.length;
  switch(G__11026) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__11028 = i + 1;
        var G__11029 = cljs.core.next(s__$1);
        i = G__11028;
        s__$1 = G__11029;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__8943__auto___11030 = size;
    var i_11031 = 0;
    while (true) {
      if (i_11031 < n__8943__auto___11030) {
        a[i_11031] = init_val_or_seq;
        var G__11032 = i_11031 + 1;
        i_11031 = G__11032;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__11033 = i + 1;
        var G__11034 = cljs.core.next(s);
        i = G__11033;
        s = G__11034;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    var n = cljs.core.next(arglist);
    if (n == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null, n));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var G__11039 = arguments.length;
  switch(G__11039) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11041 = arguments.length;
      var i__9175__auto___11042 = 0;
      while (true) {
        if (i__9175__auto___11042 < len__9174__auto___11041) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11042]);
          var G__11043 = i__9175__auto___11042 + 1;
          i__9175__auto___11042 = G__11043;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq11036) {
  var G__11037 = cljs.core.first(seq11036);
  var seq11036__$1 = cljs.core.next(seq11036);
  var G__11038 = cljs.core.first(seq11036__$1);
  var seq11036__$2 = cljs.core.next(seq11036__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11037, G__11038, seq11036__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var G__11050 = arguments.length;
  switch(G__11050) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11052 = arguments.length;
      var i__9175__auto___11053 = 0;
      while (true) {
        if (i__9175__auto___11053 < len__9174__auto___11052) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11053]);
          var G__11054 = i__9175__auto___11053 + 1;
          i__9175__auto___11053 = G__11054;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9200__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq11045) {
  var G__11046 = cljs.core.first(seq11045);
  var seq11045__$1 = cljs.core.next(seq11045);
  var G__11047 = cljs.core.first(seq11045__$1);
  var seq11045__$2 = cljs.core.next(seq11045__$1);
  var G__11048 = cljs.core.first(seq11045__$2);
  var seq11045__$3 = cljs.core.next(seq11045__$2);
  var G__11049 = cljs.core.first(seq11045__$3);
  var seq11045__$4 = cljs.core.next(seq11045__$3);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11046, G__11047, G__11048, G__11049, seq11045__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var G__11059 = arguments.length;
  switch(G__11059) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11061 = arguments.length;
      var i__9175__auto___11062 = 0;
      while (true) {
        if (i__9175__auto___11062 < len__9174__auto___11061) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11062]);
          var G__11063 = i__9175__auto___11062 + 1;
          i__9175__auto___11062 = G__11063;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__11064 = ntcoll;
      var G__11065 = cljs.core.first(vals);
      var G__11066 = cljs.core.next(vals);
      tcoll = G__11064;
      val = G__11065;
      vals = G__11066;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq11056) {
  var G__11057 = cljs.core.first(seq11056);
  var seq11056__$1 = cljs.core.next(seq11056);
  var G__11058 = cljs.core.first(seq11056__$1);
  var seq11056__$2 = cljs.core.next(seq11056__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11057, G__11058, seq11056__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var G__11072 = arguments.length;
  switch(G__11072) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11074 = arguments.length;
      var i__9175__auto___11075 = 0;
      while (true) {
        if (i__9175__auto___11075 < len__9174__auto___11074) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11075]);
          var G__11076 = i__9175__auto___11075 + 1;
          i__9175__auto___11075 = G__11076;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__11077 = ntcoll;
      var G__11078 = cljs.core.first(kvs);
      var G__11079 = cljs.core.second(kvs);
      var G__11080 = cljs.core.nnext(kvs);
      tcoll = G__11077;
      key = G__11078;
      val = G__11079;
      kvs = G__11080;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq11068) {
  var G__11069 = cljs.core.first(seq11068);
  var seq11068__$1 = cljs.core.next(seq11068);
  var G__11070 = cljs.core.first(seq11068__$1);
  var seq11068__$2 = cljs.core.next(seq11068__$1);
  var G__11071 = cljs.core.first(seq11068__$2);
  var seq11068__$3 = cljs.core.next(seq11068__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11069, G__11070, G__11071, seq11068__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var G__11085 = arguments.length;
  switch(G__11085) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11087 = arguments.length;
      var i__9175__auto___11088 = 0;
      while (true) {
        if (i__9175__auto___11088 < len__9174__auto___11087) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11088]);
          var G__11089 = i__9175__auto___11088 + 1;
          i__9175__auto___11088 = G__11089;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__11090 = ntcoll;
      var G__11091 = cljs.core.first(ks);
      var G__11092 = cljs.core.next(ks);
      tcoll = G__11090;
      key = G__11091;
      ks = G__11092;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq11082) {
  var G__11083 = cljs.core.first(seq11082);
  var seq11082__$1 = cljs.core.next(seq11082);
  var G__11084 = cljs.core.first(seq11082__$1);
  var seq11082__$2 = cljs.core.next(seq11082__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11083, G__11084, seq11082__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var G__11097 = arguments.length;
  switch(G__11097) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11099 = arguments.length;
      var i__9175__auto___11100 = 0;
      while (true) {
        if (i__9175__auto___11100 < len__9174__auto___11099) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11100]);
          var G__11101 = i__9175__auto___11100 + 1;
          i__9175__auto___11100 = G__11101;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__11102 = ntcoll;
      var G__11103 = cljs.core.first(vals);
      var G__11104 = cljs.core.next(vals);
      tcoll = G__11102;
      val = G__11103;
      vals = G__11104;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq11094) {
  var G__11095 = cljs.core.first(seq11094);
  var seq11094__$1 = cljs.core.next(seq11094);
  var G__11096 = cljs.core.first(seq11094__$1);
  var seq11094__$2 = cljs.core.next(seq11094__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11095, G__11096, seq11094__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a8987 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a8987) : f.call(null, a8987);
    } else {
      var b8988 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a8987, b8988) : f.call(null, a8987, b8988);
      } else {
        var c8989 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a8987, b8988, c8989) : f.call(null, a8987, b8988, c8989);
        } else {
          var d8990 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a8987, b8988, c8989, d8990) : f.call(null, a8987, b8988, c8989, d8990);
          } else {
            var e8991 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a8987, b8988, c8989, d8990, e8991) : f.call(null, a8987, b8988, c8989, d8990, e8991);
            } else {
              var f8992 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a8987, b8988, c8989, d8990, e8991, f8992) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992);
              } else {
                var g8993 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a8987, b8988, c8989, d8990, e8991, f8992, g8993) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993);
                } else {
                  var h8994 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994);
                  } else {
                    var i8995 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995);
                    } else {
                      var j8996 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996);
                      } else {
                        var k8997 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997);
                        } else {
                          var l8998 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998);
                          } else {
                            var m8999 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999);
                            } else {
                              var n9000 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000);
                              } else {
                                var o9001 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001);
                                } else {
                                  var p9002 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002);
                                  } else {
                                    var q9003 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002, q9003) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002, q9003);
                                    } else {
                                      var r9004 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002, q9003, r9004) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002, q9003, r9004);
                                      } else {
                                        var s9005 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002, q9003, r9004, s9005) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002, q9003, r9004, s9005);
                                        } else {
                                          var t9006 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002, q9003, r9004, s9005, t9006) : f.call(null, a8987, b8988, c8989, d8990, e8991, f8992, g8993, h8994, i8995, j8996, k8997, l8998, m8999, n9000, o9001, p9002, q9003, r9004, s9005, t9006);
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.next_STAR_ = function cljs$core$next_STAR_(coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
    return coll.cljs$core$INext$_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core.rest(coll));
  }
};
cljs.core.apply_to_simple = function cljs$core$apply_to_simple(var_args) {
  var G__11107 = arguments.length;
  switch(G__11107) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$0) {
      return f.cljs$core$IFn$_invoke$arity$0();
    } else {
      return f.call(f);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(f, a0, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$1) {
      return f.cljs$core$IFn$_invoke$arity$1(a0);
    } else {
      return f.call(f, a0);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, a0, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(f, a0, a1, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$2) {
      return f.cljs$core$IFn$_invoke$arity$2(a0, a1);
    } else {
      return f.call(f, a0, a1);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, a0, a1, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(f, a0, a1, a2, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$3) {
      return f.cljs$core$IFn$_invoke$arity$3(a0, a1, a2);
    } else {
      return f.call(f, a0, a1, a2);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a0, a1, a2, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(f, a0, a1, a2, a3, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$4) {
      return f.cljs$core$IFn$_invoke$arity$4(a0, a1, a2, a3);
    } else {
      return f.call(f, a0, a1, a2, a3);
    }
  } else {
    var a4 = cljs.core._first(args);
    var next_4 = cljs.core.next(args);
    if (next_4 == null) {
      if (f.cljs$core$IFn$_invoke$arity$5) {
        return f.cljs$core$IFn$_invoke$arity$5(a0, a1, a2, a3, a4);
      } else {
        return f.call(f, a0, a1, a2, a3, a4);
      }
    } else {
      var a5 = cljs.core._first(next_4);
      var next_5 = cljs.core.next(next_4);
      if (next_5 == null) {
        if (f.cljs$core$IFn$_invoke$arity$6) {
          return f.cljs$core$IFn$_invoke$arity$6(a0, a1, a2, a3, a4, a5);
        } else {
          return f.call(f, a0, a1, a2, a3, a4, a5);
        }
      } else {
        var a6 = cljs.core._first(next_5);
        var next_6 = cljs.core.next(next_5);
        if (next_6 == null) {
          if (f.cljs$core$IFn$_invoke$arity$7) {
            return f.cljs$core$IFn$_invoke$arity$7(a0, a1, a2, a3, a4, a5, a6);
          } else {
            return f.call(f, a0, a1, a2, a3, a4, a5, a6);
          }
        } else {
          var a7 = cljs.core._first(next_6);
          var next_7 = cljs.core.next(next_6);
          if (next_7 == null) {
            if (f.cljs$core$IFn$_invoke$arity$8) {
              return f.cljs$core$IFn$_invoke$arity$8(a0, a1, a2, a3, a4, a5, a6, a7);
            } else {
              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7);
            }
          } else {
            var a8 = cljs.core._first(next_7);
            var next_8 = cljs.core.next(next_7);
            if (next_8 == null) {
              if (f.cljs$core$IFn$_invoke$arity$9) {
                return f.cljs$core$IFn$_invoke$arity$9(a0, a1, a2, a3, a4, a5, a6, a7, a8);
              } else {
                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8);
              }
            } else {
              var a9 = cljs.core._first(next_8);
              var next_9 = cljs.core.next(next_8);
              if (next_9 == null) {
                if (f.cljs$core$IFn$_invoke$arity$10) {
                  return f.cljs$core$IFn$_invoke$arity$10(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                } else {
                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                }
              } else {
                var a10 = cljs.core._first(next_9);
                var next_10 = cljs.core.next(next_9);
                if (next_10 == null) {
                  if (f.cljs$core$IFn$_invoke$arity$11) {
                    return f.cljs$core$IFn$_invoke$arity$11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  } else {
                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  }
                } else {
                  var a11 = cljs.core._first(next_10);
                  var next_11 = cljs.core.next(next_10);
                  if (next_11 == null) {
                    if (f.cljs$core$IFn$_invoke$arity$12) {
                      return f.cljs$core$IFn$_invoke$arity$12(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    } else {
                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    }
                  } else {
                    var a12 = cljs.core._first(next_11);
                    var next_12 = cljs.core.next(next_11);
                    if (next_12 == null) {
                      if (f.cljs$core$IFn$_invoke$arity$13) {
                        return f.cljs$core$IFn$_invoke$arity$13(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      } else {
                        return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      }
                    } else {
                      var a13 = cljs.core._first(next_12);
                      var next_13 = cljs.core.next(next_12);
                      if (next_13 == null) {
                        if (f.cljs$core$IFn$_invoke$arity$14) {
                          return f.cljs$core$IFn$_invoke$arity$14(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        } else {
                          return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        }
                      } else {
                        var a14 = cljs.core._first(next_13);
                        var next_14 = cljs.core.next(next_13);
                        if (next_14 == null) {
                          if (f.cljs$core$IFn$_invoke$arity$15) {
                            return f.cljs$core$IFn$_invoke$arity$15(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          } else {
                            return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          }
                        } else {
                          var a15 = cljs.core._first(next_14);
                          var next_15 = cljs.core.next(next_14);
                          if (next_15 == null) {
                            if (f.cljs$core$IFn$_invoke$arity$16) {
                              return f.cljs$core$IFn$_invoke$arity$16(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            } else {
                              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            }
                          } else {
                            var a16 = cljs.core._first(next_15);
                            var next_16 = cljs.core.next(next_15);
                            if (next_16 == null) {
                              if (f.cljs$core$IFn$_invoke$arity$17) {
                                return f.cljs$core$IFn$_invoke$arity$17(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              } else {
                                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              }
                            } else {
                              var a17 = cljs.core._first(next_16);
                              var next_17 = cljs.core.next(next_16);
                              if (next_17 == null) {
                                if (f.cljs$core$IFn$_invoke$arity$18) {
                                  return f.cljs$core$IFn$_invoke$arity$18(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                } else {
                                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                }
                              } else {
                                var a18 = cljs.core._first(next_17);
                                var next_18 = cljs.core.next(next_17);
                                if (next_18 == null) {
                                  if (f.cljs$core$IFn$_invoke$arity$19) {
                                    return f.cljs$core$IFn$_invoke$arity$19(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  } else {
                                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  }
                                } else {
                                  var a19 = cljs.core._first(next_18);
                                  var next_19 = cljs.core.next(next_18);
                                  if (next_19 == null) {
                                    if (f.cljs$core$IFn$_invoke$arity$20) {
                                      return f.cljs$core$IFn$_invoke$arity$20(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    } else {
                                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    }
                                  } else {
                                    var arr__9015__auto__ = [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19];
                                    var s__9016__auto___11109 = next_19;
                                    while (true) {
                                      if (s__9016__auto___11109) {
                                        arr__9015__auto__.push(cljs.core._first(s__9016__auto___11109));
                                        var G__11110 = cljs.core.next(s__9016__auto___11109);
                                        s__9016__auto___11109 = G__11110;
                                        continue;
                                      } else {
                                      }
                                      break;
                                    }
                                    return f.apply(f, arr__9015__auto__);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function cljs$core$apply(var_args) {
  var G__11118 = arguments.length;
  switch(G__11118) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11120 = arguments.length;
      var i__9175__auto___11121 = 0;
      while (true) {
        if (i__9175__auto___11121 < len__9174__auto___11120) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11121]);
          var G__11122 = i__9175__auto___11121 + 1;
          i__9175__auto___11121 = G__11122;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__9200__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (f.cljs$lang$applyTo) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity, args) + 1;
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, x, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 2 + cljs.core.bounded_count(fixed_arity - 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, x, y, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 3 + cljs.core.bounded_count(fixed_arity - 2, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, x, y, z, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  if (f.cljs$lang$applyTo) {
    var spread_args = cljs.core.spread(args);
    var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, spread_args))));
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 4 + cljs.core.bounded_count(fixed_arity - 3, spread_args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a, b, c, d, cljs.core.spread(args));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq11112) {
  var G__11113 = cljs.core.first(seq11112);
  var seq11112__$1 = cljs.core.next(seq11112);
  var G__11114 = cljs.core.first(seq11112__$1);
  var seq11112__$2 = cljs.core.next(seq11112__$1);
  var G__11115 = cljs.core.first(seq11112__$2);
  var seq11112__$3 = cljs.core.next(seq11112__$2);
  var G__11116 = cljs.core.first(seq11112__$3);
  var seq11112__$4 = cljs.core.next(seq11112__$3);
  var G__11117 = cljs.core.first(seq11112__$4);
  var seq11112__$5 = cljs.core.next(seq11112__$4);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11113, G__11114, G__11115, G__11116, G__11117, seq11112__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var G__11131 = arguments.length;
  switch(G__11131) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11148 = arguments.length;
      var i__9175__auto___11149 = 0;
      while (true) {
        if (i__9175__auto___11149 < len__9174__auto___11148) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11149]);
          var G__11150 = i__9175__auto___11149 + 1;
          i__9175__auto___11149 = G__11150;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__9200__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__11132 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11132) : f.call(null, G__11132);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__11133 = cljs.core.meta(obj);
    var G__11134 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11133, G__11134) : f.call(null, G__11133, G__11134);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__11135 = cljs.core.meta(obj);
    var G__11136 = a;
    var G__11137 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11135, G__11136, G__11137) : f.call(null, G__11135, G__11136, G__11137);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__11138 = cljs.core.meta(obj);
    var G__11139 = a;
    var G__11140 = b;
    var G__11141 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11138, G__11139, G__11140, G__11141) : f.call(null, G__11138, G__11139, G__11140, G__11141);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__11142 = cljs.core.meta(obj);
    var G__11143 = a;
    var G__11144 = b;
    var G__11145 = c;
    var G__11146 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11142, G__11143, G__11144, G__11145, G__11146) : f.call(null, G__11142, G__11143, G__11144, G__11145, G__11146);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq11124) {
  var G__11125 = cljs.core.first(seq11124);
  var seq11124__$1 = cljs.core.next(seq11124);
  var G__11126 = cljs.core.first(seq11124__$1);
  var seq11124__$2 = cljs.core.next(seq11124__$1);
  var G__11127 = cljs.core.first(seq11124__$2);
  var seq11124__$3 = cljs.core.next(seq11124__$2);
  var G__11128 = cljs.core.first(seq11124__$3);
  var seq11124__$4 = cljs.core.next(seq11124__$3);
  var G__11129 = cljs.core.first(seq11124__$4);
  var seq11124__$5 = cljs.core.next(seq11124__$4);
  var G__11130 = cljs.core.first(seq11124__$5);
  var seq11124__$6 = cljs.core.next(seq11124__$5);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11125, G__11126, G__11127, G__11128, G__11129, G__11130, seq11124__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var G__11155 = arguments.length;
  switch(G__11155) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11157 = arguments.length;
      var i__9175__auto___11158 = 0;
      while (true) {
        if (i__9175__auto___11158 < len__9174__auto___11157) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11158]);
          var G__11159 = i__9175__auto___11158 + 1;
          i__9175__auto___11158 = G__11159;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq11152) {
  var G__11153 = cljs.core.first(seq11152);
  var seq11152__$1 = cljs.core.next(seq11152);
  var G__11154 = cljs.core.first(seq11152__$1);
  var seq11152__$2 = cljs.core.next(seq11152__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11153, G__11154, seq11152__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.t_cljs$core11160 !== "undefined") {
  } else {
    cljs.core.t_cljs$core11160 = function(meta11161) {
      this.meta11161 = meta11161;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core11160.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11162, meta11161__$1) {
      var self__ = this;
      var _11162__$1 = this;
      return new cljs.core.t_cljs$core11160(meta11161__$1);
    };
    cljs.core.t_cljs$core11160.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11162) {
      var self__ = this;
      var _11162__$1 = this;
      return self__.meta11161;
    };
    cljs.core.t_cljs$core11160.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core11160.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core11160.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core11160.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta11161", "meta11161", -1706820768, null)], null);
    };
    cljs.core.t_cljs$core11160.cljs$lang$type = true;
    cljs.core.t_cljs$core11160.cljs$lang$ctorStr = "cljs.core/t_cljs$core11160";
    cljs.core.t_cljs$core11160.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
      return cljs.core._write(writer__8602__auto__, "cljs.core/t_cljs$core11160");
    };
    cljs.core.__GT_t_cljs$core11160 = function cljs$core$nil_iter_$___GT_t_cljs$core11160(meta11161) {
      return new cljs.core.t_cljs$core11160(meta11161);
    };
  }
  return new cljs.core.t_cljs$core11160(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!this$.hasNext()) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (cljs.core.iterable_QMARK_(coll)) {
    return cljs.core._iterator(coll);
  } else {
    if (coll == null) {
      return cljs.core.nil_iter();
    } else {
      if (typeof coll === "string") {
        return cljs.core.string_iter(coll);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          return cljs.core.array_iter(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.Many = function(vals) {
  this.vals = vals;
};
cljs.core.Many.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  self__.vals.push(o);
  return this$;
};
cljs.core.Many.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.length === 0;
};
cljs.core.Many.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = true;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Many");
};
cljs.core.__GT_Many = function cljs$core$__GT_Many(vals) {
  return new cljs.core.Many(vals);
};
cljs.core.NONE = {};
cljs.core.Single = function(val) {
  this.val = val;
};
cljs.core.Single.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    self__.val = o;
    return this$;
  } else {
    return new cljs.core.Many([self__.val, o]);
  }
};
cljs.core.Single.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    throw new Error("Removing object from empty buffer");
  } else {
    var ret = self__.val;
    self__.val = cljs.core.NONE;
    return ret;
  }
};
cljs.core.Single.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Single.cljs$lang$type = true;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Single");
};
cljs.core.__GT_Single = function cljs$core$__GT_Single(val) {
  return new cljs.core.Single(val);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  return new cljs.core.Single(o);
};
cljs.core.Empty.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  throw new Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return true;
};
cljs.core.Empty.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = true;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function cljs$core$__GT_Empty() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(iters) {
  this.iters = iters;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (!iter.hasNext()) {
        return false;
      } else {
        var G__11163 = cljs.core.next(iters__$1);
        iters__$1 = G__11163;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var nexts = [];
  var n__8943__auto___11164 = self__.iters.length;
  var i_11165 = 0;
  while (true) {
    if (i_11165 < n__8943__auto___11164) {
      nexts[i_11165] = self__.iters[i_11165].next();
      var G__11166 = i_11165 + 1;
      i_11165 = G__11166;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = true;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function cljs$core$__GT_MultiIterator(iters) {
  return new cljs.core.MultiIterator(iters);
};
cljs.core.chunkIteratorSeq = function cljs$core$chunkIteratorSeq(iter) {
  return new cljs.core.LazySeq(null, function() {
    if (iter.hasNext()) {
      var arr = [];
      var n = 0;
      while (true) {
        if (cljs.core.truth_(function() {
          var and__7955__auto__ = iter.hasNext();
          if (cljs.core.truth_(and__7955__auto__)) {
            return n < 32;
          } else {
            return and__7955__auto__;
          }
        }())) {
          arr[n] = iter.next();
          var G__11167 = n + 1;
          n = G__11167;
          continue;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null, iter));
        }
        break;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(buffer, _next, completed, xf, sourceIter, multi) {
  this.buffer = buffer;
  this._next = _next;
  this.completed = completed;
  this.xf = xf;
  this.sourceIter = sourceIter;
  this.multi = multi;
};
cljs.core.TransformerIterator.prototype.step = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__._next === cljs.core.NONE)) {
    return true;
  } else {
    while (true) {
      if (self__._next === cljs.core.NONE) {
        if (self__.buffer.isEmpty()) {
          if (self__.completed) {
            return false;
          } else {
            if (self__.sourceIter.hasNext()) {
              var iter = self__.multi ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf, cljs.core.cons(null, self__.sourceIter.next())) : function() {
                var G__11168 = null;
                var G__11169 = self__.sourceIter.next();
                return self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__11168, G__11169) : self__.xf.call(null, G__11168, G__11169);
              }();
              if (cljs.core.reduced_QMARK_(iter)) {
                self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
                self__.completed = true;
              } else {
              }
              continue;
            } else {
              self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
              self__.completed = true;
              continue;
            }
          }
        } else {
          self__._next = self__.buffer.remove();
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return this$.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    var ret = self__._next;
    self__._next = cljs.core.NONE;
    return ret;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.TransformerIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, 
  "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = true;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function cljs$core$__GT_TransformerIterator(buffer, _next, completed, xf, sourceIter, multi) {
  return new cljs.core.TransformerIterator(buffer, _next, completed, xf, sourceIter, multi);
};
goog.object.set(cljs.core.TransformerIterator.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.transformer_iterator = function cljs$core$transformer_iterator(xform, sourceIter, multi) {
  var iterator = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, false, null, sourceIter, multi);
  iterator.xf = function() {
    var G__11170 = function() {
      var G__11171 = null;
      var G__11171__0 = function() {
        return null;
      };
      var G__11171__1 = function(acc) {
        return acc;
      };
      var G__11171__2 = function(acc, o) {
        iterator.buffer = iterator.buffer.add(o);
        return acc;
      };
      G__11171 = function(acc, o) {
        switch(arguments.length) {
          case 0:
            return G__11171__0.call(this);
          case 1:
            return G__11171__1.call(this, acc);
          case 2:
            return G__11171__2.call(this, acc, o);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11171.cljs$core$IFn$_invoke$arity$0 = G__11171__0;
      G__11171.cljs$core$IFn$_invoke$arity$1 = G__11171__1;
      G__11171.cljs$core$IFn$_invoke$arity$2 = G__11171__2;
      return G__11171;
    }();
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11170) : xform.call(null, G__11170);
  }();
  return iterator;
};
cljs.core.TransformerIterator.create = function(xform, source) {
  return cljs.core.transformer_iterator(xform, source, false);
};
cljs.core.TransformerIterator.createMulti = function(xform, sources) {
  return cljs.core.transformer_iterator(xform, new cljs.core.MultiIterator(cljs.core.to_array(sources)), true);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var G__11176 = arguments.length;
  switch(G__11176) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11178 = arguments.length;
      var i__9175__auto___11179 = 0;
      while (true) {
        if (i__9175__auto___11179 < len__9174__auto___11178) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11179]);
          var G__11180 = i__9175__auto___11179 + 1;
          i__9175__auto___11179 = G__11180;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__7970__auto__ = cljs.core.seq(coll);
    if (or__7970__auto__) {
      return or__7970__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  var or__7970__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform, cljs.core.iter(coll)));
  if (cljs.core.truth_(or__7970__auto__)) {
    return or__7970__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  var or__7970__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(coll, colls))));
  if (cljs.core.truth_(or__7970__auto__)) {
    return or__7970__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$lang$applyTo = function(seq11173) {
  var G__11174 = cljs.core.first(seq11173);
  var seq11173__$1 = cljs.core.next(seq11173);
  var G__11175 = cljs.core.first(seq11173__$1);
  var seq11173__$2 = cljs.core.next(seq11173__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11174, G__11175, seq11173__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__11181 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11181) : pred.call(null, G__11181);
      }())) {
        var G__11182 = pred;
        var G__11183 = cljs.core.next(coll);
        pred = G__11182;
        coll = G__11183;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var or__7970__auto__ = function() {
        var G__11185 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11185) : pred.call(null, G__11185);
      }();
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        var G__11186 = pred;
        var G__11187 = cljs.core.next(s);
        pred = G__11186;
        coll = G__11187;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__11188 = null;
    var G__11188__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__11188__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__11188__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__11188__3 = function() {
      var G__11189__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__11189 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__11190__i = 0, G__11190__a = new Array(arguments.length - 2);
          while (G__11190__i < G__11190__a.length) {
            G__11190__a[G__11190__i] = arguments[G__11190__i + 2];
            ++G__11190__i;
          }
          zs = new cljs.core.IndexedSeq(G__11190__a, 0, null);
        }
        return G__11189__delegate.call(this, x, y, zs);
      };
      G__11189.cljs$lang$maxFixedArity = 2;
      G__11189.cljs$lang$applyTo = function(arglist__11191) {
        var x = cljs.core.first(arglist__11191);
        arglist__11191 = cljs.core.next(arglist__11191);
        var y = cljs.core.first(arglist__11191);
        var zs = cljs.core.rest(arglist__11191);
        return G__11189__delegate(x, y, zs);
      };
      G__11189.cljs$core$IFn$_invoke$arity$variadic = G__11189__delegate;
      return G__11189;
    }();
    G__11188 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__11188__0.call(this);
        case 1:
          return G__11188__1.call(this, x);
        case 2:
          return G__11188__2.call(this, x, y);
        default:
          var G__11192 = null;
          if (arguments.length > 2) {
            var G__11193__i = 0, G__11193__a = new Array(arguments.length - 2);
            while (G__11193__i < G__11193__a.length) {
              G__11193__a[G__11193__i] = arguments[G__11193__i + 2];
              ++G__11193__i;
            }
            G__11192 = new cljs.core.IndexedSeq(G__11193__a, 0, null);
          }
          return G__11188__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11192);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11188.cljs$lang$maxFixedArity = 2;
    G__11188.cljs$lang$applyTo = G__11188__3.cljs$lang$applyTo;
    G__11188.cljs$core$IFn$_invoke$arity$0 = G__11188__0;
    G__11188.cljs$core$IFn$_invoke$arity$1 = G__11188__1;
    G__11188.cljs$core$IFn$_invoke$arity$2 = G__11188__2;
    G__11188.cljs$core$IFn$_invoke$arity$variadic = G__11188__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__11188;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__11194__delegate = function(args) {
      return x;
    };
    var G__11194 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11195__i = 0, G__11195__a = new Array(arguments.length - 0);
        while (G__11195__i < G__11195__a.length) {
          G__11195__a[G__11195__i] = arguments[G__11195__i + 0];
          ++G__11195__i;
        }
        args = new cljs.core.IndexedSeq(G__11195__a, 0, null);
      }
      return G__11194__delegate.call(this, args);
    };
    G__11194.cljs$lang$maxFixedArity = 0;
    G__11194.cljs$lang$applyTo = function(arglist__11196) {
      var args = cljs.core.seq(arglist__11196);
      return G__11194__delegate(args);
    };
    G__11194.cljs$core$IFn$_invoke$arity$variadic = G__11194__delegate;
    return G__11194;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var G__11202 = arguments.length;
  switch(G__11202) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11220 = arguments.length;
      var i__9175__auto___11221 = 0;
      while (true) {
        if (i__9175__auto___11221 < len__9174__auto___11220) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11221]);
          var G__11222 = i__9175__auto___11221 + 1;
          i__9175__auto___11221 = G__11222;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__11223 = null;
    var G__11223__0 = function() {
      var G__11203 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11203) : f.call(null, G__11203);
    };
    var G__11223__1 = function(x) {
      var G__11204 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11204) : f.call(null, G__11204);
    };
    var G__11223__2 = function(x, y) {
      var G__11205 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11205) : f.call(null, G__11205);
    };
    var G__11223__3 = function(x, y, z) {
      var G__11206 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11206) : f.call(null, G__11206);
    };
    var G__11223__4 = function() {
      var G__11224__delegate = function(x, y, z, args) {
        var G__11207 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11207) : f.call(null, G__11207);
      };
      var G__11224 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11225__i = 0, G__11225__a = new Array(arguments.length - 3);
          while (G__11225__i < G__11225__a.length) {
            G__11225__a[G__11225__i] = arguments[G__11225__i + 3];
            ++G__11225__i;
          }
          args = new cljs.core.IndexedSeq(G__11225__a, 0, null);
        }
        return G__11224__delegate.call(this, x, y, z, args);
      };
      G__11224.cljs$lang$maxFixedArity = 3;
      G__11224.cljs$lang$applyTo = function(arglist__11226) {
        var x = cljs.core.first(arglist__11226);
        arglist__11226 = cljs.core.next(arglist__11226);
        var y = cljs.core.first(arglist__11226);
        arglist__11226 = cljs.core.next(arglist__11226);
        var z = cljs.core.first(arglist__11226);
        var args = cljs.core.rest(arglist__11226);
        return G__11224__delegate(x, y, z, args);
      };
      G__11224.cljs$core$IFn$_invoke$arity$variadic = G__11224__delegate;
      return G__11224;
    }();
    G__11223 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11223__0.call(this);
        case 1:
          return G__11223__1.call(this, x);
        case 2:
          return G__11223__2.call(this, x, y);
        case 3:
          return G__11223__3.call(this, x, y, z);
        default:
          var G__11227 = null;
          if (arguments.length > 3) {
            var G__11228__i = 0, G__11228__a = new Array(arguments.length - 3);
            while (G__11228__i < G__11228__a.length) {
              G__11228__a[G__11228__i] = arguments[G__11228__i + 3];
              ++G__11228__i;
            }
            G__11227 = new cljs.core.IndexedSeq(G__11228__a, 0, null);
          }
          return G__11223__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11227);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11223.cljs$lang$maxFixedArity = 3;
    G__11223.cljs$lang$applyTo = G__11223__4.cljs$lang$applyTo;
    G__11223.cljs$core$IFn$_invoke$arity$0 = G__11223__0;
    G__11223.cljs$core$IFn$_invoke$arity$1 = G__11223__1;
    G__11223.cljs$core$IFn$_invoke$arity$2 = G__11223__2;
    G__11223.cljs$core$IFn$_invoke$arity$3 = G__11223__3;
    G__11223.cljs$core$IFn$_invoke$arity$variadic = G__11223__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11223;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__11229 = null;
    var G__11229__0 = function() {
      var G__11208 = function() {
        var G__11209 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11209) : g.call(null, G__11209);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11208) : f.call(null, G__11208);
    };
    var G__11229__1 = function(x) {
      var G__11210 = function() {
        var G__11211 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11211) : g.call(null, G__11211);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11210) : f.call(null, G__11210);
    };
    var G__11229__2 = function(x, y) {
      var G__11212 = function() {
        var G__11213 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11213) : g.call(null, G__11213);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11212) : f.call(null, G__11212);
    };
    var G__11229__3 = function(x, y, z) {
      var G__11214 = function() {
        var G__11215 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11215) : g.call(null, G__11215);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11214) : f.call(null, G__11214);
    };
    var G__11229__4 = function() {
      var G__11230__delegate = function(x, y, z, args) {
        var G__11216 = function() {
          var G__11217 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11217) : g.call(null, G__11217);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11216) : f.call(null, G__11216);
      };
      var G__11230 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11231__i = 0, G__11231__a = new Array(arguments.length - 3);
          while (G__11231__i < G__11231__a.length) {
            G__11231__a[G__11231__i] = arguments[G__11231__i + 3];
            ++G__11231__i;
          }
          args = new cljs.core.IndexedSeq(G__11231__a, 0, null);
        }
        return G__11230__delegate.call(this, x, y, z, args);
      };
      G__11230.cljs$lang$maxFixedArity = 3;
      G__11230.cljs$lang$applyTo = function(arglist__11232) {
        var x = cljs.core.first(arglist__11232);
        arglist__11232 = cljs.core.next(arglist__11232);
        var y = cljs.core.first(arglist__11232);
        arglist__11232 = cljs.core.next(arglist__11232);
        var z = cljs.core.first(arglist__11232);
        var args = cljs.core.rest(arglist__11232);
        return G__11230__delegate(x, y, z, args);
      };
      G__11230.cljs$core$IFn$_invoke$arity$variadic = G__11230__delegate;
      return G__11230;
    }();
    G__11229 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11229__0.call(this);
        case 1:
          return G__11229__1.call(this, x);
        case 2:
          return G__11229__2.call(this, x, y);
        case 3:
          return G__11229__3.call(this, x, y, z);
        default:
          var G__11233 = null;
          if (arguments.length > 3) {
            var G__11234__i = 0, G__11234__a = new Array(arguments.length - 3);
            while (G__11234__i < G__11234__a.length) {
              G__11234__a[G__11234__i] = arguments[G__11234__i + 3];
              ++G__11234__i;
            }
            G__11233 = new cljs.core.IndexedSeq(G__11234__a, 0, null);
          }
          return G__11229__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11233);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11229.cljs$lang$maxFixedArity = 3;
    G__11229.cljs$lang$applyTo = G__11229__4.cljs$lang$applyTo;
    G__11229.cljs$core$IFn$_invoke$arity$0 = G__11229__0;
    G__11229.cljs$core$IFn$_invoke$arity$1 = G__11229__1;
    G__11229.cljs$core$IFn$_invoke$arity$2 = G__11229__2;
    G__11229.cljs$core$IFn$_invoke$arity$3 = G__11229__3;
    G__11229.cljs$core$IFn$_invoke$arity$variadic = G__11229__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11229;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function() {
    var G__11235__delegate = function(args) {
      var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
      var fs__$2 = cljs.core.next(fs__$1);
      while (true) {
        if (fs__$2) {
          var G__11236 = function() {
            var fexpr__11218 = cljs.core.first(fs__$2);
            return fexpr__11218.cljs$core$IFn$_invoke$arity$1 ? fexpr__11218.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__11218.call(null, ret);
          }();
          var G__11237 = cljs.core.next(fs__$2);
          ret = G__11236;
          fs__$2 = G__11237;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__11235 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11238__i = 0, G__11238__a = new Array(arguments.length - 0);
        while (G__11238__i < G__11238__a.length) {
          G__11238__a[G__11238__i] = arguments[G__11238__i + 0];
          ++G__11238__i;
        }
        args = new cljs.core.IndexedSeq(G__11238__a, 0, null);
      }
      return G__11235__delegate.call(this, args);
    };
    G__11235.cljs$lang$maxFixedArity = 0;
    G__11235.cljs$lang$applyTo = function(arglist__11239) {
      var args = cljs.core.seq(arglist__11239);
      return G__11235__delegate(args);
    };
    G__11235.cljs$core$IFn$_invoke$arity$variadic = G__11235__delegate;
    return G__11235;
  }();
};
cljs.core.comp.cljs$lang$applyTo = function(seq11198) {
  var G__11199 = cljs.core.first(seq11198);
  var seq11198__$1 = cljs.core.next(seq11198);
  var G__11200 = cljs.core.first(seq11198__$1);
  var seq11198__$2 = cljs.core.next(seq11198__$1);
  var G__11201 = cljs.core.first(seq11198__$2);
  var seq11198__$3 = cljs.core.next(seq11198__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11199, G__11200, G__11201, seq11198__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var G__11246 = arguments.length;
  switch(G__11246) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11248 = arguments.length;
      var i__9175__auto___11249 = 0;
      while (true) {
        if (i__9175__auto___11249 < len__9174__auto___11248) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11249]);
          var G__11250 = i__9175__auto___11249 + 1;
          i__9175__auto___11249 = G__11250;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9200__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__11251 = null;
    var G__11251__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__11251__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__11251__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__11251__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__11251__4 = function() {
      var G__11252__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));
      };
      var G__11252 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11253__i = 0, G__11253__a = new Array(arguments.length - 3);
          while (G__11253__i < G__11253__a.length) {
            G__11253__a[G__11253__i] = arguments[G__11253__i + 3];
            ++G__11253__i;
          }
          args = new cljs.core.IndexedSeq(G__11253__a, 0, null);
        }
        return G__11252__delegate.call(this, x, y, z, args);
      };
      G__11252.cljs$lang$maxFixedArity = 3;
      G__11252.cljs$lang$applyTo = function(arglist__11254) {
        var x = cljs.core.first(arglist__11254);
        arglist__11254 = cljs.core.next(arglist__11254);
        var y = cljs.core.first(arglist__11254);
        arglist__11254 = cljs.core.next(arglist__11254);
        var z = cljs.core.first(arglist__11254);
        var args = cljs.core.rest(arglist__11254);
        return G__11252__delegate(x, y, z, args);
      };
      G__11252.cljs$core$IFn$_invoke$arity$variadic = G__11252__delegate;
      return G__11252;
    }();
    G__11251 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11251__0.call(this);
        case 1:
          return G__11251__1.call(this, x);
        case 2:
          return G__11251__2.call(this, x, y);
        case 3:
          return G__11251__3.call(this, x, y, z);
        default:
          var G__11255 = null;
          if (arguments.length > 3) {
            var G__11256__i = 0, G__11256__a = new Array(arguments.length - 3);
            while (G__11256__i < G__11256__a.length) {
              G__11256__a[G__11256__i] = arguments[G__11256__i + 3];
              ++G__11256__i;
            }
            G__11255 = new cljs.core.IndexedSeq(G__11256__a, 0, null);
          }
          return G__11251__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11255);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11251.cljs$lang$maxFixedArity = 3;
    G__11251.cljs$lang$applyTo = G__11251__4.cljs$lang$applyTo;
    G__11251.cljs$core$IFn$_invoke$arity$0 = G__11251__0;
    G__11251.cljs$core$IFn$_invoke$arity$1 = G__11251__1;
    G__11251.cljs$core$IFn$_invoke$arity$2 = G__11251__2;
    G__11251.cljs$core$IFn$_invoke$arity$3 = G__11251__3;
    G__11251.cljs$core$IFn$_invoke$arity$variadic = G__11251__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11251;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__11257 = null;
    var G__11257__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__11257__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__11257__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__11257__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__11257__4 = function() {
      var G__11258__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z, args], 0));
      };
      var G__11258 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11259__i = 0, G__11259__a = new Array(arguments.length - 3);
          while (G__11259__i < G__11259__a.length) {
            G__11259__a[G__11259__i] = arguments[G__11259__i + 3];
            ++G__11259__i;
          }
          args = new cljs.core.IndexedSeq(G__11259__a, 0, null);
        }
        return G__11258__delegate.call(this, x, y, z, args);
      };
      G__11258.cljs$lang$maxFixedArity = 3;
      G__11258.cljs$lang$applyTo = function(arglist__11260) {
        var x = cljs.core.first(arglist__11260);
        arglist__11260 = cljs.core.next(arglist__11260);
        var y = cljs.core.first(arglist__11260);
        arglist__11260 = cljs.core.next(arglist__11260);
        var z = cljs.core.first(arglist__11260);
        var args = cljs.core.rest(arglist__11260);
        return G__11258__delegate(x, y, z, args);
      };
      G__11258.cljs$core$IFn$_invoke$arity$variadic = G__11258__delegate;
      return G__11258;
    }();
    G__11257 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11257__0.call(this);
        case 1:
          return G__11257__1.call(this, x);
        case 2:
          return G__11257__2.call(this, x, y);
        case 3:
          return G__11257__3.call(this, x, y, z);
        default:
          var G__11261 = null;
          if (arguments.length > 3) {
            var G__11262__i = 0, G__11262__a = new Array(arguments.length - 3);
            while (G__11262__i < G__11262__a.length) {
              G__11262__a[G__11262__i] = arguments[G__11262__i + 3];
              ++G__11262__i;
            }
            G__11261 = new cljs.core.IndexedSeq(G__11262__a, 0, null);
          }
          return G__11257__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11261);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11257.cljs$lang$maxFixedArity = 3;
    G__11257.cljs$lang$applyTo = G__11257__4.cljs$lang$applyTo;
    G__11257.cljs$core$IFn$_invoke$arity$0 = G__11257__0;
    G__11257.cljs$core$IFn$_invoke$arity$1 = G__11257__1;
    G__11257.cljs$core$IFn$_invoke$arity$2 = G__11257__2;
    G__11257.cljs$core$IFn$_invoke$arity$3 = G__11257__3;
    G__11257.cljs$core$IFn$_invoke$arity$variadic = G__11257__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11257;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__11263 = null;
    var G__11263__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__11263__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__11263__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__11263__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__11263__4 = function() {
      var G__11264__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, z, args], 0));
      };
      var G__11264 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11265__i = 0, G__11265__a = new Array(arguments.length - 3);
          while (G__11265__i < G__11265__a.length) {
            G__11265__a[G__11265__i] = arguments[G__11265__i + 3];
            ++G__11265__i;
          }
          args = new cljs.core.IndexedSeq(G__11265__a, 0, null);
        }
        return G__11264__delegate.call(this, x, y, z, args);
      };
      G__11264.cljs$lang$maxFixedArity = 3;
      G__11264.cljs$lang$applyTo = function(arglist__11266) {
        var x = cljs.core.first(arglist__11266);
        arglist__11266 = cljs.core.next(arglist__11266);
        var y = cljs.core.first(arglist__11266);
        arglist__11266 = cljs.core.next(arglist__11266);
        var z = cljs.core.first(arglist__11266);
        var args = cljs.core.rest(arglist__11266);
        return G__11264__delegate(x, y, z, args);
      };
      G__11264.cljs$core$IFn$_invoke$arity$variadic = G__11264__delegate;
      return G__11264;
    }();
    G__11263 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11263__0.call(this);
        case 1:
          return G__11263__1.call(this, x);
        case 2:
          return G__11263__2.call(this, x, y);
        case 3:
          return G__11263__3.call(this, x, y, z);
        default:
          var G__11267 = null;
          if (arguments.length > 3) {
            var G__11268__i = 0, G__11268__a = new Array(arguments.length - 3);
            while (G__11268__i < G__11268__a.length) {
              G__11268__a[G__11268__i] = arguments[G__11268__i + 3];
              ++G__11268__i;
            }
            G__11267 = new cljs.core.IndexedSeq(G__11268__a, 0, null);
          }
          return G__11263__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11267);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11263.cljs$lang$maxFixedArity = 3;
    G__11263.cljs$lang$applyTo = G__11263__4.cljs$lang$applyTo;
    G__11263.cljs$core$IFn$_invoke$arity$0 = G__11263__0;
    G__11263.cljs$core$IFn$_invoke$arity$1 = G__11263__1;
    G__11263.cljs$core$IFn$_invoke$arity$2 = G__11263__2;
    G__11263.cljs$core$IFn$_invoke$arity$3 = G__11263__3;
    G__11263.cljs$core$IFn$_invoke$arity$variadic = G__11263__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11263;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__11269__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__11269 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11270__i = 0, G__11270__a = new Array(arguments.length - 0);
        while (G__11270__i < G__11270__a.length) {
          G__11270__a[G__11270__i] = arguments[G__11270__i + 0];
          ++G__11270__i;
        }
        args = new cljs.core.IndexedSeq(G__11270__a, 0, null);
      }
      return G__11269__delegate.call(this, args);
    };
    G__11269.cljs$lang$maxFixedArity = 0;
    G__11269.cljs$lang$applyTo = function(arglist__11271) {
      var args = cljs.core.seq(arglist__11271);
      return G__11269__delegate(args);
    };
    G__11269.cljs$core$IFn$_invoke$arity$variadic = G__11269__delegate;
    return G__11269;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq11241) {
  var G__11242 = cljs.core.first(seq11241);
  var seq11241__$1 = cljs.core.next(seq11241);
  var G__11243 = cljs.core.first(seq11241__$1);
  var seq11241__$2 = cljs.core.next(seq11241__$1);
  var G__11244 = cljs.core.first(seq11241__$2);
  var seq11241__$3 = cljs.core.next(seq11241__$2);
  var G__11245 = cljs.core.first(seq11241__$3);
  var seq11241__$4 = cljs.core.next(seq11241__$3);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11242, G__11243, G__11244, G__11245, seq11241__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var G__11273 = arguments.length;
  switch(G__11273) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__11291 = null;
    var G__11291__1 = function(a) {
      var G__11274 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11274) : f.call(null, G__11274);
    };
    var G__11291__2 = function(a, b) {
      var G__11275 = a == null ? x : a;
      var G__11276 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11275, G__11276) : f.call(null, G__11275, G__11276);
    };
    var G__11291__3 = function(a, b, c) {
      var G__11277 = a == null ? x : a;
      var G__11278 = b;
      var G__11279 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11277, G__11278, G__11279) : f.call(null, G__11277, G__11278, G__11279);
    };
    var G__11291__4 = function() {
      var G__11292__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__11292 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__11293__i = 0, G__11293__a = new Array(arguments.length - 3);
          while (G__11293__i < G__11293__a.length) {
            G__11293__a[G__11293__i] = arguments[G__11293__i + 3];
            ++G__11293__i;
          }
          ds = new cljs.core.IndexedSeq(G__11293__a, 0, null);
        }
        return G__11292__delegate.call(this, a, b, c, ds);
      };
      G__11292.cljs$lang$maxFixedArity = 3;
      G__11292.cljs$lang$applyTo = function(arglist__11294) {
        var a = cljs.core.first(arglist__11294);
        arglist__11294 = cljs.core.next(arglist__11294);
        var b = cljs.core.first(arglist__11294);
        arglist__11294 = cljs.core.next(arglist__11294);
        var c = cljs.core.first(arglist__11294);
        var ds = cljs.core.rest(arglist__11294);
        return G__11292__delegate(a, b, c, ds);
      };
      G__11292.cljs$core$IFn$_invoke$arity$variadic = G__11292__delegate;
      return G__11292;
    }();
    G__11291 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__11291__1.call(this, a);
        case 2:
          return G__11291__2.call(this, a, b);
        case 3:
          return G__11291__3.call(this, a, b, c);
        default:
          var G__11295 = null;
          if (arguments.length > 3) {
            var G__11296__i = 0, G__11296__a = new Array(arguments.length - 3);
            while (G__11296__i < G__11296__a.length) {
              G__11296__a[G__11296__i] = arguments[G__11296__i + 3];
              ++G__11296__i;
            }
            G__11295 = new cljs.core.IndexedSeq(G__11296__a, 0, null);
          }
          return G__11291__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__11295);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11291.cljs$lang$maxFixedArity = 3;
    G__11291.cljs$lang$applyTo = G__11291__4.cljs$lang$applyTo;
    G__11291.cljs$core$IFn$_invoke$arity$1 = G__11291__1;
    G__11291.cljs$core$IFn$_invoke$arity$2 = G__11291__2;
    G__11291.cljs$core$IFn$_invoke$arity$3 = G__11291__3;
    G__11291.cljs$core$IFn$_invoke$arity$variadic = G__11291__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11291;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__11297 = null;
    var G__11297__2 = function(a, b) {
      var G__11280 = a == null ? x : a;
      var G__11281 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11280, G__11281) : f.call(null, G__11280, G__11281);
    };
    var G__11297__3 = function(a, b, c) {
      var G__11282 = a == null ? x : a;
      var G__11283 = b == null ? y : b;
      var G__11284 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11282, G__11283, G__11284) : f.call(null, G__11282, G__11283, G__11284);
    };
    var G__11297__4 = function() {
      var G__11298__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__11298 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__11299__i = 0, G__11299__a = new Array(arguments.length - 3);
          while (G__11299__i < G__11299__a.length) {
            G__11299__a[G__11299__i] = arguments[G__11299__i + 3];
            ++G__11299__i;
          }
          ds = new cljs.core.IndexedSeq(G__11299__a, 0, null);
        }
        return G__11298__delegate.call(this, a, b, c, ds);
      };
      G__11298.cljs$lang$maxFixedArity = 3;
      G__11298.cljs$lang$applyTo = function(arglist__11300) {
        var a = cljs.core.first(arglist__11300);
        arglist__11300 = cljs.core.next(arglist__11300);
        var b = cljs.core.first(arglist__11300);
        arglist__11300 = cljs.core.next(arglist__11300);
        var c = cljs.core.first(arglist__11300);
        var ds = cljs.core.rest(arglist__11300);
        return G__11298__delegate(a, b, c, ds);
      };
      G__11298.cljs$core$IFn$_invoke$arity$variadic = G__11298__delegate;
      return G__11298;
    }();
    G__11297 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__11297__2.call(this, a, b);
        case 3:
          return G__11297__3.call(this, a, b, c);
        default:
          var G__11301 = null;
          if (arguments.length > 3) {
            var G__11302__i = 0, G__11302__a = new Array(arguments.length - 3);
            while (G__11302__i < G__11302__a.length) {
              G__11302__a[G__11302__i] = arguments[G__11302__i + 3];
              ++G__11302__i;
            }
            G__11301 = new cljs.core.IndexedSeq(G__11302__a, 0, null);
          }
          return G__11297__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__11301);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11297.cljs$lang$maxFixedArity = 3;
    G__11297.cljs$lang$applyTo = G__11297__4.cljs$lang$applyTo;
    G__11297.cljs$core$IFn$_invoke$arity$2 = G__11297__2;
    G__11297.cljs$core$IFn$_invoke$arity$3 = G__11297__3;
    G__11297.cljs$core$IFn$_invoke$arity$variadic = G__11297__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11297;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__11303 = null;
    var G__11303__2 = function(a, b) {
      var G__11285 = a == null ? x : a;
      var G__11286 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11285, G__11286) : f.call(null, G__11285, G__11286);
    };
    var G__11303__3 = function(a, b, c) {
      var G__11287 = a == null ? x : a;
      var G__11288 = b == null ? y : b;
      var G__11289 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11287, G__11288, G__11289) : f.call(null, G__11287, G__11288, G__11289);
    };
    var G__11303__4 = function() {
      var G__11304__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__11304 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__11305__i = 0, G__11305__a = new Array(arguments.length - 3);
          while (G__11305__i < G__11305__a.length) {
            G__11305__a[G__11305__i] = arguments[G__11305__i + 3];
            ++G__11305__i;
          }
          ds = new cljs.core.IndexedSeq(G__11305__a, 0, null);
        }
        return G__11304__delegate.call(this, a, b, c, ds);
      };
      G__11304.cljs$lang$maxFixedArity = 3;
      G__11304.cljs$lang$applyTo = function(arglist__11306) {
        var a = cljs.core.first(arglist__11306);
        arglist__11306 = cljs.core.next(arglist__11306);
        var b = cljs.core.first(arglist__11306);
        arglist__11306 = cljs.core.next(arglist__11306);
        var c = cljs.core.first(arglist__11306);
        var ds = cljs.core.rest(arglist__11306);
        return G__11304__delegate(a, b, c, ds);
      };
      G__11304.cljs$core$IFn$_invoke$arity$variadic = G__11304__delegate;
      return G__11304;
    }();
    G__11303 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__11303__2.call(this, a, b);
        case 3:
          return G__11303__3.call(this, a, b, c);
        default:
          var G__11307 = null;
          if (arguments.length > 3) {
            var G__11308__i = 0, G__11308__a = new Array(arguments.length - 3);
            while (G__11308__i < G__11308__a.length) {
              G__11308__a[G__11308__i] = arguments[G__11308__i + 3];
              ++G__11308__i;
            }
            G__11307 = new cljs.core.IndexedSeq(G__11308__a, 0, null);
          }
          return G__11303__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__11307);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11303.cljs$lang$maxFixedArity = 3;
    G__11303.cljs$lang$applyTo = G__11303__4.cljs$lang$applyTo;
    G__11303.cljs$core$IFn$_invoke$arity$2 = G__11303__2;
    G__11303.cljs$core$IFn$_invoke$arity$3 = G__11303__3;
    G__11303.cljs$core$IFn$_invoke$arity$variadic = G__11303__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11303;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var G__11310 = arguments.length;
  switch(G__11310) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__11324 = null;
      var G__11324__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11324__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11324__2 = function(result, input) {
        var G__11311 = result;
        var G__11312 = function() {
          var G__11313 = i.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, i.cljs$core$IDeref$_deref$arity$1(null) + 1);
          var G__11314 = input;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11313, G__11314) : f.call(null, G__11313, G__11314);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11311, G__11312) : rf.call(null, G__11311, G__11312);
      };
      G__11324 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11324__0.call(this);
          case 1:
            return G__11324__1.call(this, result);
          case 2:
            return G__11324__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11324.cljs$core$IFn$_invoke$arity$0 = G__11324__0;
      G__11324.cljs$core$IFn$_invoke$arity$1 = G__11324__1;
      G__11324.cljs$core$IFn$_invoke$arity$2 = G__11324__2;
      return G__11324;
    }();
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__8943__auto___11325 = size;
          var i_11326 = 0;
          while (true) {
            if (i_11326 < n__8943__auto___11325) {
              cljs.core.chunk_append(b, function() {
                var G__11319 = idx + i_11326;
                var G__11320 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11326);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11319, G__11320) : f.call(null, G__11319, G__11320);
              }());
              var G__11327 = i_11326 + 1;
              i_11326 = G__11327;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__11321 = idx;
            var G__11322 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11321, G__11322) : f.call(null, G__11321, G__11322);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var G__11329 = arguments.length;
  switch(G__11329) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__11333 = null;
      var G__11333__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11333__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11333__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__11333 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11333__0.call(this);
          case 1:
            return G__11333__1.call(this, result);
          case 2:
            return G__11333__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11333.cljs$core$IFn$_invoke$arity$0 = G__11333__0;
      G__11333.cljs$core$IFn$_invoke$arity$1 = G__11333__1;
      G__11333.cljs$core$IFn$_invoke$arity$2 = G__11333__2;
      return G__11333;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__8943__auto___11334 = size;
        var i_11335 = 0;
        while (true) {
          if (i_11335 < n__8943__auto___11334) {
            var x_11336 = function() {
              var G__11330 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11335);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11330) : f.call(null, G__11330);
            }();
            if (x_11336 == null) {
            } else {
              cljs.core.chunk_append(b, x_11336);
            }
            var G__11337 = i_11335 + 1;
            i_11335 = G__11337;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__11331 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11331) : f.call(null, G__11331);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__11338 = cljs.core.seq(self__.watches);
  var chunk__11339 = null;
  var count__11340 = 0;
  var i__11341 = 0;
  while (true) {
    if (i__11341 < count__11340) {
      var vec__11348 = chunk__11339.cljs$core$IIndexed$_nth$arity$2(null, i__11341);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11348, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11348, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__11354 = seq__11338;
      var G__11355 = chunk__11339;
      var G__11356 = count__11340;
      var G__11357 = i__11341 + 1;
      seq__11338 = G__11354;
      chunk__11339 = G__11355;
      count__11340 = G__11356;
      i__11341 = G__11357;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__11338);
      if (temp__4657__auto__) {
        var seq__11338__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11338__$1)) {
          var c__8838__auto__ = cljs.core.chunk_first(seq__11338__$1);
          var G__11358 = cljs.core.chunk_rest(seq__11338__$1);
          var G__11359 = c__8838__auto__;
          var G__11360 = cljs.core.count(c__8838__auto__);
          var G__11361 = 0;
          seq__11338 = G__11358;
          chunk__11339 = G__11359;
          count__11340 = G__11360;
          i__11341 = G__11361;
          continue;
        } else {
          var vec__11351 = cljs.core.first(seq__11338__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11351, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11351, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__11362 = cljs.core.next(seq__11338__$1);
          var G__11363 = null;
          var G__11364 = 0;
          var G__11365 = 0;
          seq__11338 = G__11362;
          chunk__11339 = G__11363;
          count__11340 = G__11364;
          i__11341 = G__11365;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var G__11369 = arguments.length;
  switch(G__11369) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11374 = arguments.length;
      var i__9175__auto___11375 = 0;
      while (true) {
        if (i__9175__auto___11375 < len__9174__auto___11374) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11375]);
          var G__11376 = i__9175__auto___11375 + 1;
          i__9175__auto___11375 = G__11376;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9200__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__11370) {
  var map__11371 = p__11370;
  var map__11371__$1 = (!(map__11371 == null) ? map__11371.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__11371.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11371) : map__11371;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11371__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11371__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq11367) {
  var G__11368 = cljs.core.first(seq11367);
  var seq11367__$1 = cljs.core.next(seq11367);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11368, seq11367__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      a.cljs$core$IWatchable$_notify_watches$arity$3(null, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.reset_vals_BANG_ = function cljs$core$reset_vals_BANG_(a, new_value) {
  var validate = a.validator;
  if (validate == null) {
  } else {
    if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
    } else {
      throw new Error("Validator rejected reference state");
    }
  }
  var old_value = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value, new_value);
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value, new_value], null);
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var G__11383 = arguments.length;
  switch(G__11383) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11391 = arguments.length;
      var i__9175__auto___11392 = 0;
      while (true) {
        if (i__9175__auto___11392 < len__9174__auto___11391) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11392]);
          var G__11393 = i__9175__auto___11392 + 1;
          i__9175__auto___11392 = G__11393;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9200__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__11384 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11384) : f.call(null, G__11384);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__11385 = a.state;
      var G__11386 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11385, G__11386) : f.call(null, G__11385, G__11386);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__11387 = a.state;
      var G__11388 = x;
      var G__11389 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11387, G__11388, G__11389) : f.call(null, G__11387, G__11388, G__11389);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq11378) {
  var G__11379 = cljs.core.first(seq11378);
  var seq11378__$1 = cljs.core.next(seq11378);
  var G__11380 = cljs.core.first(seq11378__$1);
  var seq11378__$2 = cljs.core.next(seq11378__$1);
  var G__11381 = cljs.core.first(seq11378__$2);
  var seq11378__$3 = cljs.core.next(seq11378__$2);
  var G__11382 = cljs.core.first(seq11378__$3);
  var seq11378__$4 = cljs.core.next(seq11378__$3);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11379, G__11380, G__11381, G__11382, seq11378__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function cljs$core$swap_vals_BANG_(var_args) {
  var G__11400 = arguments.length;
  switch(G__11400) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11408 = arguments.length;
      var i__9175__auto___11409 = 0;
      while (true) {
        if (i__9175__auto___11409 < len__9174__auto___11408) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11409]);
          var G__11410 = i__9175__auto___11409 + 1;
          i__9175__auto___11409 = G__11410;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9200__auto__);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__11401 = a.state;
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11401) : f.call(null, G__11401);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__11402 = a.state;
    var G__11403 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11402, G__11403) : f.call(null, G__11402, G__11403);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__11404 = a.state;
    var G__11405 = x;
    var G__11406 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11404, G__11405, G__11406) : f.call(null, G__11404, G__11405, G__11406);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(seq11395) {
  var G__11396 = cljs.core.first(seq11395);
  var seq11395__$1 = cljs.core.next(seq11395);
  var G__11397 = cljs.core.first(seq11395__$1);
  var seq11395__$2 = cljs.core.next(seq11395__$1);
  var G__11398 = cljs.core.first(seq11395__$2);
  var seq11395__$3 = cljs.core.next(seq11395__$2);
  var G__11399 = cljs.core.first(seq11395__$3);
  var seq11395__$4 = cljs.core.next(seq11395__$3);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11396, G__11397, G__11398, G__11399, seq11395__$4);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  if (!(val == null) && cljs.core.not(function() {
    var G__11412 = cljs.core._deref(iref);
    return val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__11412) : val.call(null, G__11412);
  }())) {
    throw new Error("Validator rejected reference state");
  } else {
  }
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var G__11414 = arguments.length;
  switch(G__11414) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__11424 = null;
      var G__11424__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11424__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11424__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__11424 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11424__0.call(this);
          case 1:
            return G__11424__1.call(this, result);
          case 2:
            return G__11424__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11424.cljs$core$IFn$_invoke$arity$0 = G__11424__0;
      G__11424.cljs$core$IFn$_invoke$arity$1 = G__11424__1;
      G__11424.cljs$core$IFn$_invoke$arity$2 = G__11424__2;
      return G__11424;
    }();
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll__$1);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__8943__auto___11425 = size;
          var i_11426 = 0;
          while (true) {
            if (i_11426 < n__8943__auto___11425) {
              var x_11427 = function() {
                var G__11419 = idx + i_11426;
                var G__11420 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11426);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11419, G__11420) : f.call(null, G__11419, G__11420);
              }();
              if (x_11427 == null) {
              } else {
                cljs.core.chunk_append(b, x_11427);
              }
              var G__11428 = i_11426 + 1;
              i_11426 = G__11428;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__11421 = idx;
            var G__11422 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11421, G__11422) : f.call(null, G__11421, G__11422);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var G__11440 = arguments.length;
  switch(G__11440) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11442 = arguments.length;
      var i__9175__auto___11443 = 0;
      while (true) {
        if (i__9175__auto___11443 < len__9174__auto___11442) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11443]);
          var G__11444 = i__9175__auto___11443 + 1;
          i__9175__auto___11443 = G__11444;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__7955__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__7955__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__7955__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          var and__7955__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__7955__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__7955__auto____$1;
          }
        } else {
          return and__7955__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__11445__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__7955__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__7955__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__7955__auto__;
          }
        }());
      };
      var G__11445 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11446__i = 0, G__11446__a = new Array(arguments.length - 3);
          while (G__11446__i < G__11446__a.length) {
            G__11446__a[G__11446__i] = arguments[G__11446__i + 3];
            ++G__11446__i;
          }
          args = new cljs.core.IndexedSeq(G__11446__a, 0, null);
        }
        return G__11445__delegate.call(this, x, y, z, args);
      };
      G__11445.cljs$lang$maxFixedArity = 3;
      G__11445.cljs$lang$applyTo = function(arglist__11447) {
        var x = cljs.core.first(arglist__11447);
        arglist__11447 = cljs.core.next(arglist__11447);
        var y = cljs.core.first(arglist__11447);
        arglist__11447 = cljs.core.next(arglist__11447);
        var z = cljs.core.first(arglist__11447);
        var args = cljs.core.rest(arglist__11447);
        return G__11445__delegate(x, y, z, args);
      };
      G__11445.cljs$core$IFn$_invoke$arity$variadic = G__11445__delegate;
      return G__11445;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__11448 = null;
          if (arguments.length > 3) {
            var G__11449__i = 0, G__11449__a = new Array(arguments.length - 3);
            while (G__11449__i < G__11449__a.length) {
              G__11449__a[G__11449__i] = arguments[G__11449__i + 3];
              ++G__11449__i;
            }
            G__11448 = new cljs.core.IndexedSeq(G__11449__a, 0, null);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11448);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__7955__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__7955__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__7955__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          var and__7955__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__7955__auto____$1)) {
            var and__7955__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__7955__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__7955__auto____$2;
            }
          } else {
            return and__7955__auto____$1;
          }
        } else {
          return and__7955__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__7955__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          var and__7955__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__7955__auto____$1)) {
            var and__7955__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__7955__auto____$2)) {
              var and__7955__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__7955__auto____$3)) {
                var and__7955__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__7955__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__7955__auto____$4;
                }
              } else {
                return and__7955__auto____$3;
              }
            } else {
              return and__7955__auto____$2;
            }
          } else {
            return and__7955__auto____$1;
          }
        } else {
          return and__7955__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__11450__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__7955__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__7955__auto__)) {
            return cljs.core.every_QMARK_(function(p1__11429_SHARP_) {
              var and__7955__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__11429_SHARP_) : p1.call(null, p1__11429_SHARP_);
              if (cljs.core.truth_(and__7955__auto____$1)) {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__11429_SHARP_) : p2.call(null, p1__11429_SHARP_);
              } else {
                return and__7955__auto____$1;
              }
            }, args);
          } else {
            return and__7955__auto__;
          }
        }());
      };
      var G__11450 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11451__i = 0, G__11451__a = new Array(arguments.length - 3);
          while (G__11451__i < G__11451__a.length) {
            G__11451__a[G__11451__i] = arguments[G__11451__i + 3];
            ++G__11451__i;
          }
          args = new cljs.core.IndexedSeq(G__11451__a, 0, null);
        }
        return G__11450__delegate.call(this, x, y, z, args);
      };
      G__11450.cljs$lang$maxFixedArity = 3;
      G__11450.cljs$lang$applyTo = function(arglist__11452) {
        var x = cljs.core.first(arglist__11452);
        arglist__11452 = cljs.core.next(arglist__11452);
        var y = cljs.core.first(arglist__11452);
        arglist__11452 = cljs.core.next(arglist__11452);
        var z = cljs.core.first(arglist__11452);
        var args = cljs.core.rest(arglist__11452);
        return G__11450__delegate(x, y, z, args);
      };
      G__11450.cljs$core$IFn$_invoke$arity$variadic = G__11450__delegate;
      return G__11450;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__11453 = null;
          if (arguments.length > 3) {
            var G__11454__i = 0, G__11454__a = new Array(arguments.length - 3);
            while (G__11454__i < G__11454__a.length) {
              G__11454__a[G__11454__i] = arguments[G__11454__i + 3];
              ++G__11454__i;
            }
            G__11453 = new cljs.core.IndexedSeq(G__11454__a, 0, null);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11453);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__7955__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          var and__7955__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__7955__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__7955__auto____$1;
          }
        } else {
          return and__7955__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__7955__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          var and__7955__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__7955__auto____$1)) {
            var and__7955__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__7955__auto____$2)) {
              var and__7955__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__7955__auto____$3)) {
                var and__7955__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__7955__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__7955__auto____$4;
                }
              } else {
                return and__7955__auto____$3;
              }
            } else {
              return and__7955__auto____$2;
            }
          } else {
            return and__7955__auto____$1;
          }
        } else {
          return and__7955__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__7955__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          var and__7955__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__7955__auto____$1)) {
            var and__7955__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__7955__auto____$2)) {
              var and__7955__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__7955__auto____$3)) {
                var and__7955__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__7955__auto____$4)) {
                  var and__7955__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__7955__auto____$5)) {
                    var and__7955__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__7955__auto____$6)) {
                      var and__7955__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__7955__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__7955__auto____$7;
                      }
                    } else {
                      return and__7955__auto____$6;
                    }
                  } else {
                    return and__7955__auto____$5;
                  }
                } else {
                  return and__7955__auto____$4;
                }
              } else {
                return and__7955__auto____$3;
              }
            } else {
              return and__7955__auto____$2;
            }
          } else {
            return and__7955__auto____$1;
          }
        } else {
          return and__7955__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__11455__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__7955__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__7955__auto__)) {
            return cljs.core.every_QMARK_(function(p1__11430_SHARP_) {
              var and__7955__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__11430_SHARP_) : p1.call(null, p1__11430_SHARP_);
              if (cljs.core.truth_(and__7955__auto____$1)) {
                var and__7955__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__11430_SHARP_) : p2.call(null, p1__11430_SHARP_);
                if (cljs.core.truth_(and__7955__auto____$2)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__11430_SHARP_) : p3.call(null, p1__11430_SHARP_);
                } else {
                  return and__7955__auto____$2;
                }
              } else {
                return and__7955__auto____$1;
              }
            }, args);
          } else {
            return and__7955__auto__;
          }
        }());
      };
      var G__11455 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11456__i = 0, G__11456__a = new Array(arguments.length - 3);
          while (G__11456__i < G__11456__a.length) {
            G__11456__a[G__11456__i] = arguments[G__11456__i + 3];
            ++G__11456__i;
          }
          args = new cljs.core.IndexedSeq(G__11456__a, 0, null);
        }
        return G__11455__delegate.call(this, x, y, z, args);
      };
      G__11455.cljs$lang$maxFixedArity = 3;
      G__11455.cljs$lang$applyTo = function(arglist__11457) {
        var x = cljs.core.first(arglist__11457);
        arglist__11457 = cljs.core.next(arglist__11457);
        var y = cljs.core.first(arglist__11457);
        arglist__11457 = cljs.core.next(arglist__11457);
        var z = cljs.core.first(arglist__11457);
        var args = cljs.core.rest(arglist__11457);
        return G__11455__delegate(x, y, z, args);
      };
      G__11455.cljs$core$IFn$_invoke$arity$variadic = G__11455__delegate;
      return G__11455;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__11458 = null;
          if (arguments.length > 3) {
            var G__11459__i = 0, G__11459__a = new Array(arguments.length - 3);
            while (G__11459__i < G__11459__a.length) {
              G__11459__a[G__11459__i] = arguments[G__11459__i + 3];
              ++G__11459__i;
            }
            G__11458 = new cljs.core.IndexedSeq(G__11459__a, 0, null);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11458);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$epn = null;
    var cljs$core$epn__0 = function() {
      return true;
    };
    var cljs$core$epn__1 = function(x) {
      return cljs.core.every_QMARK_(function(p1__11431_SHARP_) {
        return p1__11431_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11431_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__11431_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$epn__2 = function(x, y) {
      return cljs.core.every_QMARK_(function(p1__11432_SHARP_) {
        var and__7955__auto__ = p1__11432_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11432_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__11432_SHARP_.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          return p1__11432_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11432_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__11432_SHARP_.call(null, y);
        } else {
          return and__7955__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__3 = function(x, y, z) {
      return cljs.core.every_QMARK_(function(p1__11433_SHARP_) {
        var and__7955__auto__ = p1__11433_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11433_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__11433_SHARP_.call(null, x);
        if (cljs.core.truth_(and__7955__auto__)) {
          var and__7955__auto____$1 = p1__11433_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11433_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__11433_SHARP_.call(null, y);
          if (cljs.core.truth_(and__7955__auto____$1)) {
            return p1__11433_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11433_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__11433_SHARP_.call(null, z);
          } else {
            return and__7955__auto____$1;
          }
        } else {
          return and__7955__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__4 = function() {
      var G__11460__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__7955__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__7955__auto__)) {
            return cljs.core.every_QMARK_(function(p1__11434_SHARP_) {
              return cljs.core.every_QMARK_(p1__11434_SHARP_, args);
            }, ps__$1);
          } else {
            return and__7955__auto__;
          }
        }());
      };
      var G__11460 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11461__i = 0, G__11461__a = new Array(arguments.length - 3);
          while (G__11461__i < G__11461__a.length) {
            G__11461__a[G__11461__i] = arguments[G__11461__i + 3];
            ++G__11461__i;
          }
          args = new cljs.core.IndexedSeq(G__11461__a, 0, null);
        }
        return G__11460__delegate.call(this, x, y, z, args);
      };
      G__11460.cljs$lang$maxFixedArity = 3;
      G__11460.cljs$lang$applyTo = function(arglist__11462) {
        var x = cljs.core.first(arglist__11462);
        arglist__11462 = cljs.core.next(arglist__11462);
        var y = cljs.core.first(arglist__11462);
        arglist__11462 = cljs.core.next(arglist__11462);
        var z = cljs.core.first(arglist__11462);
        var args = cljs.core.rest(arglist__11462);
        return G__11460__delegate(x, y, z, args);
      };
      G__11460.cljs$core$IFn$_invoke$arity$variadic = G__11460__delegate;
      return G__11460;
    }();
    cljs$core$epn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$epn__0.call(this);
        case 1:
          return cljs$core$epn__1.call(this, x);
        case 2:
          return cljs$core$epn__2.call(this, x, y);
        case 3:
          return cljs$core$epn__3.call(this, x, y, z);
        default:
          var G__11463 = null;
          if (arguments.length > 3) {
            var G__11464__i = 0, G__11464__a = new Array(arguments.length - 3);
            while (G__11464__i < G__11464__a.length) {
              G__11464__a[G__11464__i] = arguments[G__11464__i + 3];
              ++G__11464__i;
            }
            G__11463 = new cljs.core.IndexedSeq(G__11464__a, 0, null);
          }
          return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11463);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$epn.cljs$lang$maxFixedArity = 3;
    cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$epn;
  }();
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq11436) {
  var G__11437 = cljs.core.first(seq11436);
  var seq11436__$1 = cljs.core.next(seq11436);
  var G__11438 = cljs.core.first(seq11436__$1);
  var seq11436__$2 = cljs.core.next(seq11436__$1);
  var G__11439 = cljs.core.first(seq11436__$2);
  var seq11436__$3 = cljs.core.next(seq11436__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11437, G__11438, G__11439, seq11436__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var G__11476 = arguments.length;
  switch(G__11476) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11478 = arguments.length;
      var i__9175__auto___11479 = 0;
      while (true) {
        if (i__9175__auto___11479 < len__9174__auto___11478) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11479]);
          var G__11480 = i__9175__auto___11479 + 1;
          i__9175__auto___11479 = G__11480;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__7970__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__7970__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        var or__7970__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__7970__auto____$1)) {
          return or__7970__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__11481__delegate = function(x, y, z, args) {
        var or__7970__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__7970__auto__)) {
          return or__7970__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__11481 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11482__i = 0, G__11482__a = new Array(arguments.length - 3);
          while (G__11482__i < G__11482__a.length) {
            G__11482__a[G__11482__i] = arguments[G__11482__i + 3];
            ++G__11482__i;
          }
          args = new cljs.core.IndexedSeq(G__11482__a, 0, null);
        }
        return G__11481__delegate.call(this, x, y, z, args);
      };
      G__11481.cljs$lang$maxFixedArity = 3;
      G__11481.cljs$lang$applyTo = function(arglist__11483) {
        var x = cljs.core.first(arglist__11483);
        arglist__11483 = cljs.core.next(arglist__11483);
        var y = cljs.core.first(arglist__11483);
        arglist__11483 = cljs.core.next(arglist__11483);
        var z = cljs.core.first(arglist__11483);
        var args = cljs.core.rest(arglist__11483);
        return G__11481__delegate(x, y, z, args);
      };
      G__11481.cljs$core$IFn$_invoke$arity$variadic = G__11481__delegate;
      return G__11481;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__11484 = null;
          if (arguments.length > 3) {
            var G__11485__i = 0, G__11485__a = new Array(arguments.length - 3);
            while (G__11485__i < G__11485__a.length) {
              G__11485__a[G__11485__i] = arguments[G__11485__i + 3];
              ++G__11485__i;
            }
            G__11484 = new cljs.core.IndexedSeq(G__11485__a, 0, null);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11484);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__7970__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__7970__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        var or__7970__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__7970__auto____$1)) {
          return or__7970__auto____$1;
        } else {
          var or__7970__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__7970__auto____$2)) {
            return or__7970__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__7970__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        var or__7970__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__7970__auto____$1)) {
          return or__7970__auto____$1;
        } else {
          var or__7970__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__7970__auto____$2)) {
            return or__7970__auto____$2;
          } else {
            var or__7970__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__7970__auto____$3)) {
              return or__7970__auto____$3;
            } else {
              var or__7970__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__7970__auto____$4)) {
                return or__7970__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__11486__delegate = function(x, y, z, args) {
        var or__7970__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__7970__auto__)) {
          return or__7970__auto__;
        } else {
          return cljs.core.some(function(p1__11465_SHARP_) {
            var or__7970__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__11465_SHARP_) : p1.call(null, p1__11465_SHARP_);
            if (cljs.core.truth_(or__7970__auto____$1)) {
              return or__7970__auto____$1;
            } else {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__11465_SHARP_) : p2.call(null, p1__11465_SHARP_);
            }
          }, args);
        }
      };
      var G__11486 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11487__i = 0, G__11487__a = new Array(arguments.length - 3);
          while (G__11487__i < G__11487__a.length) {
            G__11487__a[G__11487__i] = arguments[G__11487__i + 3];
            ++G__11487__i;
          }
          args = new cljs.core.IndexedSeq(G__11487__a, 0, null);
        }
        return G__11486__delegate.call(this, x, y, z, args);
      };
      G__11486.cljs$lang$maxFixedArity = 3;
      G__11486.cljs$lang$applyTo = function(arglist__11488) {
        var x = cljs.core.first(arglist__11488);
        arglist__11488 = cljs.core.next(arglist__11488);
        var y = cljs.core.first(arglist__11488);
        arglist__11488 = cljs.core.next(arglist__11488);
        var z = cljs.core.first(arglist__11488);
        var args = cljs.core.rest(arglist__11488);
        return G__11486__delegate(x, y, z, args);
      };
      G__11486.cljs$core$IFn$_invoke$arity$variadic = G__11486__delegate;
      return G__11486;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__11489 = null;
          if (arguments.length > 3) {
            var G__11490__i = 0, G__11490__a = new Array(arguments.length - 3);
            while (G__11490__i < G__11490__a.length) {
              G__11490__a[G__11490__i] = arguments[G__11490__i + 3];
              ++G__11490__i;
            }
            G__11489 = new cljs.core.IndexedSeq(G__11490__a, 0, null);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11489);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__7970__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        var or__7970__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__7970__auto____$1)) {
          return or__7970__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__7970__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        var or__7970__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__7970__auto____$1)) {
          return or__7970__auto____$1;
        } else {
          var or__7970__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__7970__auto____$2)) {
            return or__7970__auto____$2;
          } else {
            var or__7970__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__7970__auto____$3)) {
              return or__7970__auto____$3;
            } else {
              var or__7970__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__7970__auto____$4)) {
                return or__7970__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__7970__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        var or__7970__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__7970__auto____$1)) {
          return or__7970__auto____$1;
        } else {
          var or__7970__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__7970__auto____$2)) {
            return or__7970__auto____$2;
          } else {
            var or__7970__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__7970__auto____$3)) {
              return or__7970__auto____$3;
            } else {
              var or__7970__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__7970__auto____$4)) {
                return or__7970__auto____$4;
              } else {
                var or__7970__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__7970__auto____$5)) {
                  return or__7970__auto____$5;
                } else {
                  var or__7970__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__7970__auto____$6)) {
                    return or__7970__auto____$6;
                  } else {
                    var or__7970__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__7970__auto____$7)) {
                      return or__7970__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__11491__delegate = function(x, y, z, args) {
        var or__7970__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__7970__auto__)) {
          return or__7970__auto__;
        } else {
          return cljs.core.some(function(p1__11466_SHARP_) {
            var or__7970__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__11466_SHARP_) : p1.call(null, p1__11466_SHARP_);
            if (cljs.core.truth_(or__7970__auto____$1)) {
              return or__7970__auto____$1;
            } else {
              var or__7970__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__11466_SHARP_) : p2.call(null, p1__11466_SHARP_);
              if (cljs.core.truth_(or__7970__auto____$2)) {
                return or__7970__auto____$2;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__11466_SHARP_) : p3.call(null, p1__11466_SHARP_);
              }
            }
          }, args);
        }
      };
      var G__11491 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11492__i = 0, G__11492__a = new Array(arguments.length - 3);
          while (G__11492__i < G__11492__a.length) {
            G__11492__a[G__11492__i] = arguments[G__11492__i + 3];
            ++G__11492__i;
          }
          args = new cljs.core.IndexedSeq(G__11492__a, 0, null);
        }
        return G__11491__delegate.call(this, x, y, z, args);
      };
      G__11491.cljs$lang$maxFixedArity = 3;
      G__11491.cljs$lang$applyTo = function(arglist__11493) {
        var x = cljs.core.first(arglist__11493);
        arglist__11493 = cljs.core.next(arglist__11493);
        var y = cljs.core.first(arglist__11493);
        arglist__11493 = cljs.core.next(arglist__11493);
        var z = cljs.core.first(arglist__11493);
        var args = cljs.core.rest(arglist__11493);
        return G__11491__delegate(x, y, z, args);
      };
      G__11491.cljs$core$IFn$_invoke$arity$variadic = G__11491__delegate;
      return G__11491;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__11494 = null;
          if (arguments.length > 3) {
            var G__11495__i = 0, G__11495__a = new Array(arguments.length - 3);
            while (G__11495__i < G__11495__a.length) {
              G__11495__a[G__11495__i] = arguments[G__11495__i + 3];
              ++G__11495__i;
            }
            G__11494 = new cljs.core.IndexedSeq(G__11495__a, 0, null);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11494);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$spn = null;
    var cljs$core$spn__0 = function() {
      return null;
    };
    var cljs$core$spn__1 = function(x) {
      return cljs.core.some(function(p1__11467_SHARP_) {
        return p1__11467_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11467_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__11467_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$spn__2 = function(x, y) {
      return cljs.core.some(function(p1__11468_SHARP_) {
        var or__7970__auto__ = p1__11468_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11468_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__11468_SHARP_.call(null, x);
        if (cljs.core.truth_(or__7970__auto__)) {
          return or__7970__auto__;
        } else {
          return p1__11468_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11468_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__11468_SHARP_.call(null, y);
        }
      }, ps__$1);
    };
    var cljs$core$spn__3 = function(x, y, z) {
      return cljs.core.some(function(p1__11469_SHARP_) {
        var or__7970__auto__ = p1__11469_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11469_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__11469_SHARP_.call(null, x);
        if (cljs.core.truth_(or__7970__auto__)) {
          return or__7970__auto__;
        } else {
          var or__7970__auto____$1 = p1__11469_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11469_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__11469_SHARP_.call(null, y);
          if (cljs.core.truth_(or__7970__auto____$1)) {
            return or__7970__auto____$1;
          } else {
            return p1__11469_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11469_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__11469_SHARP_.call(null, z);
          }
        }
      }, ps__$1);
    };
    var cljs$core$spn__4 = function() {
      var G__11496__delegate = function(x, y, z, args) {
        var or__7970__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__7970__auto__)) {
          return or__7970__auto__;
        } else {
          return cljs.core.some(function(p1__11470_SHARP_) {
            return cljs.core.some(p1__11470_SHARP_, args);
          }, ps__$1);
        }
      };
      var G__11496 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11497__i = 0, G__11497__a = new Array(arguments.length - 3);
          while (G__11497__i < G__11497__a.length) {
            G__11497__a[G__11497__i] = arguments[G__11497__i + 3];
            ++G__11497__i;
          }
          args = new cljs.core.IndexedSeq(G__11497__a, 0, null);
        }
        return G__11496__delegate.call(this, x, y, z, args);
      };
      G__11496.cljs$lang$maxFixedArity = 3;
      G__11496.cljs$lang$applyTo = function(arglist__11498) {
        var x = cljs.core.first(arglist__11498);
        arglist__11498 = cljs.core.next(arglist__11498);
        var y = cljs.core.first(arglist__11498);
        arglist__11498 = cljs.core.next(arglist__11498);
        var z = cljs.core.first(arglist__11498);
        var args = cljs.core.rest(arglist__11498);
        return G__11496__delegate(x, y, z, args);
      };
      G__11496.cljs$core$IFn$_invoke$arity$variadic = G__11496__delegate;
      return G__11496;
    }();
    cljs$core$spn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$spn__0.call(this);
        case 1:
          return cljs$core$spn__1.call(this, x);
        case 2:
          return cljs$core$spn__2.call(this, x, y);
        case 3:
          return cljs$core$spn__3.call(this, x, y, z);
        default:
          var G__11499 = null;
          if (arguments.length > 3) {
            var G__11500__i = 0, G__11500__a = new Array(arguments.length - 3);
            while (G__11500__i < G__11500__a.length) {
              G__11500__a[G__11500__i] = arguments[G__11500__i + 3];
              ++G__11500__i;
            }
            G__11499 = new cljs.core.IndexedSeq(G__11500__a, 0, null);
          }
          return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11499);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$spn.cljs$lang$maxFixedArity = 3;
    cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$spn;
  }();
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq11472) {
  var G__11473 = cljs.core.first(seq11472);
  var seq11472__$1 = cljs.core.next(seq11472);
  var G__11474 = cljs.core.first(seq11472__$1);
  var seq11472__$2 = cljs.core.next(seq11472__$1);
  var G__11475 = cljs.core.first(seq11472__$2);
  var seq11472__$3 = cljs.core.next(seq11472__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11473, G__11474, G__11475, seq11472__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var G__11508 = arguments.length;
  switch(G__11508) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11521 = arguments.length;
      var i__9175__auto___11522 = 0;
      while (true) {
        if (i__9175__auto___11522 < len__9174__auto___11521) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11522]);
          var G__11523 = i__9175__auto___11522 + 1;
          i__9175__auto___11522 = G__11523;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9200__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__11524 = null;
      var G__11524__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11524__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11524__2 = function(result, input) {
        var G__11509 = result;
        var G__11510 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11509, G__11510) : rf.call(null, G__11509, G__11510);
      };
      var G__11524__3 = function() {
        var G__11525__delegate = function(result, input, inputs) {
          var G__11511 = result;
          var G__11512 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11511, G__11512) : rf.call(null, G__11511, G__11512);
        };
        var G__11525 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__11526__i = 0, G__11526__a = new Array(arguments.length - 2);
            while (G__11526__i < G__11526__a.length) {
              G__11526__a[G__11526__i] = arguments[G__11526__i + 2];
              ++G__11526__i;
            }
            inputs = new cljs.core.IndexedSeq(G__11526__a, 0, null);
          }
          return G__11525__delegate.call(this, result, input, inputs);
        };
        G__11525.cljs$lang$maxFixedArity = 2;
        G__11525.cljs$lang$applyTo = function(arglist__11527) {
          var result = cljs.core.first(arglist__11527);
          arglist__11527 = cljs.core.next(arglist__11527);
          var input = cljs.core.first(arglist__11527);
          var inputs = cljs.core.rest(arglist__11527);
          return G__11525__delegate(result, input, inputs);
        };
        G__11525.cljs$core$IFn$_invoke$arity$variadic = G__11525__delegate;
        return G__11525;
      }();
      G__11524 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__11524__0.call(this);
          case 1:
            return G__11524__1.call(this, result);
          case 2:
            return G__11524__2.call(this, result, input);
          default:
            var G__11528 = null;
            if (arguments.length > 2) {
              var G__11529__i = 0, G__11529__a = new Array(arguments.length - 2);
              while (G__11529__i < G__11529__a.length) {
                G__11529__a[G__11529__i] = arguments[G__11529__i + 2];
                ++G__11529__i;
              }
              G__11528 = new cljs.core.IndexedSeq(G__11529__a, 0, null);
            }
            return G__11524__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__11528);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11524.cljs$lang$maxFixedArity = 2;
      G__11524.cljs$lang$applyTo = G__11524__3.cljs$lang$applyTo;
      G__11524.cljs$core$IFn$_invoke$arity$0 = G__11524__0;
      G__11524.cljs$core$IFn$_invoke$arity$1 = G__11524__1;
      G__11524.cljs$core$IFn$_invoke$arity$2 = G__11524__2;
      G__11524.cljs$core$IFn$_invoke$arity$variadic = G__11524__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__11524;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__8943__auto___11530 = size;
        var i_11531 = 0;
        while (true) {
          if (i_11531 < n__8943__auto___11530) {
            cljs.core.chunk_append(b, function() {
              var G__11513 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11531);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11513) : f.call(null, G__11513);
            }());
            var G__11532 = i_11531 + 1;
            i_11531 = G__11532;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__11514 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11514) : f.call(null, G__11514);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__11515 = cljs.core.first(s1);
        var G__11516 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11515, G__11516) : f.call(null, G__11515, G__11516);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__11517 = cljs.core.first(s1);
        var G__11518 = cljs.core.first(s2);
        var G__11519 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11517, G__11518, G__11519) : f.call(null, G__11517, G__11518, G__11519);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__11501_SHARP_) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__11501_SHARP_);
  }, step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq11503) {
  var G__11504 = cljs.core.first(seq11503);
  var seq11503__$1 = cljs.core.next(seq11503);
  var G__11505 = cljs.core.first(seq11503__$1);
  var seq11503__$2 = cljs.core.next(seq11503__$1);
  var G__11506 = cljs.core.first(seq11503__$2);
  var seq11503__$3 = cljs.core.next(seq11503__$2);
  var G__11507 = cljs.core.first(seq11503__$3);
  var seq11503__$4 = cljs.core.next(seq11503__$3);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11504, G__11505, G__11506, G__11507, seq11503__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var G__11534 = arguments.length;
  switch(G__11534) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__11536 = null;
      var G__11536__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11536__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11536__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
        if (!(nn > 0)) {
          return cljs.core.ensure_reduced(result__$1);
        } else {
          return result__$1;
        }
      };
      G__11536 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11536__0.call(this);
          case 1:
            return G__11536__1.call(this, result);
          case 2:
            return G__11536__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11536.cljs$core$IFn$_invoke$arity$0 = G__11536__0;
      G__11536.cljs$core$IFn$_invoke$arity$1 = G__11536__1;
      G__11536.cljs$core$IFn$_invoke$arity$2 = G__11536__2;
      return G__11536;
    }();
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var G__11538 = arguments.length;
  switch(G__11538) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__11540 = null;
      var G__11540__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11540__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11540__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        if (n__$1 > 0) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__11540 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11540__0.call(this);
          case 1:
            return G__11540__1.call(this, result);
          case 2:
            return G__11540__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11540.cljs$core$IFn$_invoke$arity$0 = G__11540__0;
      G__11540.cljs$core$IFn$_invoke$arity$1 = G__11540__1;
      G__11540.cljs$core$IFn$_invoke$arity$2 = G__11540__2;
      return G__11540;
    }();
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__11541 = n__$1 - 1;
        var G__11542 = cljs.core.rest(s);
        n__$1 = G__11541;
        coll__$1 = G__11542;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(n, coll);
  }, null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var G__11544 = arguments.length;
  switch(G__11544) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__11546 = cljs.core.next(s);
      var G__11547 = cljs.core.next(lead);
      s = G__11546;
      lead = G__11547;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var G__11549 = arguments.length;
  switch(G__11549) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function() {
      var G__11553 = null;
      var G__11553__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11553__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11553__2 = function(result, input) {
        var drop_QMARK_ = cljs.core.deref(da);
        if (cljs.core.truth_(function() {
          var and__7955__auto__ = drop_QMARK_;
          if (cljs.core.truth_(and__7955__auto__)) {
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
          } else {
            return and__7955__auto__;
          }
        }())) {
          return result;
        } else {
          cljs.core.vreset_BANG_(da, null);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__11553 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11553__0.call(this);
          case 1:
            return G__11553__1.call(this, result);
          case 2:
            return G__11553__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11553.cljs$core$IFn$_invoke$arity$0 = G__11553__0;
      G__11553.cljs$core$IFn$_invoke$arity$1 = G__11553__1;
      G__11553.cljs$core$IFn$_invoke$arity$2 = G__11553__2;
      return G__11553;
    }();
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__7955__auto__ = s;
        if (and__7955__auto__) {
          var G__11551 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__11551) : pred__$1.call(null, G__11551);
        } else {
          return and__7955__auto__;
        }
      }())) {
        var G__11554 = pred__$1;
        var G__11555 = cljs.core.rest(s);
        pred__$1 = G__11554;
        coll__$1 = G__11555;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(pred, coll);
  }, null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(meta, all, prev, current, _next) {
  this.meta = meta;
  this.all = all;
  this.prev = prev;
  this.current = current;
  this._next = _next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cycle.prototype.currentval = function() {
  var self__ = this;
  var coll = this;
  if (self__.current) {
  } else {
    var temp__4655__auto___11562 = cljs.core.next(self__.prev);
    if (temp__4655__auto___11562) {
      var c_11563 = temp__4655__auto___11562;
      self__.current = c_11563;
    } else {
      self__.current = self__.all;
    }
  }
  return self__.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.current == null);
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = cljs.core.first(s);
  while (true) {
    var s__$1 = function() {
      var or__7970__auto__ = cljs.core.next(s);
      if (or__7970__auto__) {
        return or__7970__auto__;
      } else {
        return self__.all;
      }
    }();
    var ret__$1 = function() {
      var G__11558 = ret;
      var G__11559 = cljs.core.first(s__$1);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11558, G__11559) : f.call(null, G__11558, G__11559);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__11564 = s__$1;
      var G__11565 = ret__$1;
      s = G__11564;
      ret = G__11565;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = start;
  while (true) {
    var ret__$1 = function() {
      var G__11560 = ret;
      var G__11561 = cljs.core.first(s);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11560, G__11561) : f.call(null, G__11560, G__11561);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__11566 = function() {
        var or__7970__auto__ = cljs.core.next(s);
        if (or__7970__auto__) {
          return or__7970__auto__;
        } else {
          return self__.all;
        }
      }();
      var G__11567 = ret__$1;
      s = G__11566;
      ret = G__11567;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(coll__$1.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__._next == null) {
    self__._next = new cljs.core.Cycle(null, self__.all, coll__$1.currentval(), null, null);
  } else {
  }
  return self__._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cycle(new_meta, self__.all, self__.prev, self__.current, self__._next);
  }
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cycle.cljs$lang$type = true;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function cljs$core$__GT_Cycle(meta, all, prev, current, _next) {
  return new cljs.core.Cycle(meta, all, prev, current, _next);
};
cljs.core.cycle = function cljs$core$cycle(coll) {
  var temp__4655__auto__ = cljs.core.seq(coll);
  if (temp__4655__auto__) {
    var vals = temp__4655__auto__;
    return new cljs.core.Cycle(null, vals, null, vals, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.Repeat = function(meta, count, val, next, __hash) {
  this.meta = meta;
  this.count = count;
  this.val = val;
  this.next = next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Repeat.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var G__11568 = null;
  var G__11568__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11568__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11568 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11568__1.call(this, x);
      case 2:
        return G__11568__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11568.cljs$core$IFn$_invoke$arity$1 = G__11568__1;
  G__11568.cljs$core$IFn$_invoke$arity$2 = G__11568__2;
  return G__11568;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var G__11569 = null;
  var G__11569__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__11569__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11569 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11569__1.call(this, x);
      case 2:
        return G__11569__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11569.cljs$core$IFn$_invoke$arity$1 = G__11569__1;
  G__11569.cljs$core$IFn$_invoke$arity$2 = G__11569__2;
  return G__11569;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return null;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return false;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val, self__.val) : f.call(null, self__.val, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__11570 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__11570;
        continue;
      }
      break;
    }
  } else {
    var i = 1;
    var ret = self__.val;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__11571 = i + 1;
          var G__11572 = ret__$1;
          i = G__11571;
          ret = G__11572;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start, self__.val) : f.call(null, start, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__11573 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__11573;
        continue;
      }
      break;
    }
  } else {
    var i = 0;
    var ret = start;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__11574 = i + 1;
          var G__11575 = ret__$1;
          i = G__11574;
          ret = G__11575;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Repeat(new_meta, self__.count, self__.val, self__.next, null);
  }
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Repeat.cljs$lang$type = true;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function cljs$core$__GT_Repeat(meta, count, val, next, __hash) {
  return new cljs.core.Repeat(meta, count, val, next, __hash);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var G__11577 = arguments.length;
  switch(G__11577) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Repeat(null, -1, x, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  if (n > 0) {
    return new cljs.core.Repeat(null, n, x, null, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var G__11580 = arguments.length;
  switch(G__11580) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(meta, f, prev_seed, seed, next) {
  this.meta = meta;
  this.f = f;
  this.prev_seed = prev_seed;
  this.seed = seed;
  this.next = next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.seed === cljs.core.UNREALIZED_SEED);
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, rf) {
  var self__ = this;
  var coll__$1 = this;
  var first = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var v = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null, first);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first, v) : rf.call(null, first, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__11582 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__11583 = v__$2;
      ret = G__11582;
      v__$1 = G__11583;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, rf, start) {
  var self__ = this;
  var coll__$1 = this;
  var v = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start, v) : rf.call(null, start, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__11584 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__11585 = v__$2;
      ret = G__11584;
      v__$1 = G__11585;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.UNREALIZED_SEED === self__.seed) {
    self__.seed = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null, self__.prev_seed);
  } else {
  }
  return self__.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    self__.next = new cljs.core.Iterate(null, self__.f, coll__$1.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null);
  } else {
  }
  return self__.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Iterate(new_meta, self__.f, self__.prev_seed, self__.seed, self__.next);
  }
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Iterate.cljs$lang$type = true;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function cljs$core$__GT_Iterate(meta, f, prev_seed, seed, next) {
  return new cljs.core.Iterate(meta, f, prev_seed, seed, next);
};
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return new cljs.core.Iterate(null, f, null, x, null);
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var G__11590 = arguments.length;
  switch(G__11590) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11592 = arguments.length;
      var i__9175__auto___11593 = 0;
      while (true) {
        if (i__9175__auto___11593 < len__9174__auto___11592) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11593]);
          var G__11594 = i__9175__auto___11593 + 1;
          i__9175__auto___11593 = G__11594;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9200__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq11587) {
  var G__11588 = cljs.core.first(seq11587);
  var seq11587__$1 = cljs.core.next(seq11587);
  var G__11589 = cljs.core.first(seq11587__$1);
  var seq11587__$2 = cljs.core.next(seq11587__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11588, G__11589, seq11587__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var G__11596 = arguments.length;
  switch(G__11596) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function() {
      var G__11598 = null;
      var G__11598__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11598__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11598__2 = function(result, input) {
        if (cljs.core.truth_(cljs.core.deref(started))) {
          var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
          if (cljs.core.reduced_QMARK_(sepr)) {
            return sepr;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
          }
        } else {
          cljs.core.vreset_BANG_(started, true);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__11598 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11598__0.call(this);
          case 1:
            return G__11598__1.call(this, result);
          case 2:
            return G__11598__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11598.cljs$core$IFn$_invoke$arity$0 = G__11598__0;
      G__11598.cljs$core$IFn$_invoke$arity$1 = G__11598__1;
      G__11598.cljs$core$IFn$_invoke$arity$2 = G__11598__2;
      return G__11598;
    }();
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4655__auto__ = cljs.core.seq(coll);
      if (temp__4655__auto__) {
        var coll__$1 = temp__4655__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var G__11602 = arguments.length;
  switch(G__11602) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11604 = arguments.length;
      var i__9175__auto___11605 = 0;
      while (true) {
        if (i__9175__auto___11605 < len__9174__auto___11604) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11605]);
          var G__11606 = i__9175__auto___11605 + 1;
          i__9175__auto___11605 = G__11606;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9200__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq11600) {
  var G__11601 = cljs.core.first(seq11600);
  var seq11600__$1 = cljs.core.next(seq11600);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11601, seq11600__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var G__11608 = arguments.length;
  switch(G__11608) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__11611 = null;
      var G__11611__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11611__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11611__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__11611 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11611__0.call(this);
          case 1:
            return G__11611__1.call(this, result);
          case 2:
            return G__11611__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11611.cljs$core$IFn$_invoke$arity$0 = G__11611__0;
      G__11611.cljs$core$IFn$_invoke$arity$1 = G__11611__1;
      G__11611.cljs$core$IFn$_invoke$arity$2 = G__11611__2;
      return G__11611;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__8943__auto___11612 = size;
        var i_11613 = 0;
        while (true) {
          if (i_11613 < n__8943__auto___11612) {
            if (cljs.core.truth_(function() {
              var G__11609 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11613);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11609) : pred.call(null, G__11609);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_11613));
            } else {
            }
            var G__11614 = i_11613 + 1;
            i_11613 = G__11614;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var G__11616 = arguments.length;
  switch(G__11616) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__11618_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__11618_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var G__11620 = arguments.length;
  switch(G__11620) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var G__11630 = arguments.length;
  switch(G__11630) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11632 = arguments.length;
      var i__9175__auto___11633 = 0;
      while (true) {
        if (i__9175__auto___11633 < len__9174__auto___11632) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11633]);
          var G__11634 = i__9175__auto___11633 + 1;
          i__9175__auto___11633 = G__11634;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__9200__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq11625) {
  var G__11626 = cljs.core.first(seq11625);
  var seq11625__$1 = cljs.core.next(seq11625);
  var G__11627 = cljs.core.first(seq11625__$1);
  var seq11625__$2 = cljs.core.next(seq11625__$1);
  var G__11628 = cljs.core.first(seq11625__$2);
  var seq11625__$3 = cljs.core.next(seq11625__$2);
  var G__11629 = cljs.core.first(seq11625__$3);
  var seq11625__$4 = cljs.core.next(seq11625__$3);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11626, G__11627, G__11628, G__11629, seq11625__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var G__11636 = arguments.length;
  switch(G__11636) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)), null, 1, null);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var G__11639 = arguments.length;
  switch(G__11639) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__11641 = sentinel;
        var G__11642 = m__$2;
        var G__11643 = cljs.core.next(ks__$1);
        sentinel = G__11641;
        m__$1 = G__11642;
        ks__$1 = G__11643;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__11644, v) {
  var vec__11645 = p__11644;
  var seq__11646 = cljs.core.seq(vec__11645);
  var first__11647 = cljs.core.first(seq__11646);
  var seq__11646__$1 = cljs.core.next(seq__11646);
  var k = first__11647;
  var ks = seq__11646__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__11648 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__11649 = ks;
      var G__11650 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__11648, G__11649, G__11650) : cljs.core.assoc_in.call(null, G__11648, G__11649, G__11650);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var G__11659 = arguments.length;
  switch(G__11659) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11691 = arguments.length;
      var i__9175__auto___11692 = 0;
      while (true) {
        if (i__9175__auto___11692 < len__9174__auto___11691) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11692]);
          var G__11693 = i__9175__auto___11692 + 1;
          i__9175__auto___11692 = G__11693;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__9200__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__11660, f) {
  var vec__11661 = p__11660;
  var seq__11662 = cljs.core.seq(vec__11661);
  var first__11663 = cljs.core.first(seq__11662);
  var seq__11662__$1 = cljs.core.next(seq__11662);
  var k = first__11663;
  var ks = seq__11662__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__11664 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11664) : f.call(null, G__11664);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__11665, f, a) {
  var vec__11666 = p__11665;
  var seq__11667 = cljs.core.seq(vec__11666);
  var first__11668 = cljs.core.first(seq__11667);
  var seq__11667__$1 = cljs.core.next(seq__11667);
  var k = first__11668;
  var ks = seq__11667__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__11669 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__11670 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11669, G__11670) : f.call(null, G__11669, G__11670);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__11671, f, a, b) {
  var vec__11672 = p__11671;
  var seq__11673 = cljs.core.seq(vec__11672);
  var first__11674 = cljs.core.first(seq__11673);
  var seq__11673__$1 = cljs.core.next(seq__11673);
  var k = first__11674;
  var ks = seq__11673__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__11675 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__11676 = a;
      var G__11677 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11675, G__11676, G__11677) : f.call(null, G__11675, G__11676, G__11677);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__11678, f, a, b, c) {
  var vec__11679 = p__11678;
  var seq__11680 = cljs.core.seq(vec__11679);
  var first__11681 = cljs.core.first(seq__11680);
  var seq__11680__$1 = cljs.core.next(seq__11680);
  var k = first__11681;
  var ks = seq__11680__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__11682 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__11683 = a;
      var G__11684 = b;
      var G__11685 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11682, G__11683, G__11684, G__11685) : f.call(null, G__11682, G__11683, G__11684, G__11685);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__11686, f, a, b, c, args) {
  var vec__11687 = p__11686;
  var seq__11688 = cljs.core.seq(vec__11687);
  var first__11689 = cljs.core.first(seq__11688);
  var seq__11688__$1 = cljs.core.next(seq__11688);
  var k = first__11689;
  var ks = seq__11688__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq11652) {
  var G__11653 = cljs.core.first(seq11652);
  var seq11652__$1 = cljs.core.next(seq11652);
  var G__11654 = cljs.core.first(seq11652__$1);
  var seq11652__$2 = cljs.core.next(seq11652__$1);
  var G__11655 = cljs.core.first(seq11652__$2);
  var seq11652__$3 = cljs.core.next(seq11652__$2);
  var G__11656 = cljs.core.first(seq11652__$3);
  var seq11652__$4 = cljs.core.next(seq11652__$3);
  var G__11657 = cljs.core.first(seq11652__$4);
  var seq11652__$5 = cljs.core.next(seq11652__$4);
  var G__11658 = cljs.core.first(seq11652__$5);
  var seq11652__$6 = cljs.core.next(seq11652__$5);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11653, G__11654, G__11655, G__11656, G__11657, G__11658, seq11652__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var G__11702 = arguments.length;
  switch(G__11702) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___11714 = arguments.length;
      var i__9175__auto___11715 = 0;
      while (true) {
        if (i__9175__auto___11715 < len__9174__auto___11714) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___11715]);
          var G__11716 = i__9175__auto___11715 + 1;
          i__9175__auto___11715 = G__11716;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__9200__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__11703 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11703) : f.call(null, G__11703);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__11704 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__11705 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11704, G__11705) : f.call(null, G__11704, G__11705);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__11706 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__11707 = x;
    var G__11708 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11706, G__11707, G__11708) : f.call(null, G__11706, G__11707, G__11708);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__11709 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__11710 = x;
    var G__11711 = y;
    var G__11712 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11709, G__11710, G__11711, G__11712) : f.call(null, G__11709, G__11710, G__11711, G__11712);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq11695) {
  var G__11696 = cljs.core.first(seq11695);
  var seq11695__$1 = cljs.core.next(seq11695);
  var G__11697 = cljs.core.first(seq11695__$1);
  var seq11695__$2 = cljs.core.next(seq11695__$1);
  var G__11698 = cljs.core.first(seq11695__$2);
  var seq11695__$3 = cljs.core.next(seq11695__$2);
  var G__11699 = cljs.core.first(seq11695__$3);
  var seq11695__$4 = cljs.core.next(seq11695__$3);
  var G__11700 = cljs.core.first(seq11695__$4);
  var seq11695__$5 = cljs.core.next(seq11695__$4);
  var G__11701 = cljs.core.first(seq11695__$5);
  var seq11695__$6 = cljs.core.next(seq11695__$5);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11696, G__11697, G__11698, G__11699, G__11700, G__11701, seq11695__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__11717 = ll - 5;
      var G__11718 = r;
      ll = G__11717;
      ret = G__11718;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__11719 = pv;
        var G__11720 = level - 5;
        var G__11721 = child;
        var G__11722 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__11719, G__11720, G__11721, G__11722) : cljs.core.push_tail.call(null, G__11719, G__11720, G__11721, G__11722);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__11723 = cljs.core.pv_aget(node, 0);
      var G__11724 = level - 5;
      node = G__11723;
      level = G__11724;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__11725 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__11726 = level - 5;
        node = G__11725;
        level = G__11726;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__11727 = pv;
      var G__11728 = level - 5;
      var G__11729 = cljs.core.pv_aget(node, subidx);
      var G__11730 = i;
      var G__11731 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__11727, G__11728, G__11729, G__11730, G__11731) : cljs.core.do_assoc.call(null, G__11727, G__11728, G__11729, G__11730, G__11731);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__11732 = pv;
      var G__11733 = level - 5;
      var G__11734 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__11732, G__11733, G__11734) : cljs.core.pop_tail.call(null, G__11732, G__11733, G__11734);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.pv_reduce = function cljs$core$pv_reduce(var_args) {
  var G__11736 = arguments.length;
  switch(G__11736) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(pv, f, start, end) {
  if (start < end) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv, f, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv, start), start + 1, end);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(pv, f, init, start, end) {
  var acc = init;
  var i = start;
  var arr = cljs.core.unchecked_array_for(pv, start);
  while (true) {
    if (i < end) {
      var j = i & 31;
      var arr__$1 = j === 0 ? cljs.core.unchecked_array_for(pv, i) : arr;
      var nacc = function() {
        var G__11737 = acc;
        var G__11738 = arr__$1[j];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11737, G__11738) : f.call(null, G__11737, G__11738);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__11740 = nacc;
        var G__11741 = i + 1;
        var G__11742 = arr__$1;
        acc = G__11740;
        i = G__11741;
        arr = G__11742;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return new cljs.core.MapEntry(n, cljs.core.unchecked_array_for(coll__$1, n)[n & 31], null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__11749 = null;
  var G__11749__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11749__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11749 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11749__1.call(this, x);
      case 2:
        return G__11749__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11749.cljs$core$IFn$_invoke$arity$1 = G__11749__1;
  G__11749.cljs$core$IFn$_invoke$arity$2 = G__11749__2;
  return G__11749;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__11750 = null;
  var G__11750__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11750__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11750 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11750__1.call(this, x);
      case 2:
        return G__11750__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11750.cljs$core$IFn$_invoke$arity$1 = G__11750__1;
  G__11750.cljs$core$IFn$_invoke$arity$2 = G__11750__2;
  return G__11750;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__11744 = init__$2;
              var G__11745 = j + i;
              var G__11746 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11744, G__11745, G__11746) : f.call(null, G__11744, G__11745, G__11746);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__11751 = j + 1;
              var G__11752 = init__$3;
              j = G__11751;
              init__$2 = G__11752;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__11753 = i + len;
        var G__11754 = init__$2;
        i = G__11753;
        init__$1 = G__11754;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return coll__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt), "]"].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = coll__$1.cljs$core$IIterable$_iterator$arity$1(null);
      var you_iter = other.cljs$core$IIterable$_iterator$arity$1(null);
      while (true) {
        if (me_iter.hasNext()) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root(self__.root), cljs.core.tv_editable_tail(self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1, f, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__11747 = init__$2;
              var G__11748 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11747, G__11748) : f.call(null, G__11747, G__11748);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__11755 = j + 1;
              var G__11756 = init__$3;
              j = G__11755;
              init__$2 = G__11756;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__11757 = i + len;
        var G__11758 = init__$2;
        i = G__11757;
        init__$1 = G__11758;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(k)) {
    return 0 <= k && k < self__.cnt;
  } else {
    return false;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(coll__$1, cljs.core.first_array_for_longvec(coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentVector(new_meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__8943__auto___11759 = len;
    var i_11760 = 0;
    while (true) {
      if (i_11760 < n__8943__auto___11759) {
        new_tail[i_11760] = self__.tail[i_11760];
        var G__11761 = i_11760 + 1;
        i_11760 = G__11761;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__11762 = null;
  var G__11762__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11762__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11762 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11762__2.call(this, self__, k);
      case 3:
        return G__11762__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__11762.cljs$core$IFn$_invoke$arity$2 = G__11762__2;
  G__11762.cljs$core$IFn$_invoke$arity$3 = G__11762__3;
  return G__11762;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args11743) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11743)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__11763 = i + 1;
        var G__11764 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__11763;
        out = G__11764;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
goog.object.set(cljs.core.PersistentVector.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.map_entry_QMARK_(coll)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.key(coll), cljs.core.val(coll)], null);
  } else {
    if (cljs.core.vector_QMARK_(coll)) {
      return cljs.core.with_meta(coll, null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.PersistentVector.fromArray(coll, true);
      } else {
        return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
      }
    }
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___11766 = arguments.length;
  var i__9175__auto___11767 = 0;
  while (true) {
    if (i__9175__auto___11767 < len__9174__auto___11766) {
      args__9184__auto__.push(arguments[i__9175__auto___11767]);
      var G__11768 = i__9175__auto___11767 + 1;
      i__9175__auto___11767 = G__11768;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, !cljs.core.array_QMARK_(args.arr));
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq11765) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11765));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__11769 = null;
  var G__11769__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11769__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11769 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11769__1.call(this, x);
      case 2:
        return G__11769__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11769.cljs$core$IFn$_invoke$arity$1 = G__11769__1;
  G__11769.cljs$core$IFn$_invoke$arity$2 = G__11769__2;
  return G__11769;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__11770 = null;
  var G__11770__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11770__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11770 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11770__1.call(this, x);
      case 2:
        return G__11770__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11770.cljs$core$IFn$_invoke$arity$1 = G__11770__1;
  G__11770.cljs$core$IFn$_invoke$arity$2 = G__11770__2;
  return G__11770;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec, f, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec, f, start, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, new_meta);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
goog.object.set(cljs.core.ChunkedSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var G__11772 = arguments.length;
  switch(G__11772) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0) {
    return null;
  } else {
    var idx = self__.start + n;
    if (idx < self__.end) {
      return new cljs.core.MapEntry(n, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.v, idx), null);
    } else {
      return null;
    }
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__11781 = null;
  var G__11781__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11781__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__11781 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__11781__1.call(this, x);
      case 2:
        return G__11781__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11781.cljs$core$IFn$_invoke$arity$1 = G__11781__1;
  G__11781.cljs$core$IFn$_invoke$arity$2 = G__11781__2;
  return G__11781;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__11782 = null;
  var G__11782__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11782__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__11782 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__11782__1.call(this, x);
      case 2:
        return G__11782__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11782.cljs$core$IFn$_invoke$arity$1 = G__11782__1;
  G__11782.cljs$core$IFn$_invoke$arity$2 = G__11782__2;
  return G__11782;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__11775 = init__$1;
        var G__11776 = j;
        var G__11777 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11775, G__11776, G__11777) : f.call(null, G__11775, G__11776, G__11777);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__11783 = i + 1;
        var G__11784 = j + 1;
        var G__11785 = init__$2;
        i = G__11783;
        j = G__11784;
        init__$1 = G__11785;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  if (n < 0 || self__.end + 1 <= v_pos) {
    throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  } else {
    return cljs.core.build_subvec(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
      var x__8326__auto__ = self__.end;
      var y__8327__auto__ = v_pos + 1;
      return x__8326__auto__ > y__8327__auto__ ? x__8326__auto__ : y__8327__auto__;
    }(), null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.ranged_iterator(self__.v, self__.start, self__.end);
  } else {
    return cljs.core.seq_iter(coll__$1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    return null;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec(self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v, f, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v, f, init, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, init);
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function cljs$core$subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function() {
        return cljs$core$subvec_seq(i + 1);
      }, null, null));
    }
  };
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.build_subvec(new_meta, self__.v, self__.start, self__.end, self__.__hash);
  }
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__11786 = null;
  var G__11786__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11786__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11786 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11786__2.call(this, self__, k);
      case 3:
        return G__11786__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__11786.cljs$core$IFn$_invoke$arity$2 = G__11786__2;
  G__11786.cljs$core$IFn$_invoke$arity$3 = G__11786__3;
  return G__11786;
}();
cljs.core.Subvec.prototype.apply = function(self__, args11774) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11774)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
goog.object.set(cljs.core.Subvec.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__11787 = meta;
      var G__11788 = v.v;
      var G__11789 = v.start + start;
      var G__11790 = v.start + end;
      var G__11791 = __hash;
      meta = G__11787;
      v = G__11788;
      start = G__11789;
      end = G__11790;
      __hash = G__11791;
      continue;
    } else {
      if (cljs.core.vector_QMARK_(v)) {
      } else {
        throw new Error("v must satisfy IVector");
      }
      if (start < 0 || end < start || end > cljs.core.count(v)) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var G__11793 = arguments.length;
  switch(G__11793) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  if (!(start == null) && !(end == null)) {
  } else {
    throw new Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, v, start | 0, end | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__11797 = tv;
      var G__11798 = level - 5;
      var G__11799 = child;
      var G__11800 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__11797, G__11798, G__11799, G__11800) : cljs.core.tv_push_tail.call(null, G__11797, G__11798, G__11799, G__11800);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__11801 = tv;
      var G__11802 = level - 5;
      var G__11803 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__11801, G__11802, G__11803) : cljs.core.tv_pop_tail.call(null, G__11801, G__11802, G__11803);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__11804 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__11805 = level - 5;
        node = G__11804;
        level = G__11805;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function() {
          var fexpr__11807 = function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
          return fexpr__11807(self__.shift, self__.root);
        }();
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (!self__.root.edit) {
    throw new Error("lookup after persistent!");
  } else {
    if (typeof k === "number") {
      return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
    } else {
      return not_found;
    }
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__11808 = null;
  var G__11808__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11808__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11808 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11808__2.call(this, self__, k);
      case 3:
        return G__11808__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__11808.cljs$core$IFn$_invoke$arity$2 = G__11808__2;
  G__11808.cljs$core$IFn$_invoke$arity$3 = G__11808__3;
  return G__11808;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args11806) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11806)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__7970__auto__ = !(self__.fseq == null) && cljs.core.seq(self__.fseq);
  if (or__7970__auto__) {
    return or__7970__auto__;
  } else {
    if (!(self__.riter == null)) {
      return self__.riter.hasNext();
    } else {
      return false;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.fseq == null)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (!(self__.riter == null) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__11809 = null;
  var G__11809__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11809__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11809 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11809__1.call(this, x);
      case 2:
        return G__11809__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11809.cljs$core$IFn$_invoke$arity$1 = G__11809__1;
  G__11809.cljs$core$IFn$_invoke$arity$2 = G__11809__2;
  return G__11809;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__11810 = null;
  var G__11810__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11810__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11810 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11810__1.call(this, x);
      case 2:
        return G__11810__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11810.cljs$core$IFn$_invoke$arity$1 = G__11810__1;
  G__11810.cljs$core$IFn$_invoke$arity$2 = G__11810__2;
  return G__11810;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (!(self__.rear == null)) {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core.next(self__.front);
  if (temp__4655__auto__) {
    var f1 = temp__4655__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueueSeq(new_meta, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
goog.object.set(cljs.core.PersistentQueueSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__11811 = null;
  var G__11811__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11811__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11811 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11811__1.call(this, x);
      case 2:
        return G__11811__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11811.cljs$core$IFn$_invoke$arity$1 = G__11811__1;
  G__11811.cljs$core$IFn$_invoke$arity$2 = G__11811__2;
  return G__11811;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__11812 = null;
  var G__11812__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__11812__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11812 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11812__1.call(this, x);
      case 2:
        return G__11812__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11812.cljs$core$IFn$_invoke$arity$1 = G__11812__1;
  G__11812.cljs$core$IFn$_invoke$arity$2 = G__11812__2;
  return G__11812;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4655__auto__ = cljs.core.next(self__.front);
    if (temp__4655__auto__) {
      var f1 = temp__4655__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__7970__auto__ = self__.front;
    if (cljs.core.truth_(or__7970__auto__)) {
      return or__7970__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueue(new_meta, self__.count, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__7970__auto__ = self__.rear;
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
goog.object.set(cljs.core.PersistentQueue.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) && !cljs.core.record_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IKVReduce$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x)) ? cljs.core.reduce_kv(function(_, k, v) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, k, cljs.core.never_equiv), v)) {
      return true;
    } else {
      return cljs.core.reduced(false);
    }
  }, true, x) : cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__11814 = i + incr;
        i = G__11814;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__11815 = i + 1;
      var G__11816 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, goog.object.get(so, k__$1));
      i = G__11815;
      out = G__11816;
      continue;
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_11819 = 0;
  while (true) {
    if (i_11819 < l) {
      var k_11820 = ks[i_11819];
      goog.object.set(new_obj, k_11820, goog.object.get(obj, k_11820));
      var G__11821 = i_11819 + 1;
      i_11819 = G__11821;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return new cljs.core.MapEntry(k, self__.strobj[k], null);
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__11824 = init__$1;
        var G__11825 = k;
        var G__11826 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11824, G__11825, G__11826) : f.call(null, G__11824, G__11825, G__11826);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__11827 = cljs.core.rest(keys__$1);
        var G__11828 = init__$2;
        keys__$1 = G__11827;
        init__$1 = G__11828;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        goog.object.set(new_strobj, k, v);
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        goog.object.set(new_strobj, k, v);
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__11822_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__11822_SHARP_, self__.strobj[p1__11822_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ObjMap(new_meta, self__.keys, self__.strobj, self__.update_count, self__.__hash);
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__11829 = null;
  var G__11829__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11829__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11829 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11829__2.call(this, self__, k);
      case 3:
        return G__11829__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__11829.cljs$core$IFn$_invoke$arity$2 = G__11829__2;
  G__11829.cljs$core$IFn$_invoke$arity$3 = G__11829__3;
  return G__11829;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args11823) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11823)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__7970__auto__ = self__.i < self__.base_count;
  if (or__7970__auto__) {
    return or__7970__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.MapEntry(k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k), null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__11832 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11832, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11832, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__11835 = i + 2;
        i = G__11835;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__11836 = i + 2;
        i = G__11836;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__11837 = i + 2;
        i = G__11837;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__11838 = i + 2;
        i = G__11838;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__11839 = i + 2;
        i = G__11839;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_11840 = 0;
  while (true) {
    if (i_11840 < l) {
      narr[i_11840] = arr[i_11840];
      var G__11841 = i_11840 + 1;
      i_11840 = G__11841;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.MapEntry = function(key, val, __hash) {
  this.key = key;
  this.val = val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__11843 = k;
  switch(G__11843) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var G__11845 = null;
  var G__11845__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11845__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11845 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11845__1.call(this, x);
      case 2:
        return G__11845__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11845.cljs$core$IFn$_invoke$arity$1 = G__11845__1;
  G__11845.cljs$core$IFn$_invoke$arity$2 = G__11845__2;
  return G__11845;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var G__11846 = null;
  var G__11846__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11846__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11846 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11846__1.call(this, x);
      case 2:
        return G__11846__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11846.cljs$core$IFn$_invoke$arity$1 = G__11846__1;
  G__11846.cljs$core$IFn$_invoke$arity$2 = G__11846__2;
  return G__11846;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var G__11847 = null;
  var G__11847__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__11847__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__11847 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11847__2.call(this, self__, k);
      case 3:
        return G__11847__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__11847.cljs$core$IFn$_invoke$arity$2 = G__11847__2;
  G__11847.cljs$core$IFn$_invoke$arity$3 = G__11847__3;
  return G__11847;
}();
cljs.core.MapEntry.prototype.apply = function(self__, args11842) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11842)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = true;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function cljs$core$__GT_MapEntry(key, val, __hash) {
  return new cljs.core.MapEntry(key, val, __hash);
};
cljs.core.map_entry_QMARK_ = function cljs$core$map_entry_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMapEntry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__11849 = null;
  var G__11849__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11849__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11849 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11849__1.call(this, x);
      case 2:
        return G__11849__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11849.cljs$core$IFn$_invoke$arity$1 = G__11849__1;
  G__11849.cljs$core$IFn$_invoke$arity$2 = G__11849__2;
  return G__11849;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__11850 = null;
  var G__11850__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11850__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11850 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11850__1.call(this, x);
      case 2:
        return G__11850__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11850.cljs$core$IFn$_invoke$arity$1 = G__11850__1;
  G__11850.cljs$core$IFn$_invoke$arity$2 = G__11850__2;
  return G__11850;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
goog.object.set(cljs.core.PersistentArrayMapSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return null;
  } else {
    return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11852 = cljs.core.seq(coll);
  var chunk__11853 = null;
  var count__11854 = 0;
  var i__11855 = 0;
  while (true) {
    if (i__11855 < count__11854) {
      var vec__11862 = chunk__11853.cljs$core$IIndexed$_nth$arity$2(null, i__11855);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11862, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11862, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__11874 = seq__11852;
      var G__11875 = chunk__11853;
      var G__11876 = count__11854;
      var G__11877 = i__11855 + 1;
      seq__11852 = G__11874;
      chunk__11853 = G__11875;
      count__11854 = G__11876;
      i__11855 = G__11877;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__11852);
      if (temp__4657__auto__) {
        var seq__11852__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11852__$1)) {
          var c__8838__auto__ = cljs.core.chunk_first(seq__11852__$1);
          var G__11878 = cljs.core.chunk_rest(seq__11852__$1);
          var G__11879 = c__8838__auto__;
          var G__11880 = cljs.core.count(c__8838__auto__);
          var G__11881 = 0;
          seq__11852 = G__11878;
          chunk__11853 = G__11879;
          count__11854 = G__11880;
          i__11855 = G__11881;
          continue;
        } else {
          var vec__11865 = cljs.core.first(seq__11852__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11865, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11865, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__11882 = cljs.core.next(seq__11852__$1);
          var G__11883 = null;
          var G__11884 = 0;
          var G__11885 = 0;
          seq__11852 = G__11882;
          chunk__11853 = G__11883;
          count__11854 = G__11884;
          i__11855 = G__11885;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__11868 = init__$1;
        var G__11869 = self__.arr[i];
        var G__11870 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11868, G__11869, G__11870) : f.call(null, G__11868, G__11869, G__11870);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__11886 = i + 2;
        var G__11887 = init__$2;
        i = G__11886;
        init__$1 = G__11887;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.map_QMARK_(other) && !cljs.core.record_QMARK_(other)) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__11888 = i + 2;
              i = G__11888;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__11889 = s + 2;
            var G__11890 = d;
            s = G__11889;
            d = G__11890;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__11891 = s + 2;
            var G__11892 = d + 2;
            s = G__11891;
            d = G__11892;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__11873 = cljs.core.aclone(self__.arr);
        G__11873[idx + 1] = v;
        return G__11873;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMap(new_meta, self__.cnt, self__.arr, self__.__hash);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__11893 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__11894 = cljs.core.next(es);
          ret = G__11893;
          es = G__11894;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__11895 = null;
  var G__11895__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11895__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11895 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11895__2.call(this, self__, k);
      case 3:
        return G__11895__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__11895.cljs$core$IFn$_invoke$arity$2 = G__11895__2;
  G__11895.cljs$core$IFn$_invoke$arity$3 = G__11895__3;
  return G__11895;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args11851) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11851)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_11896 = 0;
    while (true) {
      if (i_11896 < arr__$1.length) {
        var k_11897 = arr__$1[i_11896];
        var v_11898 = arr__$1[i_11896 + 1];
        var idx_11899 = cljs.core.array_index_of(ret, k_11897);
        if (idx_11899 === -1) {
          ret.push(k_11897);
          ret.push(v_11898);
        } else {
        }
        var G__11900 = i_11896 + 2;
        i_11896 = G__11900;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(arr) {
  var ret = [];
  var i_11902 = 0;
  while (true) {
    if (i_11902 < arr.length) {
      var k_11903 = arr[i_11902];
      var v_11904 = arr[i_11902 + 1];
      var idx_11905 = cljs.core.array_index_of(ret, k_11903);
      if (idx_11905 === -1) {
        var G__11901_11906 = ret;
        G__11901_11906.push(k_11903);
        G__11901_11906.push(v_11904);
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_11903)].join(""));
      }
      var G__11907 = i_11902 + 2;
      i_11902 = G__11907;
      continue;
    } else {
    }
    break;
  }
  var cnt = arr.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(arr) {
  var ret = [];
  var i_11909 = 0;
  while (true) {
    if (i_11909 < arr.length) {
      var k_11910 = arr[i_11909];
      var v_11911 = arr[i_11909 + 1];
      var idx_11912 = cljs.core.array_index_of(ret, k_11910);
      if (idx_11912 === -1) {
        var G__11908_11913 = ret;
        G__11908_11913.push(k_11910);
        G__11908_11913.push(v_11911);
      } else {
        ret[idx_11912 + 1] = v_11911;
      }
      var G__11914 = i_11909 + 2;
      i_11909 = G__11914;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, ret.length / 2, ret, null);
};
goog.object.set(cljs.core.PersistentArrayMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$2 = tcoll__$1;
        while (true) {
          var temp__4655__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__4655__auto__)) {
            var e = temp__4655__auto__;
            var G__11917 = cljs.core.next(es);
            var G__11918 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key(e), cljs.core.val(e));
            es = G__11917;
            tcoll__$2 = G__11918;
            continue;
          } else {
            return tcoll__$2;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__11916_11919 = self__.arr;
      G__11916_11919.pop();
      G__11916_11919.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var G__11920 = null;
  var G__11920__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
  };
  var G__11920__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__11920 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11920__2.call(this, self__, key);
      case 3:
        return G__11920__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__11920.cljs$core$IFn$_invoke$arity$2 = G__11920__2;
  G__11920.cljs$core$IFn$_invoke$arity$3 = G__11920__3;
  return G__11920;
}();
cljs.core.TransientArrayMap.prototype.apply = function(self__, args11915) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11915)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, 
  null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__11921 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__11922 = i + 2;
      out = G__11921;
      i = G__11922;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var G__11924 = arguments.length;
  switch(G__11924) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__11925 = cljs.core.aclone(arr);
  G__11925[i] = a;
  return G__11925;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__11926 = cljs.core.aclone(arr);
  G__11926[i] = a;
  G__11926[j] = b;
  return G__11926;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var G__11929 = arguments.length;
  switch(G__11929) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__11931 = init__$1;
          var G__11932 = k;
          var G__11933 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11931, G__11932, G__11933) : f.call(null, G__11931, G__11932, G__11933);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return init__$2;
      } else {
        var G__11934 = i + 2;
        var G__11935 = init__$2;
        i = G__11934;
        init__$1 = G__11935;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = !(key == null) ? self__.next_entry = new cljs.core.MapEntry(key, node_or_val, null) : !(node_or_val == null) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__7970__auto__ = !(self__.next_entry == null);
  if (or__7970__auto__) {
    return or__7970__auto__;
  } else {
    var or__7970__auto____$1 = !(self__.next_iter == null);
    if (or__7970__auto____$1) {
      return or__7970__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__.next_entry == null)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (!(self__.next_iter == null)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_.val = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_11936 = 0;
        var j_11937 = 0;
        while (true) {
          if (i_11936 < 32) {
            if ((self__.bitmap >>> i_11936 & 1) === 0) {
              var G__11938 = i_11936 + 1;
              var G__11939 = j_11937;
              i_11936 = G__11938;
              j_11937 = G__11939;
              continue;
            } else {
              nodes[i_11936] = !(self__.arr[j_11937] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_11937]), self__.arr[j_11937], self__.arr[j_11937 + 1], added_leaf_QMARK_) : self__.arr[j_11937 + 1];
              var G__11940 = i_11936 + 1;
              var G__11941 = j_11937 + 2;
              i_11936 = G__11940;
              j_11937 = G__11941;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_11942 = 0;
      var j_11943 = 0;
      while (true) {
        if (i_11942 < 32) {
          if ((self__.bitmap >>> i_11942 & 1) === 0) {
            var G__11944 = i_11942 + 1;
            var G__11945 = j_11943;
            i_11942 = G__11944;
            j_11943 = G__11945;
            continue;
          } else {
            nodes[i_11942] = !(self__.arr[j_11943] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_11943]), self__.arr[j_11943], self__.arr[j_11943 + 1], added_leaf_QMARK_) : self__.arr[j_11943 + 1];
            var G__11946 = i_11942 + 1;
            var G__11947 = j_11943 + 2;
            i_11942 = G__11946;
            j_11943 = G__11947;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.MapEntry(key_or_nil, val_or_node, null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__11948 = i + 1;
        var G__11949 = j + 2;
        var G__11950 = bitmap | 1 << i;
        i = G__11948;
        j = G__11949;
        bitmap = G__11950;
        continue;
      } else {
        var G__11951 = i + 1;
        var G__11952 = j;
        var G__11953 = bitmap;
        i = G__11951;
        j = G__11952;
        bitmap = G__11953;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(!(self__.next_iter == null) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (!(node == null)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return init__$2;
        } else {
          var G__11954 = i + 1;
          var G__11955 = init__$2;
          i = G__11954;
          init__$1 = G__11955;
          continue;
        }
      } else {
        var G__11956 = i + 1;
        var G__11957 = init__$1;
        i = G__11956;
        init__$1 = G__11957;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__11958 = i + 2;
        i = G__11958;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_.val = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var G__11960 = arguments.length;
  switch(G__11960) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__11962 = null;
  var G__11962__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11962__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11962 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11962__1.call(this, x);
      case 2:
        return G__11962__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11962.cljs$core$IFn$_invoke$arity$1 = G__11962__1;
  G__11962.cljs$core$IFn$_invoke$arity$2 = G__11962__2;
  return G__11962;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__11963 = null;
  var G__11963__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11963__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11963 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11963__1.call(this, x);
      case 2:
        return G__11963__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11963.cljs$core$IFn$_invoke$arity$1 = G__11963__1;
  G__11963.cljs$core$IFn$_invoke$arity$2 = G__11963__2;
  return G__11963;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.MapEntry(self__.nodes[self__.i], self__.nodes[self__.i + 1], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.NodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
goog.object.set(cljs.core.NodeSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var G__11965 = arguments.length;
  switch(G__11965) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4655__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4655__auto__)) {
            var node = temp__4655__auto__;
            var temp__4655__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4655__auto____$1)) {
              var node_seq = temp__4655__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__11967 = j + 2;
              j = G__11967;
              continue;
            }
          } else {
            var G__11968 = j + 2;
            j = G__11968;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__11969 = null;
  var G__11969__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__11969__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11969 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11969__1.call(this, x);
      case 2:
        return G__11969__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11969.cljs$core$IFn$_invoke$arity$1 = G__11969__1;
  G__11969.cljs$core$IFn$_invoke$arity$2 = G__11969__2;
  return G__11969;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__11970 = null;
  var G__11970__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__11970__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__11970 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__11970__1.call(this, x);
      case 2:
        return G__11970__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11970.cljs$core$IFn$_invoke$arity$1 = G__11970__1;
  G__11970.cljs$core$IFn$_invoke$arity$2 = G__11970__2;
  return G__11970;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ArrayNodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
goog.object.set(cljs.core.ArrayNodeSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var G__11972 = arguments.length;
  switch(G__11972) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4655__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4655__auto__)) {
          var nj = temp__4655__auto__;
          var temp__4655__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4655__auto____$1)) {
            var ns = temp__4655__auto____$1;
            return new cljs.core.ArrayNodeSeq(null, nodes, j + 1, ns, null);
          } else {
            var G__11974 = j + 1;
            j = G__11974;
            continue;
          }
        } else {
          var G__11975 = j + 1;
          j = G__11975;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 3;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return !self__.seen || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.MapEntry(null, self__.nil_val, null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.MapEntry(null, self__.nil_val, null);
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_find(0, cljs.core.hash(k), k, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11977 = cljs.core.seq(coll);
  var chunk__11978 = null;
  var count__11979 = 0;
  var i__11980 = 0;
  while (true) {
    if (i__11980 < count__11979) {
      var vec__11987 = chunk__11978.cljs$core$IIndexed$_nth$arity$2(null, i__11980);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11987, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11987, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__11995 = seq__11977;
      var G__11996 = chunk__11978;
      var G__11997 = count__11979;
      var G__11998 = i__11980 + 1;
      seq__11977 = G__11995;
      chunk__11978 = G__11996;
      count__11979 = G__11997;
      i__11980 = G__11998;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__11977);
      if (temp__4657__auto__) {
        var seq__11977__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11977__$1)) {
          var c__8838__auto__ = cljs.core.chunk_first(seq__11977__$1);
          var G__11999 = cljs.core.chunk_rest(seq__11977__$1);
          var G__12000 = c__8838__auto__;
          var G__12001 = cljs.core.count(c__8838__auto__);
          var G__12002 = 0;
          seq__11977 = G__11999;
          chunk__11978 = G__12000;
          count__11979 = G__12001;
          i__11980 = G__12002;
          continue;
        } else {
          var vec__11990 = cljs.core.first(seq__11977__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11990, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11990, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__12003 = cljs.core.next(seq__11977__$1);
          var G__12004 = null;
          var G__12005 = 0;
          var G__12006 = 0;
          seq__11977 = G__12003;
          chunk__11978 = G__12004;
          count__11979 = G__12005;
          i__11980 = G__12006;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref(init__$1);
  } else {
    if (!(self__.root == null)) {
      return cljs.core.unreduced(self__.root.kv_reduce(f, init__$1));
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.MapEntry(null, self__.nil_val, null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashMap(new_meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__12007 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__12008 = cljs.core.next(es);
          ret = G__12007;
          es = G__12008;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__12009 = null;
  var G__12009__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12009__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12009 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12009__2.call(this, self__, k);
      case 3:
        return G__12009__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12009.cljs$core$IFn$_invoke$arity$2 = G__12009__2;
  G__12009.cljs$core$IFn$_invoke$arity$3 = G__12009__3;
  return G__12009;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args11976) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11976)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__12010 = i + 2;
      var G__12011 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__12010;
      ret = G__12011;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__12012 = i + 1;
      var G__12013 = cljs.core._assoc_BANG_(out, ks[i], vs[i]);
      i = G__12012;
      out = G__12013;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(arr) {
  var len = arr.length;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i_12014 = 0;
  while (true) {
    if (i_12014 < len) {
      cljs.core._assoc_BANG_(ret, arr[i_12014], arr[i_12014 + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret), i_12014 / 2 + 1)) {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_12014])].join(""));
      } else {
        var G__12015 = i_12014 + 2;
        i_12014 = G__12015;
        continue;
      }
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(ret);
};
goog.object.set(cljs.core.PersistentHashMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll.assoc_BANG_(cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$1 = tcoll;
        while (true) {
          var temp__4655__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__4655__auto__)) {
            var e = temp__4655__auto__;
            var G__12017 = cljs.core.next(es);
            var G__12018 = tcoll__$1.assoc_BANG_(cljs.core.key(e), cljs.core.val(e));
            es = G__12017;
            tcoll__$1 = G__12018;
            continue;
          } else {
            return tcoll__$1;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (removed_leaf_QMARK_.val) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var G__12019 = null;
  var G__12019__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
  };
  var G__12019__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__12019 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12019__2.call(this, self__, key);
      case 3:
        return G__12019__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12019.cljs$core$IFn$_invoke$arity$2 = G__12019__2;
  G__12019.cljs$core$IFn$_invoke$arity$3 = G__12019__3;
  return G__12019;
}();
cljs.core.TransientHashMap.prototype.apply = function(self__, args12016) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12016)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__12020 = ascending_QMARK_ ? t.left : t.right;
      var G__12021 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__12020;
      stack__$1 = G__12021;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__12022 = null;
  var G__12022__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12022__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12022 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12022__1.call(this, x);
      case 2:
        return G__12022__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12022.cljs$core$IFn$_invoke$arity$1 = G__12022__1;
  G__12022.cljs$core$IFn$_invoke$arity$2 = G__12022__2;
  return G__12022;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__12023 = null;
  var G__12023__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12023__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12023 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12023__1.call(this, x);
      case 2:
        return G__12023__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12023.cljs$core$IFn$_invoke$arity$1 = G__12023__1;
  G__12023.cljs$core$IFn$_invoke$arity$2 = G__12023__2;
  return G__12023;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (next_stack == null) {
    return null;
  } else {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMapSeq(new_meta, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
goog.object.set(cljs.core.PersistentTreeMapSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__12024 = node.left;
    var G__12025 = f;
    var G__12026 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__12024, G__12025, G__12026) : cljs.core.tree_map_kv_reduce.call(null, G__12024, G__12025, G__12026);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return init__$1;
  } else {
    var init__$2 = function() {
      var G__12027 = init__$1;
      var G__12028 = node.key;
      var G__12029 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12027, G__12028, G__12029) : f.call(null, G__12027, G__12028, G__12029);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return init__$2;
    } else {
      if (!(node.right == null)) {
        var G__12030 = node.right;
        var G__12031 = f;
        var G__12032 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__12030, G__12031, G__12032) : cljs.core.tree_map_kv_reduce.call(null, G__12030, G__12031, G__12032);
      } else {
        return init__$2;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__12034 = k;
  switch(G__12034) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__12036 = null;
  var G__12036__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12036__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12036 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12036__1.call(this, x);
      case 2:
        return G__12036__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12036.cljs$core$IFn$_invoke$arity$1 = G__12036__1;
  G__12036.cljs$core$IFn$_invoke$arity$2 = G__12036__2;
  return G__12036;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__12037 = null;
  var G__12037__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12037__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12037 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12037__1.call(this, x);
      case 2:
        return G__12037__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12037.cljs$core$IFn$_invoke$arity$1 = G__12037__1;
  G__12037.cljs$core$IFn$_invoke$arity$2 = G__12037__2;
  return G__12037;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__12038 = null;
  var G__12038__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__12038__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__12038 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12038__2.call(this, self__, k);
      case 3:
        return G__12038__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12038.cljs$core$IFn$_invoke$arity$2 = G__12038__2;
  G__12038.cljs$core$IFn$_invoke$arity$3 = G__12038__3;
  return G__12038;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args12033) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12033)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
goog.object.set(cljs.core.BlackNode.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__12040 = k;
  switch(G__12040) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__12042 = null;
  var G__12042__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12042__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12042 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12042__1.call(this, x);
      case 2:
        return G__12042__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12042.cljs$core$IFn$_invoke$arity$1 = G__12042__1;
  G__12042.cljs$core$IFn$_invoke$arity$2 = G__12042__2;
  return G__12042;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__12043 = null;
  var G__12043__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12043__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12043 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12043__1.call(this, x);
      case 2:
        return G__12043__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12043.cljs$core$IFn$_invoke$arity$1 = G__12043__1;
  G__12043.cljs$core$IFn$_invoke$arity$2 = G__12043__2;
  return G__12043;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__12044 = null;
  var G__12044__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__12044__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__12044 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12044__2.call(this, self__, k);
      case 3:
        return G__12044__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12044.cljs$core$IFn$_invoke$arity$2 = G__12044__2;
  G__12044.cljs$core$IFn$_invoke$arity$3 = G__12044__3;
  return G__12044;
}();
cljs.core.RedNode.prototype.apply = function(self__, args12039) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12039)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
goog.object.set(cljs.core.RedNode.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__12045 = k;
      var G__12046 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__12045, G__12046) : comp.call(null, G__12045, G__12046);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__12047 = comp;
          var G__12048 = tree.left;
          var G__12049 = k;
          var G__12050 = v;
          var G__12051 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__12047, G__12048, G__12049, G__12050, G__12051) : cljs.core.tree_map_add.call(null, G__12047, G__12048, G__12049, G__12050, G__12051);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__12052 = comp;
          var G__12053 = tree.right;
          var G__12054 = k;
          var G__12055 = v;
          var G__12056 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__12052, G__12053, G__12054, G__12055, G__12056) : cljs.core.tree_map_add.call(null, G__12052, G__12053, G__12054, G__12055, G__12056);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__12057 = left.right;
            var G__12058 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__12057, G__12058) : cljs.core.tree_map_append.call(null, G__12057, G__12058);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__12059 = left.right;
            var G__12060 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__12059, G__12060) : cljs.core.tree_map_append.call(null, G__12059, G__12060);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__12061 = left;
            var G__12062 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__12061, G__12062) : cljs.core.tree_map_append.call(null, G__12061, G__12062);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__12063 = left.right;
            var G__12064 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__12063, G__12064) : cljs.core.tree_map_append.call(null, G__12063, G__12064);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__12065 = k;
      var G__12066 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__12065, G__12066) : comp.call(null, G__12065, G__12066);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__12067 = comp;
          var G__12068 = tree.left;
          var G__12069 = k;
          var G__12070 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__12067, G__12068, G__12069, G__12070) : cljs.core.tree_map_remove.call(null, G__12067, G__12068, G__12069, G__12070);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__12071 = comp;
          var G__12072 = tree.right;
          var G__12073 = k;
          var G__12074 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__12071, G__12072, G__12073, G__12074) : cljs.core.tree_map_remove.call(null, G__12071, G__12072, G__12073, G__12074);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__12075 = comp;
        var G__12076 = tree.left;
        var G__12077 = k;
        var G__12078 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__12075, G__12076, G__12077, G__12078) : cljs.core.tree_map_replace.call(null, G__12075, G__12076, G__12077, G__12078);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__12079 = comp;
        var G__12080 = tree.right;
        var G__12081 = k;
        var G__12082 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__12079, G__12080, G__12081, G__12082) : cljs.core.tree_map_replace.call(null, G__12079, G__12080, G__12081, G__12082);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.entry_at(k);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__12084 = cljs.core.seq(coll);
  var chunk__12085 = null;
  var count__12086 = 0;
  var i__12087 = 0;
  while (true) {
    if (i__12087 < count__12086) {
      var vec__12094 = chunk__12085.cljs$core$IIndexed$_nth$arity$2(null, i__12087);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12094, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12094, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__12106 = seq__12084;
      var G__12107 = chunk__12085;
      var G__12108 = count__12086;
      var G__12109 = i__12087 + 1;
      seq__12084 = G__12106;
      chunk__12085 = G__12107;
      count__12086 = G__12108;
      i__12087 = G__12109;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__12084);
      if (temp__4657__auto__) {
        var seq__12084__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12084__$1)) {
          var c__8838__auto__ = cljs.core.chunk_first(seq__12084__$1);
          var G__12110 = cljs.core.chunk_rest(seq__12084__$1);
          var G__12111 = c__8838__auto__;
          var G__12112 = cljs.core.count(c__8838__auto__);
          var G__12113 = 0;
          seq__12084 = G__12110;
          chunk__12085 = G__12111;
          count__12086 = G__12112;
          i__12087 = G__12113;
          continue;
        } else {
          var vec__12097 = cljs.core.first(seq__12084__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12097, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12097, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__12114 = cljs.core.next(seq__12084__$1);
          var G__12115 = null;
          var G__12116 = 0;
          var G__12117 = 0;
          seq__12084 = G__12114;
          chunk__12085 = G__12115;
          count__12086 = G__12116;
          i__12087 = G__12117;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__12100 = k;
        var G__12101 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__12100, G__12101) : self__.comp.call(null, G__12100, G__12101);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__12118 = t.left;
          t = G__12118;
          continue;
        } else {
          var G__12119 = t.right;
          t = G__12119;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree, f, init));
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, new_meta, self__.__hash);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__12120 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__12121 = cljs.core.next(es);
          ret = G__12120;
          es = G__12121;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__12122 = null;
  var G__12122__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12122__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12122 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12122__2.call(this, self__, k);
      case 3:
        return G__12122__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12122.cljs$core$IFn$_invoke$arity$2 = G__12122__2;
  G__12122.cljs$core$IFn$_invoke$arity$3 = G__12122__3;
  return G__12122;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args12083) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12083)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__12104 = k;
          var G__12105 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__12104, G__12105) : self__.comp.call(null, G__12104, G__12105);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__12123 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__12124 = t.left;
              stack = G__12123;
              t = G__12124;
              continue;
            } else {
              var G__12125 = stack;
              var G__12126 = t.right;
              stack = G__12125;
              t = G__12126;
              continue;
            }
          } else {
            if (c > 0) {
              var G__12127 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__12128 = t.right;
              stack = G__12127;
              t = G__12128;
              continue;
            } else {
              var G__12129 = stack;
              var G__12130 = t.left;
              stack = G__12129;
              t = G__12130;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key(entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
goog.object.set(cljs.core.PersistentTreeMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12132 = arguments.length;
  var i__9175__auto___12133 = 0;
  while (true) {
    if (i__9175__auto___12133 < len__9174__auto___12132) {
      args__9184__auto__.push(arguments[i__9175__auto___12133]);
      var G__12134 = i__9175__auto___12133 + 1;
      i__9175__auto___12133 = G__12134;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__12135 = cljs.core.nnext(in$);
      var G__12136 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__12135;
      out = G__12136;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq12131) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12131));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12138 = arguments.length;
  var i__9175__auto___12139 = 0;
  while (true) {
    if (i__9175__auto___12139 < len__9174__auto___12138) {
      args__9184__auto__.push(arguments[i__9175__auto___12139]);
      var G__12140 = i__9175__auto___12139 + 1;
      i__9175__auto___12139 = G__12140;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq12137) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12137));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12144 = arguments.length;
  var i__9175__auto___12145 = 0;
  while (true) {
    if (i__9175__auto___12145 < len__9174__auto___12144) {
      args__9184__auto__.push(arguments[i__9175__auto___12145]);
      var G__12146 = i__9175__auto___12145 + 1;
      i__9175__auto___12145 = G__12146;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      goog.object.set(obj, cljs.core.first(kvs), cljs.core.second(kvs));
      var G__12147 = cljs.core.nnext(kvs);
      kvs = G__12147;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq12141) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12141));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12149 = arguments.length;
  var i__9175__auto___12150 = 0;
  while (true) {
    if (i__9175__auto___12150 < len__9174__auto___12149) {
      args__9184__auto__.push(arguments[i__9175__auto___12150]);
      var G__12151 = i__9175__auto___12150 + 1;
      i__9175__auto___12150 = G__12151;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__12152 = cljs.core.nnext(in$);
      var G__12153 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__12152;
      out = G__12153;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq12148) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12148));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12156 = arguments.length;
  var i__9175__auto___12157 = 0;
  while (true) {
    if (i__9175__auto___12157 < len__9174__auto___12156) {
      args__9184__auto__.push(arguments[i__9175__auto___12157]);
      var G__12158 = i__9175__auto___12157 + 1;
      i__9175__auto___12157 = G__12158;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 1 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9185__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__12159 = cljs.core.nnext(in$);
      var G__12160 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__12159;
      out = G__12160;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq12154) {
  var G__12155 = cljs.core.first(seq12154);
  var seq12154__$1 = cljs.core.next(seq12154);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12155, seq12154__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__12163 = null;
  var G__12163__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12163__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12163 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12163__1.call(this, x);
      case 2:
        return G__12163__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12163.cljs$core$IFn$_invoke$arity$1 = G__12163__1;
  G__12163.cljs$core$IFn$_invoke$arity$2 = G__12163__2;
  return G__12163;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__12164 = null;
  var G__12164__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12164__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12164 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12164__1.call(this, x);
      case 2:
        return G__12164__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12164.cljs$core$IFn$_invoke$arity$1 = G__12164__1;
  G__12164.cljs$core$IFn$_invoke$arity$2 = G__12164__2;
  return G__12164;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, null);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.KeySeq(self__.mseq, new_meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
goog.object.set(cljs.core.KeySeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.keys = function cljs$core$keys(map) {
  var temp__4657__auto__ = cljs.core.seq(map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__12167 = null;
  var G__12167__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12167__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12167 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12167__1.call(this, x);
      case 2:
        return G__12167__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12167.cljs$core$IFn$_invoke$arity$1 = G__12167__1;
  G__12167.cljs$core$IFn$_invoke$arity$2 = G__12167__2;
  return G__12167;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__12168 = null;
  var G__12168__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12168__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12168 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12168__1.call(this, x);
      case 2:
        return G__12168__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12168.cljs$core$IFn$_invoke$arity$1 = G__12168__1;
  G__12168.cljs$core$IFn$_invoke$arity$2 = G__12168__2;
  return G__12168;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, null);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.ValSeq(self__.mseq, new_meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
goog.object.set(cljs.core.ValSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.vals = function cljs$core$vals(map) {
  var temp__4657__auto__ = cljs.core.seq(map);
  if (temp__4657__auto__) {
    var mseq = temp__4657__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12172 = arguments.length;
  var i__9175__auto___12173 = 0;
  while (true) {
    if (i__9175__auto___12173 < len__9174__auto___12172) {
      args__9184__auto__.push(arguments[i__9175__auto___12173]);
      var G__12174 = i__9175__auto___12173 + 1;
      i__9175__auto___12173 = G__12174;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__12169_SHARP_, p2__12170_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__7970__auto__ = p1__12169_SHARP_;
        if (cljs.core.truth_(or__7970__auto__)) {
          return or__7970__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__12170_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq12171) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12171));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12179 = arguments.length;
  var i__9175__auto___12180 = 0;
  while (true) {
    if (i__9175__auto___12180 < len__9174__auto___12179) {
      args__9184__auto__.push(arguments[i__9175__auto___12180]);
      var G__12181 = i__9175__auto___12180 + 1;
      i__9175__auto___12180 = G__12181;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 1 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9185__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.key(e);
      var v = cljs.core.val(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__12177 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__12178 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12177, G__12178) : f.call(null, G__12177, G__12178);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(m1, m2) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
        var or__7970__auto__ = m1;
        if (cljs.core.truth_(or__7970__auto__)) {
          return or__7970__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), cljs.core.seq(m2));
    };
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq12175) {
  var G__12176 = cljs.core.first(seq12175);
  var seq12175__$1 = cljs.core.next(seq12175);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12176, seq12175__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__12182 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__12183 = cljs.core.next(keys);
      ret = G__12182;
      keys = G__12183;
      continue;
    } else {
      return cljs.core._with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().key;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__12187 = cljs.core.seq(coll);
  var chunk__12188 = null;
  var count__12189 = 0;
  var i__12190 = 0;
  while (true) {
    if (i__12190 < count__12189) {
      var vec__12197 = chunk__12188.cljs$core$IIndexed$_nth$arity$2(null, i__12190);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12197, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12197, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__12206 = seq__12187;
      var G__12207 = chunk__12188;
      var G__12208 = count__12189;
      var G__12209 = i__12190 + 1;
      seq__12187 = G__12206;
      chunk__12188 = G__12207;
      count__12189 = G__12208;
      i__12190 = G__12209;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__12187);
      if (temp__4657__auto__) {
        var seq__12187__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12187__$1)) {
          var c__8838__auto__ = cljs.core.chunk_first(seq__12187__$1);
          var G__12210 = cljs.core.chunk_rest(seq__12187__$1);
          var G__12211 = c__8838__auto__;
          var G__12212 = cljs.core.count(c__8838__auto__);
          var G__12213 = 0;
          seq__12187 = G__12210;
          chunk__12188 = G__12211;
          count__12189 = G__12212;
          i__12190 = G__12213;
          continue;
        } else {
          var vec__12200 = cljs.core.first(seq__12187__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12200, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12200, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__12214 = cljs.core.next(seq__12187__$1);
          var G__12215 = null;
          var G__12216 = 0;
          var G__12217 = 0;
          seq__12187 = G__12214;
          chunk__12188 = G__12215;
          count__12189 = G__12216;
          i__12190 = G__12217;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4655__auto__ = cljs.core._find(self__.hash_map, v);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var entry = temp__4655__auto__;
    return cljs.core.key(entry);
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.set_QMARK_(other)) {
    if (cljs.core.count(coll__$1) === cljs.core.count(other)) {
      try {
        return cljs.core.reduce_kv(function(p1__12185_SHARP_, p2__12184_SHARP_) {
          var or__7970__auto__ = cljs.core.contains_QMARK_(other, p2__12184_SHARP_);
          if (or__7970__auto__) {
            return or__7970__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.hash_map);
      } catch (e12205) {
        if (e12205 instanceof Error) {
          var ex = e12205;
          return false;
        } else {
          throw e12205;
        }
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashSet(new_meta, self__.hash_map, self__.__hash);
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__12218 = null;
  var G__12218__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12218__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12218 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12218__2.call(this, self__, k);
      case 3:
        return G__12218__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12218.cljs$core$IFn$_invoke$arity$2 = G__12218__2;
  G__12218.cljs$core$IFn$_invoke$arity$3 = G__12218__3;
  return G__12218;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args12186) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12186)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__12219 = i + 1;
        var G__12220 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__12219;
        out = G__12220;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__12221 = i + 1;
        var G__12222 = cljs.core._conj_BANG_(out, items[i]);
        i = G__12221;
        out = G__12222;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__8943__auto___12223 = len;
  var i_12224 = 0;
  while (true) {
    if (i_12224 < n__8943__auto___12223) {
      cljs.core._conj_BANG_(t, items[i_12224]);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t), i_12224 + 1)) {
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_12224])].join(""));
      }
      var G__12225 = i_12224 + 1;
      i_12224 = G__12225;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__8943__auto___12226 = len;
  var i_12227 = 0;
  while (true) {
    if (i_12227 < n__8943__auto___12226) {
      cljs.core._conj_BANG_(t, items[i_12227]);
      var G__12228 = i_12227 + 1;
      i_12227 = G__12228;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
goog.object.set(cljs.core.PersistentHashSet.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__12230 = null;
  var G__12230__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__12230__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__12230 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12230__2.call(this, self__, k);
      case 3:
        return G__12230__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12230.cljs$core$IFn$_invoke$arity$2 = G__12230__2;
  G__12230.cljs$core$IFn$_invoke$arity$3 = G__12230__3;
  return G__12230;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args12229) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12229)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__12234 = cljs.core.seq(coll);
  var chunk__12235 = null;
  var count__12236 = 0;
  var i__12237 = 0;
  while (true) {
    if (i__12237 < count__12236) {
      var vec__12244 = chunk__12235.cljs$core$IIndexed$_nth$arity$2(null, i__12237);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12244, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12244, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__12253 = seq__12234;
      var G__12254 = chunk__12235;
      var G__12255 = count__12236;
      var G__12256 = i__12237 + 1;
      seq__12234 = G__12253;
      chunk__12235 = G__12254;
      count__12236 = G__12255;
      i__12237 = G__12256;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__12234);
      if (temp__4657__auto__) {
        var seq__12234__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12234__$1)) {
          var c__8838__auto__ = cljs.core.chunk_first(seq__12234__$1);
          var G__12257 = cljs.core.chunk_rest(seq__12234__$1);
          var G__12258 = c__8838__auto__;
          var G__12259 = cljs.core.count(c__8838__auto__);
          var G__12260 = 0;
          seq__12234 = G__12257;
          chunk__12235 = G__12258;
          count__12236 = G__12259;
          i__12237 = G__12260;
          continue;
        } else {
          var vec__12247 = cljs.core.first(seq__12234__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12247, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12247, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__12261 = cljs.core.next(seq__12234__$1);
          var G__12262 = null;
          var G__12263 = 0;
          var G__12264 = 0;
          seq__12234 = G__12261;
          chunk__12235 = G__12262;
          count__12236 = G__12263;
          i__12237 = G__12264;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.set_QMARK_(other)) {
    if (cljs.core.count(coll__$1) === cljs.core.count(other)) {
      try {
        return cljs.core.reduce_kv(function(p1__12232_SHARP_, p2__12231_SHARP_) {
          var or__7970__auto__ = cljs.core.contains_QMARK_(other, p2__12231_SHARP_);
          if (or__7970__auto__) {
            return or__7970__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.tree_map);
      } catch (e12252) {
        if (e12252 instanceof Error) {
          var ex = e12252;
          return false;
        } else {
          throw e12252;
        }
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeSet(new_meta, self__.tree_map, self__.__hash);
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__12265 = null;
  var G__12265__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__12265__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__12265 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12265__2.call(this, self__, k);
      case 3:
        return G__12265__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12265.cljs$core$IFn$_invoke$arity$2 = G__12265__2;
  G__12265.cljs$core$IFn$_invoke$arity$3 = G__12265__3;
  return G__12265;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args12233) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12233)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
goog.object.set(cljs.core.PersistentTreeSet.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__8936__auto__ = arr;
    var l__8937__auto__ = a__8936__auto__.length;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < l__8937__auto__) {
        var G__12266 = i + 1;
        var G__12267 = cljs.core._conj_BANG_(res, arr[i]);
        i = G__12266;
        res = G__12267;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  if (cljs.core.set_QMARK_(coll)) {
    return cljs.core.with_meta(coll, null);
  } else {
    var in$ = cljs.core.seq(coll);
    if (in$ == null) {
      return cljs.core.PersistentHashSet.EMPTY;
    } else {
      if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
        return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);
      } else {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__12268 = cljs.core.next(in$__$1);
            var G__12269 = cljs.core._conj_BANG_(out, cljs.core._first(in$__$1));
            in$__$1 = G__12268;
            out = G__12269;
            continue;
          } else {
            return cljs.core.persistent_BANG_(out);
          }
          break;
        }
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var G__12272 = arguments.length;
  switch(G__12272) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___12274 = arguments.length;
      var i__9175__auto___12275 = 0;
      while (true) {
        if (i__9175__auto___12275 < len__9174__auto___12274) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___12275]);
          var G__12276 = i__9175__auto___12275 + 1;
          i__9175__auto___12275 = G__12276;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__9200__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq12271) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12271));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12278 = arguments.length;
  var i__9175__auto___12279 = 0;
  while (true) {
    if (i__9175__auto___12279 < len__9174__auto___12278) {
      args__9184__auto__.push(arguments[i__9175__auto___12279]);
      var G__12280 = i__9175__auto___12279 + 1;
      i__9175__auto___12279 = G__12280;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq12277) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12277));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12283 = arguments.length;
  var i__9175__auto___12284 = 0;
  while (true) {
    if (i__9175__auto___12284 < len__9174__auto___12283) {
      args__9184__auto__.push(arguments[i__9175__auto___12284]);
      var G__12285 = i__9175__auto___12284 + 1;
      i__9175__auto___12284 = G__12285;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 1 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9185__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq12281) {
  var G__12282 = cljs.core.first(seq12281);
  var seq12281__$1 = cljs.core.next(seq12281);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12282, seq12281__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var G__12289 = arguments.length;
  switch(G__12289) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__12286_SHARP_) {
    var temp__4655__auto__ = cljs.core.find(smap, p1__12286_SHARP_);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var e = temp__4655__auto__;
      return cljs.core.val(e);
    } else {
      return p1__12286_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, i) {
      var temp__4655__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__12287_SHARP_) {
      var temp__4655__auto__ = cljs.core.find(smap, p1__12287_SHARP_);
      if (cljs.core.truth_(temp__4655__auto__)) {
        var e = temp__4655__auto__;
        return cljs.core.second(e);
      } else {
        return p1__12287_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var G__12292 = arguments.length;
  switch(G__12292) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function() {
      var G__12303 = null;
      var G__12303__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12303__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__12303__2 = function(result, input) {
        if (cljs.core.contains_QMARK_(cljs.core.deref(seen), input)) {
          return result;
        } else {
          seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__12303 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12303__0.call(this);
          case 1:
            return G__12303__1.call(this, result);
          case 2:
            return G__12303__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12303.cljs$core$IFn$_invoke$arity$0 = G__12303__0;
      G__12303.cljs$core$IFn$_invoke$arity$1 = G__12303__1;
      G__12303.cljs$core$IFn$_invoke$arity$2 = G__12303__2;
      return G__12303;
    }();
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      var fexpr__12297 = function(p__12298, seen__$1) {
        while (true) {
          var vec__12299 = p__12298;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12299, 0, null);
          var xs__$1 = vec__12299;
          var temp__4657__auto__ = cljs.core.seq(xs__$1);
          if (temp__4657__auto__) {
            var s = temp__4657__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__12304 = cljs.core.rest(s);
              var G__12305 = seen__$1;
              p__12298 = G__12304;
              seen__$1 = G__12305;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      };
      return fexpr__12297(xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__12306 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__12307 = cljs.core.next(s__$1);
      ret = G__12306;
      s__$1 = G__12307;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__12309 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__12310 = cljs.core.next(ks);
      var G__12311 = cljs.core.next(vs);
      map = G__12309;
      ks = G__12310;
      vs = G__12311;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var G__12319 = arguments.length;
  switch(G__12319) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___12321 = arguments.length;
      var i__9175__auto___12322 = 0;
      while (true) {
        if (i__9175__auto___12322 < len__9174__auto___12321) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___12322]);
          var G__12323 = i__9175__auto___12322 + 1;
          i__9175__auto___12322 = G__12323;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12312_SHARP_, p2__12313_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__12312_SHARP_, p2__12313_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq12315) {
  var G__12316 = cljs.core.first(seq12315);
  var seq12315__$1 = cljs.core.next(seq12315);
  var G__12317 = cljs.core.first(seq12315__$1);
  var seq12315__$2 = cljs.core.next(seq12315__$1);
  var G__12318 = cljs.core.first(seq12315__$2);
  var seq12315__$3 = cljs.core.next(seq12315__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12316, G__12317, G__12318, seq12315__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var G__12331 = arguments.length;
  switch(G__12331) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___12333 = arguments.length;
      var i__9175__auto___12334 = 0;
      while (true) {
        if (i__9175__auto___12334 < len__9174__auto___12333) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___12334]);
          var G__12335 = i__9175__auto___12334 + 1;
          i__9175__auto___12334 = G__12335;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12324_SHARP_, p2__12325_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__12324_SHARP_, p2__12325_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq12327) {
  var G__12328 = cljs.core.first(seq12327);
  var seq12327__$1 = cljs.core.next(seq12327);
  var G__12329 = cljs.core.first(seq12327__$1);
  var seq12327__$2 = cljs.core.next(seq12327__$1);
  var G__12330 = cljs.core.first(seq12327__$2);
  var seq12327__$3 = cljs.core.next(seq12327__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12328, G__12329, G__12330, seq12327__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var G__12337 = arguments.length;
  switch(G__12337) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function() {
      var G__12339 = null;
      var G__12339__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12339__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__12339__2 = function(result, input) {
        a.add(input);
        if (n === a.size()) {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        } else {
          return result;
        }
      };
      G__12339 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12339__0.call(this);
          case 1:
            return G__12339__1.call(this, result);
          case 2:
            return G__12339__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12339.cljs$core$IFn$_invoke$arity$0 = G__12339__0;
      G__12339.cljs$core$IFn$_invoke$arity$1 = G__12339__1;
      G__12339.cljs$core$IFn$_invoke$arity$2 = G__12339__2;
      return G__12339;
    }();
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var G__12341 = arguments.length;
  switch(G__12341) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__12344 = null;
      var G__12344__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12344__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__12344__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__12344 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12344__0.call(this);
          case 1:
            return G__12344__1.call(this, result);
          case 2:
            return G__12344__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12344.cljs$core$IFn$_invoke$arity$0 = G__12344__0;
      G__12344.cljs$core$IFn$_invoke$arity$1 = G__12344__1;
      G__12344.cljs$core$IFn$_invoke$arity$2 = G__12344__2;
      return G__12344;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      if (cljs.core.truth_(function() {
        var G__12342 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12342) : pred.call(null, G__12342);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__12345 = function() {
      var G__12347 = cljs.core._entry_key(sc, e);
      var G__12348 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__12347, G__12348) : comp.call(null, G__12347, G__12348);
    }();
    var G__12346 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__12345, G__12346) : test.call(null, G__12345, G__12346);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var G__12350 = arguments.length;
  switch(G__12350) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__12351 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return fexpr__12351.cljs$core$IFn$_invoke$arity$1 ? fexpr__12351.cljs$core$IFn$_invoke$arity$1(test) : fexpr__12351.call(null, test);
  }())) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__12352 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12352, 0, null);
      var s = vec__12352;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__12355 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12355, 0, null);
    var s = vec__12355;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(function() {
      var fexpr__12358 = cljs.core.mk_bound_fn(sc, start_test, start_key);
      return fexpr__12358.cljs$core$IFn$_invoke$arity$1 ? fexpr__12358.cljs$core$IFn$_invoke$arity$1(e) : fexpr__12358.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var G__12361 = arguments.length;
  switch(G__12361) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__12362 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return fexpr__12362.cljs$core$IFn$_invoke$arity$1 ? fexpr__12362.cljs$core$IFn$_invoke$arity$1(test) : fexpr__12362.call(null, test);
  }())) {
    var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4657__auto__)) {
      var vec__12363 = temp__4657__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12363, 0, null);
      var s = vec__12363;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4657__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4657__auto__)) {
    var vec__12366 = temp__4657__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12366, 0, null);
    var s = vec__12366;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(function() {
      var fexpr__12369 = cljs.core.mk_bound_fn(sc, end_test, end_key);
      return fexpr__12369.cljs$core$IFn$_invoke$arity$1 ? fexpr__12369.cljs$core$IFn$_invoke$arity$1(e) : fexpr__12369.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeChunk = function(start, step, count) {
  this.start = start;
  this.step = step;
  this.count = count;
  this.cljs$lang$protocol_mask$partition0$ = 82;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RangeChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.RangeChunk.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start + i * self__.step;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.count) {
    return self__.start + i * self__.step;
  } else {
    return not_found;
  }
};
cljs.core.RangeChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count <= 1) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.RangeChunk(self__.start + self__.step, self__.step, self__.count - 1);
  }
};
cljs.core.RangeChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "count", "count", -514511684, null)], null);
};
cljs.core.RangeChunk.cljs$lang$type = true;
cljs.core.RangeChunk.cljs$lang$ctorStr = "cljs.core/RangeChunk";
cljs.core.RangeChunk.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/RangeChunk");
};
cljs.core.__GT_RangeChunk = function cljs$core$__GT_RangeChunk(start, step, count) {
  return new cljs.core.RangeChunk(start, step, count);
};
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, chunk, chunk_next, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.chunk = chunk;
  this.chunk_next = chunk_next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__12372 = null;
  var G__12372__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12372__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__12372 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__12372__1.call(this, x);
      case 2:
        return G__12372__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12372.cljs$core$IFn$_invoke$arity$1 = G__12372__1;
  G__12372.cljs$core$IFn$_invoke$arity$2 = G__12372__2;
  return G__12372;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__12373 = null;
  var G__12373__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12373__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__12373 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__12373__1.call(this, x);
      case 2:
        return G__12373__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12373.cljs$core$IFn$_invoke$arity$1 = G__12373__1;
  G__12373.cljs$core$IFn$_invoke$arity$2 = G__12373__2;
  return G__12373;
}();
cljs.core.Range.prototype.forceChunk = function() {
  var self__ = this;
  var coll = this;
  if (self__.chunk == null) {
    var count = coll.cljs$core$ICounted$_count$arity$1(null);
    if (count > 32) {
      self__.chunk_next = new cljs.core.Range(null, self__.start + self__.step * 32, self__.end, self__.step, null, null, null);
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, 32);
    } else {
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, count);
    }
  } else {
    return null;
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var G__12371 = (self__.end - self__.start) / self__.step;
  return Math.ceil(G__12371);
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__8430__auto__ = self__.__hash;
  if (!(h__8430__auto__ == null)) {
    return h__8430__auto__;
  } else {
    var h__8430__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__8430__auto____$1;
    return h__8430__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__12374 = i + self__.step;
        var G__12375 = ret__$1;
        i = G__12374;
        ret = G__12375;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var s = rng__$1.cljs$core$INext$_next$arity$1(null);
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return rng__$1;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  return self__.chunk;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  if (self__.chunk_next == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.chunk_next;
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, new_meta) {
  var self__ = this;
  var rng__$1 = this;
  if (new_meta === self__.meta) {
    return rng__$1;
  } else {
    return new cljs.core.Range(new_meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk-next", "chunk-next", -547810434, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, chunk, chunk_next, __hash) {
  return new cljs.core.Range(meta, start, end, step, chunk, chunk_next, __hash);
};
goog.object.set(cljs.core.Range.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.range = function cljs$core$range(var_args) {
  var G__12377 = arguments.length;
  switch(G__12377) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  if (step > 0) {
    if (end <= start) {
      return cljs.core.List.EMPTY;
    } else {
      return new cljs.core.Range(null, start, end, step, null, null, null);
    }
  } else {
    if (step < 0) {
      if (end >= start) {
        return cljs.core.List.EMPTY;
      } else {
        return new cljs.core.Range(null, start, end, step, null, null, null);
      }
    } else {
      if (end === start) {
        return cljs.core.List.EMPTY;
      } else {
        return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start);
      }
    }
  }
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var G__12380 = arguments.length;
  switch(G__12380) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__12382 = null;
      var G__12382__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12382__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__12382__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        if (cljs.core.rem(i, n) === 0) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__12382 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12382__0.call(this);
          case 1:
            return G__12382__1.call(this, result);
          case 2:
            return G__12382__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12382.cljs$core$IFn$_invoke$arity$0 = G__12382__0;
      G__12382.cljs$core$IFn$_invoke$arity$1 = G__12382__1;
      G__12382.cljs$core$IFn$_invoke$arity$2 = G__12382__2;
      return G__12382;
    }();
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var G__12385 = arguments.length;
  switch(G__12385) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var G__12387 = null;
      var G__12387__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12387__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__12387__2 = function(result, input) {
        var pval = cljs.core.deref(pa);
        var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        cljs.core.vreset_BANG_(pa, val);
        if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
          a.add(input);
          return result;
        } else {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          if (cljs.core.reduced_QMARK_(ret)) {
          } else {
            a.add(input);
          }
          return ret;
        }
      };
      G__12387 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12387__0.call(this);
          case 1:
            return G__12387__1.call(this, result);
          case 2:
            return G__12387__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12387.cljs$core$IFn$_invoke$arity$0 = G__12387__0;
      G__12387.cljs$core$IFn$_invoke$arity$1 = G__12387__1;
      G__12387.cljs$core$IFn$_invoke$arity$2 = G__12387__2;
      return G__12387;
    }();
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(p1__12383_SHARP_) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__12383_SHARP_) : f.call(null, p1__12383_SHARP_));
      }, cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.LazySeq(null, function() {
        return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s);
      }, null, null)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var G__12389 = arguments.length;
  switch(G__12389) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4655__auto__ = cljs.core.seq(coll);
    if (temp__4655__auto__) {
      var s = temp__4655__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return new cljs.core.List(null, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), null, 1, null);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    return new cljs.core.List(null, cljs.core.deref(init), null, 1, null);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4657__auto__ = cljs.core.seq(coll);
      if (temp__4657__auto__) {
        var s = temp__4657__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__12390 = init;
          var G__12391 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12390, G__12391) : f.call(null, G__12390, G__12391);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var G__12408 = arguments.length;
  switch(G__12408) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___12410 = arguments.length;
      var i__9175__auto___12411 = 0;
      while (true) {
        if (i__9175__auto___12411 < len__9174__auto___12410) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___12411]);
          var G__12412 = i__9175__auto___12411 + 1;
          i__9175__auto___12411 = G__12412;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__9200__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__12413 = null;
    var G__12413__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__12413__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__12413__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__12413__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__12413__4 = function() {
      var G__12414__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__12414 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12415__i = 0, G__12415__a = new Array(arguments.length - 3);
          while (G__12415__i < G__12415__a.length) {
            G__12415__a[G__12415__i] = arguments[G__12415__i + 3];
            ++G__12415__i;
          }
          args = new cljs.core.IndexedSeq(G__12415__a, 0, null);
        }
        return G__12414__delegate.call(this, x, y, z, args);
      };
      G__12414.cljs$lang$maxFixedArity = 3;
      G__12414.cljs$lang$applyTo = function(arglist__12416) {
        var x = cljs.core.first(arglist__12416);
        arglist__12416 = cljs.core.next(arglist__12416);
        var y = cljs.core.first(arglist__12416);
        arglist__12416 = cljs.core.next(arglist__12416);
        var z = cljs.core.first(arglist__12416);
        var args = cljs.core.rest(arglist__12416);
        return G__12414__delegate(x, y, z, args);
      };
      G__12414.cljs$core$IFn$_invoke$arity$variadic = G__12414__delegate;
      return G__12414;
    }();
    G__12413 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12413__0.call(this);
        case 1:
          return G__12413__1.call(this, x);
        case 2:
          return G__12413__2.call(this, x, y);
        case 3:
          return G__12413__3.call(this, x, y, z);
        default:
          var G__12417 = null;
          if (arguments.length > 3) {
            var G__12418__i = 0, G__12418__a = new Array(arguments.length - 3);
            while (G__12418__i < G__12418__a.length) {
              G__12418__a[G__12418__i] = arguments[G__12418__i + 3];
              ++G__12418__i;
            }
            G__12417 = new cljs.core.IndexedSeq(G__12418__a, 0, null);
          }
          return G__12413__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12417);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12413.cljs$lang$maxFixedArity = 3;
    G__12413.cljs$lang$applyTo = G__12413__4.cljs$lang$applyTo;
    G__12413.cljs$core$IFn$_invoke$arity$0 = G__12413__0;
    G__12413.cljs$core$IFn$_invoke$arity$1 = G__12413__1;
    G__12413.cljs$core$IFn$_invoke$arity$2 = G__12413__2;
    G__12413.cljs$core$IFn$_invoke$arity$3 = G__12413__3;
    G__12413.cljs$core$IFn$_invoke$arity$variadic = G__12413__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12413;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__12419 = null;
    var G__12419__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__12419__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__12419__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__12419__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__12419__4 = function() {
      var G__12420__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__12420 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12421__i = 0, G__12421__a = new Array(arguments.length - 3);
          while (G__12421__i < G__12421__a.length) {
            G__12421__a[G__12421__i] = arguments[G__12421__i + 3];
            ++G__12421__i;
          }
          args = new cljs.core.IndexedSeq(G__12421__a, 0, null);
        }
        return G__12420__delegate.call(this, x, y, z, args);
      };
      G__12420.cljs$lang$maxFixedArity = 3;
      G__12420.cljs$lang$applyTo = function(arglist__12422) {
        var x = cljs.core.first(arglist__12422);
        arglist__12422 = cljs.core.next(arglist__12422);
        var y = cljs.core.first(arglist__12422);
        arglist__12422 = cljs.core.next(arglist__12422);
        var z = cljs.core.first(arglist__12422);
        var args = cljs.core.rest(arglist__12422);
        return G__12420__delegate(x, y, z, args);
      };
      G__12420.cljs$core$IFn$_invoke$arity$variadic = G__12420__delegate;
      return G__12420;
    }();
    G__12419 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12419__0.call(this);
        case 1:
          return G__12419__1.call(this, x);
        case 2:
          return G__12419__2.call(this, x, y);
        case 3:
          return G__12419__3.call(this, x, y, z);
        default:
          var G__12423 = null;
          if (arguments.length > 3) {
            var G__12424__i = 0, G__12424__a = new Array(arguments.length - 3);
            while (G__12424__i < G__12424__a.length) {
              G__12424__a[G__12424__i] = arguments[G__12424__i + 3];
              ++G__12424__i;
            }
            G__12423 = new cljs.core.IndexedSeq(G__12424__a, 0, null);
          }
          return G__12419__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12423);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12419.cljs$lang$maxFixedArity = 3;
    G__12419.cljs$lang$applyTo = G__12419__4.cljs$lang$applyTo;
    G__12419.cljs$core$IFn$_invoke$arity$0 = G__12419__0;
    G__12419.cljs$core$IFn$_invoke$arity$1 = G__12419__1;
    G__12419.cljs$core$IFn$_invoke$arity$2 = G__12419__2;
    G__12419.cljs$core$IFn$_invoke$arity$3 = G__12419__3;
    G__12419.cljs$core$IFn$_invoke$arity$variadic = G__12419__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12419;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__12425 = null;
    var G__12425__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__12425__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__12425__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__12425__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__12425__4 = function() {
      var G__12426__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__12426 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12427__i = 0, G__12427__a = new Array(arguments.length - 3);
          while (G__12427__i < G__12427__a.length) {
            G__12427__a[G__12427__i] = arguments[G__12427__i + 3];
            ++G__12427__i;
          }
          args = new cljs.core.IndexedSeq(G__12427__a, 0, null);
        }
        return G__12426__delegate.call(this, x, y, z, args);
      };
      G__12426.cljs$lang$maxFixedArity = 3;
      G__12426.cljs$lang$applyTo = function(arglist__12428) {
        var x = cljs.core.first(arglist__12428);
        arglist__12428 = cljs.core.next(arglist__12428);
        var y = cljs.core.first(arglist__12428);
        arglist__12428 = cljs.core.next(arglist__12428);
        var z = cljs.core.first(arglist__12428);
        var args = cljs.core.rest(arglist__12428);
        return G__12426__delegate(x, y, z, args);
      };
      G__12426.cljs$core$IFn$_invoke$arity$variadic = G__12426__delegate;
      return G__12426;
    }();
    G__12425 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12425__0.call(this);
        case 1:
          return G__12425__1.call(this, x);
        case 2:
          return G__12425__2.call(this, x, y);
        case 3:
          return G__12425__3.call(this, x, y, z);
        default:
          var G__12429 = null;
          if (arguments.length > 3) {
            var G__12430__i = 0, G__12430__a = new Array(arguments.length - 3);
            while (G__12430__i < G__12430__a.length) {
              G__12430__a[G__12430__i] = arguments[G__12430__i + 3];
              ++G__12430__i;
            }
            G__12429 = new cljs.core.IndexedSeq(G__12430__a, 0, null);
          }
          return G__12425__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12429);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12425.cljs$lang$maxFixedArity = 3;
    G__12425.cljs$lang$applyTo = G__12425__4.cljs$lang$applyTo;
    G__12425.cljs$core$IFn$_invoke$arity$0 = G__12425__0;
    G__12425.cljs$core$IFn$_invoke$arity$1 = G__12425__1;
    G__12425.cljs$core$IFn$_invoke$arity$2 = G__12425__2;
    G__12425.cljs$core$IFn$_invoke$arity$3 = G__12425__3;
    G__12425.cljs$core$IFn$_invoke$arity$variadic = G__12425__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12425;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function() {
    var G__12431 = null;
    var G__12431__0 = function() {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12393_SHARP_, p2__12394_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12393_SHARP_, p2__12394_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__12394_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__12394_SHARP_.call(null));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__12431__1 = function(x) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12395_SHARP_, p2__12396_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12395_SHARP_, p2__12396_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__12396_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__12396_SHARP_.call(null, x));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__12431__2 = function(x, y) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12397_SHARP_, p2__12398_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12397_SHARP_, p2__12398_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__12398_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__12398_SHARP_.call(null, x, y));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__12431__3 = function(x, y, z) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12399_SHARP_, p2__12400_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12399_SHARP_, p2__12400_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__12400_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__12400_SHARP_.call(null, x, y, z));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__12431__4 = function() {
      var G__12432__delegate = function(x, y, z, args) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12401_SHARP_, p2__12402_SHARP_) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__12401_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__12402_SHARP_, x, y, z, args));
        }, cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__12432 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__12433__i = 0, G__12433__a = new Array(arguments.length - 3);
          while (G__12433__i < G__12433__a.length) {
            G__12433__a[G__12433__i] = arguments[G__12433__i + 3];
            ++G__12433__i;
          }
          args = new cljs.core.IndexedSeq(G__12433__a, 0, null);
        }
        return G__12432__delegate.call(this, x, y, z, args);
      };
      G__12432.cljs$lang$maxFixedArity = 3;
      G__12432.cljs$lang$applyTo = function(arglist__12434) {
        var x = cljs.core.first(arglist__12434);
        arglist__12434 = cljs.core.next(arglist__12434);
        var y = cljs.core.first(arglist__12434);
        arglist__12434 = cljs.core.next(arglist__12434);
        var z = cljs.core.first(arglist__12434);
        var args = cljs.core.rest(arglist__12434);
        return G__12432__delegate(x, y, z, args);
      };
      G__12432.cljs$core$IFn$_invoke$arity$variadic = G__12432__delegate;
      return G__12432;
    }();
    G__12431 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__12431__0.call(this);
        case 1:
          return G__12431__1.call(this, x);
        case 2:
          return G__12431__2.call(this, x, y);
        case 3:
          return G__12431__3.call(this, x, y, z);
        default:
          var G__12435 = null;
          if (arguments.length > 3) {
            var G__12436__i = 0, G__12436__a = new Array(arguments.length - 3);
            while (G__12436__i < G__12436__a.length) {
              G__12436__a[G__12436__i] = arguments[G__12436__i + 3];
              ++G__12436__i;
            }
            G__12435 = new cljs.core.IndexedSeq(G__12436__a, 0, null);
          }
          return G__12431__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12435);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12431.cljs$lang$maxFixedArity = 3;
    G__12431.cljs$lang$applyTo = G__12431__4.cljs$lang$applyTo;
    G__12431.cljs$core$IFn$_invoke$arity$0 = G__12431__0;
    G__12431.cljs$core$IFn$_invoke$arity$1 = G__12431__1;
    G__12431.cljs$core$IFn$_invoke$arity$2 = G__12431__2;
    G__12431.cljs$core$IFn$_invoke$arity$3 = G__12431__3;
    G__12431.cljs$core$IFn$_invoke$arity$variadic = G__12431__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__12431;
  }();
};
cljs.core.juxt.cljs$lang$applyTo = function(seq12404) {
  var G__12405 = cljs.core.first(seq12404);
  var seq12404__$1 = cljs.core.next(seq12404);
  var G__12406 = cljs.core.first(seq12404__$1);
  var seq12404__$2 = cljs.core.next(seq12404__$1);
  var G__12407 = cljs.core.first(seq12404__$2);
  var seq12404__$3 = cljs.core.next(seq12404__$2);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12405, G__12406, G__12407, seq12404__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var G__12438 = arguments.length;
  switch(G__12438) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    var temp__4657__auto__ = cljs.core.seq(coll);
    if (temp__4657__auto__) {
      var s = temp__4657__auto__;
      var G__12440 = cljs.core.next(s);
      coll = G__12440;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__12441 = n - 1;
      var G__12442 = cljs.core.next(coll);
      n = G__12441;
      coll = G__12442;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var G__12444 = arguments.length;
  switch(G__12444) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq_STAR_ = function cljs$core$re_seq_STAR_(re, s) {
  var temp__4661__auto__ = re.exec(s);
  if (temp__4661__auto__ == null) {
    return null;
  } else {
    var matches = temp__4661__auto__;
    var match_str = matches[0];
    var match_vals = matches.length === 1 ? match_str : cljs.core.vec(matches);
    return cljs.core.cons(match_vals, new cljs.core.LazySeq(null, function() {
      var post_idx = matches.index + function() {
        var x__8326__auto__ = 1;
        var y__8327__auto__ = match_str.length;
        return x__8326__auto__ > y__8327__auto__ ? x__8326__auto__ : y__8327__auto__;
      }();
      if (post_idx <= s.length) {
        var G__12446 = re;
        var G__12447 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, post_idx);
        return cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__12446, G__12447) : cljs.core.re_seq_STAR_.call(null, G__12446, G__12447);
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  if (typeof s === "string") {
    return cljs.core.re_seq_STAR_(re, s);
  } else {
    throw new TypeError("re-seq must match against a string.");
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__12448 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12448, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12448, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__7970__auto__ = flags;
      if (cljs.core.truth_(or__7970__auto__)) {
        return or__7970__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR__orig_val__12451 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_level_STAR__temp_val__12452 = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__12452;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__7970__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__7970__auto__)) {
              return or__7970__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__12453_12459 = cljs.core.first(coll);
          var G__12454_12460 = writer;
          var G__12455_12461 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12453_12459, G__12454_12460, G__12455_12461) : print_one.call(null, G__12453_12459, G__12454_12460, G__12455_12461);
        } else {
        }
        var coll_12462__$1 = cljs.core.next(coll);
        var n_12463 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_12462__$1 && (n_12463 == null || !(n_12463 === 0))) {
            cljs.core._write(writer, sep);
            var G__12456_12464 = cljs.core.first(coll_12462__$1);
            var G__12457_12465 = writer;
            var G__12458_12466 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12456_12464, G__12457_12465, G__12458_12466) : print_one.call(null, G__12456_12464, G__12457_12465, G__12458_12466);
            var G__12467 = cljs.core.next(coll_12462__$1);
            var G__12468 = n_12463 - 1;
            coll_12462__$1 = G__12467;
            n_12463 = G__12468;
            continue;
          } else {
            if (cljs.core.seq(coll_12462__$1) && n_12463 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__7970__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__7970__auto__)) {
                  return or__7970__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__12451;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12475 = arguments.length;
  var i__9175__auto___12476 = 0;
  while (true) {
    if (i__9175__auto___12476 < len__9174__auto___12475) {
      args__9184__auto__.push(arguments[i__9175__auto___12476]);
      var G__12477 = i__9175__auto___12476 + 1;
      i__9175__auto___12476 = G__12477;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 1 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9185__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__12471 = cljs.core.seq(ss);
  var chunk__12472 = null;
  var count__12473 = 0;
  var i__12474 = 0;
  while (true) {
    if (i__12474 < count__12473) {
      var s = chunk__12472.cljs$core$IIndexed$_nth$arity$2(null, i__12474);
      cljs.core._write(writer, s);
      var G__12478 = seq__12471;
      var G__12479 = chunk__12472;
      var G__12480 = count__12473;
      var G__12481 = i__12474 + 1;
      seq__12471 = G__12478;
      chunk__12472 = G__12479;
      count__12473 = G__12480;
      i__12474 = G__12481;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__12471);
      if (temp__4657__auto__) {
        var seq__12471__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12471__$1)) {
          var c__8838__auto__ = cljs.core.chunk_first(seq__12471__$1);
          var G__12482 = cljs.core.chunk_rest(seq__12471__$1);
          var G__12483 = c__8838__auto__;
          var G__12484 = cljs.core.count(c__8838__auto__);
          var G__12485 = 0;
          seq__12471 = G__12482;
          chunk__12472 = G__12483;
          count__12473 = G__12484;
          i__12474 = G__12485;
          continue;
        } else {
          var s = cljs.core.first(seq__12471__$1);
          cljs.core._write(writer, s);
          var G__12486 = cljs.core.next(seq__12471__$1);
          var G__12487 = null;
          var G__12488 = 0;
          var G__12489 = 0;
          seq__12471 = G__12486;
          chunk__12472 = G__12487;
          count__12473 = G__12488;
          i__12474 = G__12489;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq12469) {
  var G__12470 = cljs.core.first(seq12469);
  var seq12469__$1 = cljs.core.next(seq12469);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12470, seq12469__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  if (cljs.core._STAR_print_fn_STAR_ == null) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  } else {
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj12491 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj12491;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), '"'].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  if (cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)))) {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      cljs.core.pr_writer(cljs.core.meta(obj), writer, opts);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj)) {
        return cljs.core._pr_writer(obj, writer, opts);
      } else {
        if (obj === true || obj === false) {
          return cljs.core._write(writer, cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
        } else {
          if (typeof obj === "number") {
            return cljs.core._write(writer, isNaN(obj) ? "##NaN" : obj === Number.POSITIVE_INFINITY ? "##Inf" : obj === Number.NEGATIVE_INFINITY ? "##-Inf" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
          } else {
            if (cljs.core.object_QMARK_(obj)) {
              cljs.core._write(writer, "#js ");
              return cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                return new cljs.core.MapEntry(function() {
                  var G__12497 = k;
                  if (!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, k) == null)) {
                    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__12497);
                  } else {
                    return G__12497;
                  }
                }(), obj[k], null);
              }, cljs.core.js_keys(obj)), cljs.core.pr_writer, writer, opts);
            } else {
              if (cljs.core.array_QMARK_(obj)) {
                return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
              } else {
                if (goog.isString(obj)) {
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                    return cljs.core._write(writer, cljs.core.quote_string(obj));
                  } else {
                    return cljs.core._write(writer, obj);
                  }
                } else {
                  if (goog.isFunction(obj)) {
                    var name = obj.name;
                    var name__$1 = name == null || goog.string.isEmpty(name) ? "Function" : name;
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, cljs.core.truth_(cljs.core._STAR_print_fn_bodies_STAR_) ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), '"'].join("") : "", "]"], 0));
                  } else {
                    if (obj instanceof Date) {
                      var normalize = function(n, len) {
                        var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                        while (true) {
                          if (ns.length < len) {
                            var G__12500 = ["0", ns].join("");
                            ns = G__12500;
                            continue;
                          } else {
                            return ns;
                          }
                          break;
                        }
                      };
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                    } else {
                      if (cljs.core.regexp_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', obj.source, '"'], 0));
                      } else {
                        if (cljs.core.truth_(function() {
                          var G__12498 = obj;
                          var G__12498__$1 = G__12498 == null ? null : G__12498.constructor;
                          if (G__12498__$1 == null) {
                            return null;
                          } else {
                            return G__12498__$1.cljs$lang$ctorStr;
                          }
                        }())) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = function() {
                            var G__12499 = obj;
                            var G__12499__$1 = G__12499 == null ? null : G__12499.constructor;
                            if (G__12499__$1 == null) {
                              return null;
                            } else {
                              return G__12499__$1.name;
                            }
                          }();
                          var name__$1 = name == null || goog.string.isEmpty(name) ? "Object" : name;
                          if (obj.constructor == null) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, "]"], 0));
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "]"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4655__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4655__auto__)) {
    var alt_impl = temp__4655__auto__;
    var G__12501 = obj;
    var G__12502 = writer;
    var G__12503 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__12501, G__12502, G__12503) : alt_impl.call(null, G__12501, G__12502, G__12503);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__12504 = cljs.core.seq(cljs.core.next(objs));
  var chunk__12505 = null;
  var count__12506 = 0;
  var i__12507 = 0;
  while (true) {
    if (i__12507 < count__12506) {
      var obj = chunk__12505.cljs$core$IIndexed$_nth$arity$2(null, i__12507);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__12508 = seq__12504;
      var G__12509 = chunk__12505;
      var G__12510 = count__12506;
      var G__12511 = i__12507 + 1;
      seq__12504 = G__12508;
      chunk__12505 = G__12509;
      count__12506 = G__12510;
      i__12507 = G__12511;
      continue;
    } else {
      var temp__4657__auto__ = cljs.core.seq(seq__12504);
      if (temp__4657__auto__) {
        var seq__12504__$1 = temp__4657__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12504__$1)) {
          var c__8838__auto__ = cljs.core.chunk_first(seq__12504__$1);
          var G__12512 = cljs.core.chunk_rest(seq__12504__$1);
          var G__12513 = c__8838__auto__;
          var G__12514 = cljs.core.count(c__8838__auto__);
          var G__12515 = 0;
          seq__12504 = G__12512;
          chunk__12505 = G__12513;
          count__12506 = G__12514;
          i__12507 = G__12515;
          continue;
        } else {
          var obj = cljs.core.first(seq__12504__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__12516 = cljs.core.next(seq__12504__$1);
          var G__12517 = null;
          var G__12518 = 0;
          var G__12519 = 0;
          seq__12504 = G__12516;
          chunk__12505 = G__12517;
          count__12506 = G__12518;
          i__12507 = G__12519;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs, opts));
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var G__12521 = arguments.length;
  switch(G__12521) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12524 = arguments.length;
  var i__9175__auto___12525 = 0;
  while (true) {
    if (i__9175__auto___12525 < len__9174__auto___12524) {
      args__9184__auto__.push(arguments[i__9175__auto___12525]);
      var G__12526 = i__9175__auto___12525 + 1;
      i__9175__auto___12525 = G__12526;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq12523) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12523));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12528 = arguments.length;
  var i__9175__auto___12529 = 0;
  while (true) {
    if (i__9175__auto___12529 < len__9174__auto___12528) {
      args__9184__auto__.push(arguments[i__9175__auto___12529]);
      var G__12530 = i__9175__auto___12529 + 1;
      i__9175__auto___12529 = G__12530;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq12527) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12527));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12532 = arguments.length;
  var i__9175__auto___12533 = 0;
  while (true) {
    if (i__9175__auto___12533 < len__9174__auto___12532) {
      args__9184__auto__.push(arguments[i__9175__auto___12533]);
      var G__12534 = i__9175__auto___12533 + 1;
      i__9175__auto___12533 = G__12534;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq12531) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12531));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__12535__i = 0, G__12535__a = new Array(arguments.length - 0);
      while (G__12535__i < G__12535__a.length) {
        G__12535__a[G__12535__i] = arguments[G__12535__i + 0];
        ++G__12535__i;
      }
      objs = new cljs.core.IndexedSeq(G__12535__a, 0, null);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__12536) {
    var objs = cljs.core.seq(arglist__12536);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12538 = arguments.length;
  var i__9175__auto___12539 = 0;
  while (true) {
    if (i__9175__auto___12539 < len__9174__auto___12538) {
      args__9184__auto__.push(arguments[i__9175__auto___12539]);
      var G__12540 = i__9175__auto___12539 + 1;
      i__9175__auto___12539 = G__12540;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq12537) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12537));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12542 = arguments.length;
  var i__9175__auto___12543 = 0;
  while (true) {
    if (i__9175__auto___12543 < len__9174__auto___12542) {
      args__9184__auto__.push(arguments[i__9175__auto___12543]);
      var G__12544 = i__9175__auto___12543 + 1;
      i__9175__auto___12543 = G__12544;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq12541) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12541));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12546 = arguments.length;
  var i__9175__auto___12547 = 0;
  while (true) {
    if (i__9175__auto___12547 < len__9174__auto___12546) {
      args__9184__auto__.push(arguments[i__9175__auto___12547]);
      var G__12548 = i__9175__auto___12547 + 1;
      i__9175__auto___12547 = G__12548;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq12545) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12545));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12550 = arguments.length;
  var i__9175__auto___12551 = 0;
  while (true) {
    if (i__9175__auto___12551 < len__9174__auto___12550) {
      args__9184__auto__.push(arguments[i__9175__auto___12551]);
      var G__12552 = i__9175__auto___12551 + 1;
      i__9175__auto___12551 = G__12552;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq12549) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12549));
};
cljs.core.strip_ns = function cljs$core$strip_ns(named) {
  if (named instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  } else {
    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  }
};
cljs.core.lift_ns = function cljs$core$lift_ns(m) {
  if (cljs.core.truth_(cljs.core._STAR_print_namespace_maps_STAR_)) {
    var ns = null;
    var G__12559 = cljs.core.seq(m);
    var vec__12560 = G__12559;
    var seq__12561 = cljs.core.seq(vec__12560);
    var first__12562 = cljs.core.first(seq__12561);
    var seq__12561__$1 = cljs.core.next(seq__12561);
    var vec__12563 = first__12562;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12563, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12563, 1, null);
    var entry = vec__12563;
    var entries = seq__12561__$1;
    var lm = cljs.core.empty(m);
    var ns__$1 = ns;
    var G__12559__$1 = G__12559;
    var lm__$1 = lm;
    while (true) {
      var ns__$2 = ns__$1;
      var vec__12572 = G__12559__$1;
      var seq__12573 = cljs.core.seq(vec__12572);
      var first__12574 = cljs.core.first(seq__12573);
      var seq__12573__$1 = cljs.core.next(seq__12573);
      var vec__12575 = first__12574;
      var k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12575, 0, null);
      var v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12575, 1, null);
      var entry__$1 = vec__12575;
      var entries__$1 = seq__12573__$1;
      var lm__$2 = lm__$1;
      if (cljs.core.truth_(entry__$1)) {
        if (k__$1 instanceof cljs.core.Keyword || k__$1 instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(ns__$2)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2, cljs.core.namespace(k__$1))) {
              var G__12578 = ns__$2;
              var G__12579 = entries__$1;
              var G__12580 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__12578;
              G__12559__$1 = G__12579;
              lm__$1 = G__12580;
              continue;
            } else {
              return null;
            }
          } else {
            var temp__4657__auto__ = cljs.core.namespace(k__$1);
            if (cljs.core.truth_(temp__4657__auto__)) {
              var new_ns = temp__4657__auto__;
              var G__12581 = new_ns;
              var G__12582 = entries__$1;
              var G__12583 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__12581;
              G__12559__$1 = G__12582;
              lm__$1 = G__12583;
              continue;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2, lm__$2], null);
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function cljs$core$print_prefix_map(prefix, m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__12584_12590 = cljs.core.key(e);
    var G__12585_12591 = w;
    var G__12586_12592 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12584_12590, G__12585_12591, G__12586_12592) : print_one.call(null, G__12584_12590, G__12585_12591, G__12586_12592);
    cljs.core._write(w, " ");
    var G__12587 = cljs.core.val(e);
    var G__12588 = w;
    var G__12589 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__12587, G__12588, G__12589) : print_one.call(null, G__12587, G__12588, G__12589);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), "{"].join(""), ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  var vec__12593 = cljs.core.map_QMARK_(m) ? cljs.core.lift_ns(m) : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12593, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12593, 1, null);
  if (cljs.core.truth_(ns)) {
    return cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), lift_map, print_one, writer, opts);
  } else {
    return cljs.core.print_prefix_map(null, m, print_one, writer, opts);
  }
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12599 = arguments.length;
  var i__9175__auto___12600 = 0;
  while (true) {
    if (i__9175__auto___12600 < len__9174__auto___12599) {
      args__9184__auto__.push(arguments[i__9175__auto___12600]);
      var G__12601 = i__9175__auto___12600 + 1;
      i__9175__auto___12600 = G__12601;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 2 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__9185__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq12596) {
  var G__12597 = cljs.core.first(seq12596);
  var seq12596__$1 = cljs.core.next(seq12596);
  var G__12598 = cljs.core.first(seq12596__$1);
  var seq12596__$2 = cljs.core.next(seq12596__$1);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12597, G__12598, seq12596__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var G__12603 = arguments.length;
  switch(G__12603) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Delay ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), self__.f == null ? new cljs.core.Keyword(null, "ready", "ready", 1086465795) : new cljs.core.Keyword(null, "pending", "pending", -220036727), new cljs.core.Keyword(null, "val", "val", 128701612), self__.value], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__12605_SHARP_, p2__12606_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__12605_SHARP_, p2__12606_SHARP_) : rf.call(null, p1__12605_SHARP_, p2__12606_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function() {
    var G__12607 = null;
    var G__12607__0 = function() {
      return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
    };
    var G__12607__1 = function(result) {
      return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
    };
    var G__12607__2 = function(result, input) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
    };
    G__12607 = function(result, input) {
      switch(arguments.length) {
        case 0:
          return G__12607__0.call(this);
        case 1:
          return G__12607__1.call(this, result);
        case 2:
          return G__12607__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12607.cljs$core$IFn$_invoke$arity$0 = G__12607__0;
    G__12607.cljs$core$IFn$_invoke$arity$1 = G__12607__1;
    G__12607.cljs$core$IFn$_invoke$arity$2 = G__12607__2;
    return G__12607;
  }();
};
cljs.core.halt_when = function cljs$core$halt_when(var_args) {
  var G__12609 = arguments.length;
  switch(G__12609) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(pred, retf) {
  return function(rf) {
    return function() {
      var G__12613 = null;
      var G__12613__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12613__1 = function(result) {
        if (cljs.core.map_QMARK_(result) && cljs.core.contains_QMARK_(result, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715))) {
          return (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(result);
        } else {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        }
      };
      var G__12613__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(retf) ? function() {
            var G__12610 = rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
            var G__12611 = input;
            return retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__12610, G__12611) : retf.call(null, G__12610, G__12611);
          }() : input], null));
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__12613 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12613__0.call(this);
          case 1:
            return G__12613__1.call(this, result);
          case 2:
            return G__12613__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12613.cljs$core$IFn$_invoke$arity$0 = G__12613__0;
      G__12613.cljs$core$IFn$_invoke$arity$1 = G__12613__1;
      G__12613.cljs$core$IFn$_invoke$arity$2 = G__12613__2;
      return G__12613;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var G__12615 = arguments.length;
  switch(G__12615) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var G__12617 = null;
      var G__12617__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__12617__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__12617__2 = function(result, input) {
        var prior = cljs.core.deref(pa);
        cljs.core.vreset_BANG_(pa, input);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__12617 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__12617__0.call(this);
          case 1:
            return G__12617__1.call(this, result);
          case 2:
            return G__12617__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12617.cljs$core$IFn$_invoke$arity$0 = G__12617__0;
      G__12617.cljs$core$IFn$_invoke$arity$1 = G__12617__1;
      G__12617.cljs$core$IFn$_invoke$arity$2 = G__12617__2;
      return G__12617;
    }();
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var G__12619 = arguments.length;
  switch(G__12619) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__12621 = null;
  var G__12621__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__12621__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__12621 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12621__1.call(this, x);
      case 2:
        return G__12621__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12621.cljs$core$IFn$_invoke$arity$1 = G__12621__1;
  G__12621.cljs$core$IFn$_invoke$arity$2 = G__12621__2;
  return G__12621;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__12622 = null;
  var G__12622__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__12622__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__12622 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12622__1.call(this, x);
      case 2:
        return G__12622__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12622.cljs$core$IFn$_invoke$arity$1 = G__12622__1;
  G__12622.cljs$core$IFn$_invoke$arity$2 = G__12622__2;
  return G__12622;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.TransformerIterator.create(self__.xform, cljs.core.iter(self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
goog.object.set(cljs.core.Eduction.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__9045__auto__ = this;
  return cljs.core.es6_iterator(this__9045__auto__);
});
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12624 = arguments.length;
  var i__9175__auto___12625 = 0;
  while (true) {
    if (i__9175__auto___12625 < len__9174__auto___12624) {
      args__9184__auto__.push(arguments[i__9175__auto___12625]);
      var G__12626 = i__9175__auto___12625 + 1;
      i__9175__auto___12625 = G__12626;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 0 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__9185__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq12623) {
  var self__9162__auto__ = this;
  return self__9162__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12623));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12628_SHARP_, p2__12627_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__12627_SHARP_) : proc.call(null, p2__12627_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__8668__auto__ = x == null ? null : x;
    var m__8669__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8669__auto__.call(null, x);
    } else {
      var m__8666__auto__ = cljs.core._clj__GT_js["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8666__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__8668__auto__ = x == null ? null : x;
    var m__8669__auto__ = cljs.core._key__GT_js[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8669__auto__.call(null, x);
    } else {
      var m__8666__auto__ = cljs.core._key__GT_js["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__8666__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(var_args) {
  var G__12630 = arguments.length;
  switch(G__12630) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(k, primitive_fn) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));
    }
  }
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12684 = arguments.length;
  var i__9175__auto___12685 = 0;
  while (true) {
    if (i__9175__auto___12685 < len__9174__auto___12684) {
      args__9184__auto__.push(arguments[i__9175__auto___12685]);
      var G__12686 = i__9175__auto___12685 + 1;
      i__9175__auto___12685 = G__12686;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 1 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9185__auto__);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(x, p__12635) {
  var map__12636 = p__12635;
  var map__12636__$1 = (!(map__12636 == null) ? map__12636.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__12636.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12636) : map__12636;
  var options = map__12636__$1;
  var keyword_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__12636__$1, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name);
  var keyfn = function cljs$core$keyfn(k) {
    return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, thisfn);
  };
  var thisfn = function cljs$core$thisfn(x__$1) {
    if (x__$1 == null) {
      return null;
    } else {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeJS$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1)) {
        return cljs.core._clj__GT_js(x__$1);
      } else {
        if (x__$1 instanceof cljs.core.Keyword) {
          return keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null, x__$1);
        } else {
          if (x__$1 instanceof cljs.core.Symbol) {
            return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
          } else {
            if (cljs.core.map_QMARK_(x__$1)) {
              var m = {};
              var seq__12664_12687 = cljs.core.seq(x__$1);
              var chunk__12665_12688 = null;
              var count__12666_12689 = 0;
              var i__12667_12690 = 0;
              while (true) {
                if (i__12667_12690 < count__12666_12689) {
                  var vec__12674_12691 = chunk__12665_12688.cljs$core$IIndexed$_nth$arity$2(null, i__12667_12690);
                  var k_12692 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12674_12691, 0, null);
                  var v_12693 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12674_12691, 1, null);
                  goog.object.set(m, keyfn(k_12692), cljs$core$thisfn(v_12693));
                  var G__12694 = seq__12664_12687;
                  var G__12695 = chunk__12665_12688;
                  var G__12696 = count__12666_12689;
                  var G__12697 = i__12667_12690 + 1;
                  seq__12664_12687 = G__12694;
                  chunk__12665_12688 = G__12695;
                  count__12666_12689 = G__12696;
                  i__12667_12690 = G__12697;
                  continue;
                } else {
                  var temp__4657__auto___12698 = cljs.core.seq(seq__12664_12687);
                  if (temp__4657__auto___12698) {
                    var seq__12664_12699__$1 = temp__4657__auto___12698;
                    if (cljs.core.chunked_seq_QMARK_(seq__12664_12699__$1)) {
                      var c__8838__auto___12700 = cljs.core.chunk_first(seq__12664_12699__$1);
                      var G__12701 = cljs.core.chunk_rest(seq__12664_12699__$1);
                      var G__12702 = c__8838__auto___12700;
                      var G__12703 = cljs.core.count(c__8838__auto___12700);
                      var G__12704 = 0;
                      seq__12664_12687 = G__12701;
                      chunk__12665_12688 = G__12702;
                      count__12666_12689 = G__12703;
                      i__12667_12690 = G__12704;
                      continue;
                    } else {
                      var vec__12677_12705 = cljs.core.first(seq__12664_12699__$1);
                      var k_12706 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12677_12705, 0, null);
                      var v_12707 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12677_12705, 1, null);
                      goog.object.set(m, keyfn(k_12706), cljs$core$thisfn(v_12707));
                      var G__12708 = cljs.core.next(seq__12664_12699__$1);
                      var G__12709 = null;
                      var G__12710 = 0;
                      var G__12711 = 0;
                      seq__12664_12687 = G__12708;
                      chunk__12665_12688 = G__12709;
                      count__12666_12689 = G__12710;
                      i__12667_12690 = G__12711;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return m;
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                var arr = [];
                var seq__12680_12712 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
                var chunk__12681_12713 = null;
                var count__12682_12714 = 0;
                var i__12683_12715 = 0;
                while (true) {
                  if (i__12683_12715 < count__12682_12714) {
                    var x_12716__$2 = chunk__12681_12713.cljs$core$IIndexed$_nth$arity$2(null, i__12683_12715);
                    arr.push(x_12716__$2);
                    var G__12717 = seq__12680_12712;
                    var G__12718 = chunk__12681_12713;
                    var G__12719 = count__12682_12714;
                    var G__12720 = i__12683_12715 + 1;
                    seq__12680_12712 = G__12717;
                    chunk__12681_12713 = G__12718;
                    count__12682_12714 = G__12719;
                    i__12683_12715 = G__12720;
                    continue;
                  } else {
                    var temp__4657__auto___12721 = cljs.core.seq(seq__12680_12712);
                    if (temp__4657__auto___12721) {
                      var seq__12680_12722__$1 = temp__4657__auto___12721;
                      if (cljs.core.chunked_seq_QMARK_(seq__12680_12722__$1)) {
                        var c__8838__auto___12723 = cljs.core.chunk_first(seq__12680_12722__$1);
                        var G__12724 = cljs.core.chunk_rest(seq__12680_12722__$1);
                        var G__12725 = c__8838__auto___12723;
                        var G__12726 = cljs.core.count(c__8838__auto___12723);
                        var G__12727 = 0;
                        seq__12680_12712 = G__12724;
                        chunk__12681_12713 = G__12725;
                        count__12682_12714 = G__12726;
                        i__12683_12715 = G__12727;
                        continue;
                      } else {
                        var x_12728__$2 = cljs.core.first(seq__12680_12722__$1);
                        arr.push(x_12728__$2);
                        var G__12729 = cljs.core.next(seq__12680_12722__$1);
                        var G__12730 = null;
                        var G__12731 = 0;
                        var G__12732 = 0;
                        seq__12680_12712 = G__12729;
                        chunk__12681_12713 = G__12730;
                        count__12682_12714 = G__12731;
                        i__12683_12715 = G__12732;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                return arr;
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return thisfn(x);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(seq12633) {
  var G__12634 = cljs.core.first(seq12633);
  var seq12633__$1 = cljs.core.next(seq12633);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12634, seq12633__$1);
};
cljs.core.IEncodeClojure = function() {
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__8668__auto__ = x == null ? null : x;
    var m__8669__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__8669__auto__.call(null, x, options);
    } else {
      var m__8666__auto__ = cljs.core._js__GT_clj["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__8666__auto__.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var G__12738 = arguments.length;
  switch(G__12738) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___12743 = arguments.length;
      var i__9175__auto___12744 = 0;
      while (true) {
        if (i__9175__auto___12744 < len__9174__auto___12743) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___12744]);
          var G__12745 = i__9175__auto___12744 + 1;
          i__9175__auto___12744 = G__12745;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9200__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__12739 = opts;
  var map__12739__$1 = (!(map__12739 == null) ? map__12739.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__12739.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12739) : map__12739;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12739__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function cljs$core$thisfn(x__$1) {
    if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
      return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
    } else {
      if (cljs.core.seq_QMARK_(x__$1)) {
        return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
      } else {
        if (cljs.core.map_entry_QMARK_(x__$1)) {
          return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)), cljs$core$thisfn(cljs.core.val(x__$1)), null);
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn), x__$1);
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12733_SHARP_, p2__12734_SHARP_) {
                return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__12733_SHARP_, cljs$core$thisfn(p2__12734_SHARP_));
              }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(r, k) {
                  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(goog.object.get(x__$1, k)));
                }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), cljs.core.js_keys(x__$1)));
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq12736) {
  var G__12737 = cljs.core.first(seq12736);
  var seq12736__$1 = cljs.core.next(seq12736);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12737, seq12736__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__12746__delegate = function(args) {
      var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem), args, cljs.core.lookup_sentinel);
      if (v === cljs.core.lookup_sentinel) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
        return ret;
      } else {
        return v;
      }
    };
    var G__12746 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__12747__i = 0, G__12747__a = new Array(arguments.length - 0);
        while (G__12747__i < G__12747__a.length) {
          G__12747__a[G__12747__i] = arguments[G__12747__i + 0];
          ++G__12747__i;
        }
        args = new cljs.core.IndexedSeq(G__12747__a, 0, null);
      }
      return G__12746__delegate.call(this, args);
    };
    G__12746.cljs$lang$maxFixedArity = 0;
    G__12746.cljs$lang$applyTo = function(arglist__12748) {
      var args = cljs.core.seq(arglist__12748);
      return G__12746__delegate(args);
    };
    G__12746.cljs$core$IFn$_invoke$arity$variadic = G__12746__delegate;
    return G__12746;
  }();
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var G__12752 = arguments.length;
  switch(G__12752) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__9199__auto__ = [];
      var len__9174__auto___12754 = arguments.length;
      var i__9175__auto___12755 = 0;
      while (true) {
        if (i__9175__auto___12755 < len__9174__auto___12754) {
          args_arr__9199__auto__.push(arguments[i__9175__auto___12755]);
          var G__12756 = i__9175__auto___12755 + 1;
          i__9175__auto___12755 = G__12756;
          continue;
        } else {
        }
        break;
      }
      var argseq__9200__auto__ = new cljs.core.IndexedSeq(args_arr__9199__auto__.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9200__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__12757 = ret;
      f = G__12757;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq12750) {
  var G__12751 = cljs.core.first(seq12750);
  var seq12750__$1 = cljs.core.next(seq12750);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12751, seq12750__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var G__12759 = arguments.length;
  switch(G__12759) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__12761 = Math.random() * n;
  return Math.floor(G__12761);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__9184__auto__ = [];
  var len__9174__auto___12764 = arguments.length;
  var i__9175__auto___12765 = 0;
  while (true) {
    if (i__9175__auto___12765 < len__9174__auto___12764) {
      args__9184__auto__.push(arguments[i__9175__auto___12765]);
      var G__12766 = i__9175__auto___12765 + 1;
      i__9175__auto___12765 = G__12766;
      continue;
    } else {
    }
    break;
  }
  var argseq__9185__auto__ = 1 < args__9184__auto__.length ? new cljs.core.IndexedSeq(args__9184__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__9185__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq12762) {
  var G__12763 = cljs.core.first(seq12762);
  var seq12762__$1 = cljs.core.next(seq12762);
  var self__9161__auto__ = this;
  return self__9161__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12763, seq12762__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var G__12768 = arguments.length;
  switch(G__12768) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__7970__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__7970__auto__) {
    return or__7970__auto__;
  } else {
    var or__7970__auto____$1 = cljs.core.contains_QMARK_(function() {
      var fexpr__12771 = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
      return fexpr__12771.cljs$core$IFn$_invoke$arity$1 ? fexpr__12771.cljs$core$IFn$_invoke$arity$1(child) : fexpr__12771.call(null, child);
    }(), parent);
    if (or__7970__auto____$1) {
      return or__7970__auto____$1;
    } else {
      if (cljs.core.vector_QMARK_(parent)) {
        if (cljs.core.vector_QMARK_(child)) {
          if (cljs.core.count(parent) === cljs.core.count(child)) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__12773 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__12774 = i + 1;
                ret = G__12773;
                i = G__12774;
                continue;
              }
              break;
            }
          } else {
            return false;
          }
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var G__12776 = arguments.length;
  switch(G__12776) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var G__12779 = arguments.length;
  switch(G__12779) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var G__12782 = arguments.length;
  switch(G__12782) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var G__12785 = arguments.length;
  switch(G__12785) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(m, source, sources, target, targets) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, k) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
    }, m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
  };
  var or__7970__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "as ancestor"].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "as ancestor"].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__7970__auto__)) {
    return or__7970__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var G__12791 = arguments.length;
  switch(G__12791) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__12787_SHARP_) {
    return cljs.core.cons(cljs.core.first(p1__12787_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__12787_SHARP_), cljs.core.second(p1__12787_SHARP_)));
  }, cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12788_SHARP_, p2__12789_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__12788_SHARP_, p2__12789_SHARP_);
    }, cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var fexpr__12793 = cljs.core.deref(prefer_table);
    return fexpr__12793.cljs$core$IFn$_invoke$arity$1 ? fexpr__12793.cljs$core$IFn$_invoke$arity$1(x) : fexpr__12793.call(null, x);
  }();
  var or__7970__auto__ = cljs.core.truth_(function() {
    var and__7955__auto__ = xprefs;
    if (cljs.core.truth_(and__7955__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__7955__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__7970__auto__)) {
    return or__7970__auto__;
  } else {
    var or__7970__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__12797 = x;
            var G__12798 = cljs.core.first(ps);
            var G__12799 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__12797, G__12798, G__12799) : cljs.core.prefers_STAR_.call(null, G__12797, G__12798, G__12799);
          }())) {
          } else {
          }
          var G__12806 = cljs.core.rest(ps);
          ps = G__12806;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__7970__auto____$1)) {
      return or__7970__auto____$1;
    } else {
      var or__7970__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__12803 = cljs.core.first(ps);
              var G__12804 = y;
              var G__12805 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__12803, G__12804, G__12805) : cljs.core.prefers_STAR_.call(null, G__12803, G__12804, G__12805);
            }())) {
            } else {
            }
            var G__12807 = cljs.core.rest(ps);
            ps = G__12807;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__7970__auto____$2)) {
        return or__7970__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__7970__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__7970__auto__)) {
    return or__7970__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__12808) {
    var vec__12809 = p__12808;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12809, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12809, 1, null);
    var e = vec__12809;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = be == null || cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref(hierarchy)) ? e : be;
      if (cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref(hierarchy))) {
      } else {
        throw new Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)), ", and neither is preferred"].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  var best_entry__$1 = function() {
    var temp__4655__auto__ = best_entry == null ? function() {
      var fexpr__12813 = cljs.core.deref(method_table);
      return fexpr__12813.cljs$core$IFn$_invoke$arity$1 ? fexpr__12813.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__12813.call(null, default_dispatch_val);
    }() : false;
    if (cljs.core.truth_(temp__4655__auto__)) {
      var entry = temp__4655__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val, entry], null);
    } else {
      return best_entry;
    }
  }();
  if (cljs.core.truth_(best_entry__$1)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry__$1));
      return cljs.core.second(best_entry__$1);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__8668__auto__ = mf == null ? null : mf;
    var m__8669__auto__ = cljs.core._reset[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8669__auto__.call(null, mf);
    } else {
      var m__8666__auto__ = cljs.core._reset["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8666__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__8668__auto__ = mf == null ? null : mf;
    var m__8669__auto__ = cljs.core._add_method[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__8669__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__8666__auto__ = cljs.core._add_method["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__8666__auto__.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__8668__auto__ = mf == null ? null : mf;
    var m__8669__auto__ = cljs.core._remove_method[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__8669__auto__.call(null, mf, dispatch_val);
    } else {
      var m__8666__auto__ = cljs.core._remove_method["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__8666__auto__.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__8668__auto__ = mf == null ? null : mf;
    var m__8669__auto__ = cljs.core._prefer_method[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__8669__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__8666__auto__ = cljs.core._prefer_method["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$3 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__8666__auto__.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__8668__auto__ = mf == null ? null : mf;
    var m__8669__auto__ = cljs.core._get_method[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__8669__auto__.call(null, mf, dispatch_val);
    } else {
      var m__8666__auto__ = cljs.core._get_method["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$2 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__8666__auto__.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__8668__auto__ = mf == null ? null : mf;
    var m__8669__auto__ = cljs.core._methods[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8669__auto__.call(null, mf);
    } else {
      var m__8666__auto__ = cljs.core._methods["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8666__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__8668__auto__ = mf == null ? null : mf;
    var m__8669__auto__ = cljs.core._prefers[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8669__auto__.call(null, mf);
    } else {
      var m__8666__auto__ = cljs.core._prefers["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8666__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__8668__auto__ = mf == null ? null : mf;
    var m__8669__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8669__auto__.call(null, mf);
    } else {
      var m__8666__auto__ = cljs.core._default_dispatch_val["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8666__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__8668__auto__ = mf == null ? null : mf;
    var m__8669__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__8668__auto__)];
    if (!(m__8669__auto__ == null)) {
      return m__8669__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8669__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8669__auto__.call(null, mf);
    } else {
      var m__8666__auto__ = cljs.core._dispatch_fn["_"];
      if (!(m__8666__auto__ == null)) {
        return m__8666__auto__.cljs$core$IFn$_invoke$arity$1 ? m__8666__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__8666__auto__.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__12816 = null;
  var G__12816__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__12816__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__12816__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__12816__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__12816__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__12816__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__12816__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__12816__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__12816__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__12816__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__12816__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__12816__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__12816__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__12816__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__12816__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__12816__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__12816__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__12816__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__12816__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__12816__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__12816__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__12816__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__12816 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12816__1.call(this, self__);
      case 2:
        return G__12816__2.call(this, self__, a);
      case 3:
        return G__12816__3.call(this, self__, a, b);
      case 4:
        return G__12816__4.call(this, self__, a, b, c);
      case 5:
        return G__12816__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12816__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12816__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12816__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12816__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12816__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12816__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12816__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12816__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12816__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12816__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12816__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12816__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12816__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12816__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12816__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12816__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12816__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12816.cljs$core$IFn$_invoke$arity$1 = G__12816__1;
  G__12816.cljs$core$IFn$_invoke$arity$2 = G__12816__2;
  G__12816.cljs$core$IFn$_invoke$arity$3 = G__12816__3;
  G__12816.cljs$core$IFn$_invoke$arity$4 = G__12816__4;
  G__12816.cljs$core$IFn$_invoke$arity$5 = G__12816__5;
  G__12816.cljs$core$IFn$_invoke$arity$6 = G__12816__6;
  G__12816.cljs$core$IFn$_invoke$arity$7 = G__12816__7;
  G__12816.cljs$core$IFn$_invoke$arity$8 = G__12816__8;
  G__12816.cljs$core$IFn$_invoke$arity$9 = G__12816__9;
  G__12816.cljs$core$IFn$_invoke$arity$10 = G__12816__10;
  G__12816.cljs$core$IFn$_invoke$arity$11 = G__12816__11;
  G__12816.cljs$core$IFn$_invoke$arity$12 = G__12816__12;
  G__12816.cljs$core$IFn$_invoke$arity$13 = G__12816__13;
  G__12816.cljs$core$IFn$_invoke$arity$14 = G__12816__14;
  G__12816.cljs$core$IFn$_invoke$arity$15 = G__12816__15;
  G__12816.cljs$core$IFn$_invoke$arity$16 = G__12816__16;
  G__12816.cljs$core$IFn$_invoke$arity$17 = G__12816__17;
  G__12816.cljs$core$IFn$_invoke$arity$18 = G__12816__18;
  G__12816.cljs$core$IFn$_invoke$arity$19 = G__12816__19;
  G__12816.cljs$core$IFn$_invoke$arity$20 = G__12816__20;
  G__12816.cljs$core$IFn$_invoke$arity$21 = G__12816__21;
  G__12816.cljs$core$IFn$_invoke$arity$22 = G__12816__22;
  return G__12816;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args12814) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12814)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(old) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4655__auto__ = function() {
    var fexpr__12815 = cljs.core.deref(self__.method_cache);
    return fexpr__12815.cljs$core$IFn$_invoke$arity$1 ? fexpr__12815.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__12815.call(null, dispatch_val);
  }();
  if (cljs.core.truth_(temp__4655__auto__)) {
    var target_fn = temp__4655__auto__;
    return target_fn;
  } else {
    return cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy, self__.default_dispatch_val);
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return goog.array.defaultCompare(self__.uuid, other.uuid);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(s.toLowerCase(), null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", "4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var G__12819 = arguments.length;
  switch(G__12819) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), "null", new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), "null", new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), "null", new cljs.core.Symbol(null, "try", "try", -1273693247, null), "null", new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), "null", new cljs.core.Symbol(null, 
  "finally", "finally", -1065347064, null), "null", new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), "null", new cljs.core.Symbol(null, "do", "do", 1686842252, null), "null", new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), "null", new cljs.core.Symbol(null, "if", "if", 1181717262, null), "null", new cljs.core.Symbol(null, "new", "new", -444906321, null), "null", new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), "null", new cljs.core.Symbol(null, "deftype*", 
  "deftype*", 962659890, null), "null", new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), "null", new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), "null", new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), "null", new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), "null", new cljs.core.Symbol(null, "set!", "set!", 250714521, null), "null", new cljs.core.Symbol(null, ".", ".", 1975675962, null), "null", new cljs.core.Symbol(null, "var", "var", 870848730, 
  null), "null", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "null", new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), "null", new cljs.core.Symbol(null, "throw", "throw", 595905694, null), "null", new cljs.core.Symbol(null, "def", "def", 597100991, null), "null"], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__12821 = v;
  var G__12821__$1 = G__12821 instanceof cljs.core.Keyword ? G__12821.fqn : null;
  switch(G__12821__$1) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag), " "].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["arguments", "abstract", "await", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", 
"throw", "throws", "transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null", "constructor"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__12823_SHARP_, p2__12824_SHARP_) {
      goog.object.set(p1__12823_SHARP_, p2__12824_SHARP_, true);
      return p1__12823_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__12827 = cljs.core.next(ks__$1);
          var G__12828 = [function() {
            var G__12826 = ret;
            if (!(ret === "")) {
              return [G__12826, "|"].join("");
            } else {
              return G__12826;
            }
          }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__12827;
          ret = G__12828;
          continue;
        } else {
          return [ret, "|\\$"].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_12829 = 0;
  while (true) {
    if (i_12829 < name.length) {
      var c_12830 = name.charAt(i_12829);
      var sub_12831 = goog.object.get(cljs.core.CHAR_MAP, c_12830);
      if (!(sub_12831 == null)) {
        sb.append(sub_12831);
      } else {
        sb.append(c_12830);
      }
      var G__12832 = i_12829 + 1;
      i_12829 = G__12832;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [name_SINGLEQUOTE_, "$"].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return name_SINGLEQUOTE___$1;
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = goog.string.endsWith(munged_name, "$") ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4655__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4655__auto__)) {
      var match = temp__4655__auto__;
      var vec__12836 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12836, 0, null);
      var G__12839 = [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__12840 = r.lastIndex;
      ret = G__12839;
      last_match_end = G__12840;
      continue;
    } else {
      return [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  var G__12842 = function() {
    var name_SINGLEQUOTE_ = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str(name_SINGLEQUOTE_);
    }
  }();
  var fexpr__12841 = name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return fexpr__12841.cljs$core$IFn$_invoke$arity$1 ? fexpr__12841.cljs$core$IFn$_invoke$arity$1(G__12842) : fexpr__12841.call(null, G__12842);
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.tapset !== "undefined") {
} else {
  cljs.core.tapset = null;
}
cljs.core.maybe_init_tapset = function cljs$core$maybe_init_tapset() {
  if (cljs.core.tapset == null) {
    return cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  } else {
    return null;
  }
};
cljs.core.add_tap = function cljs$core$add_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, f);
  return null;
};
cljs.core.remove_tap = function cljs$core$remove_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, f);
  return null;
};
cljs.core.tap_GT_ = function cljs$core$tap_GT_(x) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    var seq__12843 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__12844 = null;
    var count__12845 = 0;
    var i__12846 = 0;
    while (true) {
      if (i__12846 < count__12845) {
        var tap = chunk__12844.cljs$core$IIndexed$_nth$arity$2(null, i__12846);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e12849) {
          if (e12849 instanceof Error) {
            var ex_12851 = e12849;
          } else {
            throw e12849;
          }
        }
        var G__12852 = seq__12843;
        var G__12853 = chunk__12844;
        var G__12854 = count__12845;
        var G__12855 = i__12846 + 1;
        seq__12843 = G__12852;
        chunk__12844 = G__12853;
        count__12845 = G__12854;
        i__12846 = G__12855;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq(seq__12843);
        if (temp__4657__auto__) {
          var seq__12843__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__12843__$1)) {
            var c__8838__auto__ = cljs.core.chunk_first(seq__12843__$1);
            var G__12856 = cljs.core.chunk_rest(seq__12843__$1);
            var G__12857 = c__8838__auto__;
            var G__12858 = cljs.core.count(c__8838__auto__);
            var G__12859 = 0;
            seq__12843 = G__12856;
            chunk__12844 = G__12857;
            count__12845 = G__12858;
            i__12846 = G__12859;
            continue;
          } else {
            var tap = cljs.core.first(seq__12843__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e12850) {
              if (e12850 instanceof Error) {
                var ex_12860 = e12850;
              } else {
                throw e12850;
              }
            }
            var G__12861 = cljs.core.next(seq__12843__$1);
            var G__12862 = null;
            var G__12863 = 0;
            var G__12864 = 0;
            seq__12843 = G__12861;
            chunk__12844 = G__12862;
            count__12845 = G__12863;
            i__12846 = G__12864;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    var seq__12843 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__12844 = null;
    var count__12845 = 0;
    var i__12846 = 0;
    while (true) {
      if (i__12846 < count__12845) {
        var tap = chunk__12844.cljs$core$IIndexed$_nth$arity$2(null, i__12846);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e12849) {
          if (e12849 instanceof Error) {
            var ex_12865 = e12849;
          } else {
            throw e12849;
          }
        }
        var G__12866 = seq__12843;
        var G__12867 = chunk__12844;
        var G__12868 = count__12845;
        var G__12869 = i__12846 + 1;
        seq__12843 = G__12866;
        chunk__12844 = G__12867;
        count__12845 = G__12868;
        i__12846 = G__12869;
        continue;
      } else {
        var temp__4657__auto__ = cljs.core.seq(seq__12843);
        if (temp__4657__auto__) {
          var seq__12843__$1 = temp__4657__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__12843__$1)) {
            var c__8838__auto__ = cljs.core.chunk_first(seq__12843__$1);
            var G__12870 = cljs.core.chunk_rest(seq__12843__$1);
            var G__12871 = c__8838__auto__;
            var G__12872 = cljs.core.count(c__8838__auto__);
            var G__12873 = 0;
            seq__12843 = G__12870;
            chunk__12844 = G__12871;
            count__12845 = G__12872;
            i__12846 = G__12873;
            continue;
          } else {
            var tap = cljs.core.first(seq__12843__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e12850) {
              if (e12850 instanceof Error) {
                var ex_12874 = e12850;
              } else {
                throw e12850;
              }
            }
            var G__12875 = cljs.core.next(seq__12843__$1);
            var G__12876 = null;
            var G__12877 = 0;
            var G__12878 = 0;
            seq__12843 = G__12875;
            chunk__12844 = G__12876;
            count__12845 = G__12877;
            i__12846 = G__12878;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__8601__auto__, writer__8602__auto__, opt__8603__auto__) {
  return cljs.core._write(writer__8602__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__12879 = goog.object.get(ctxt, cljs.core.first(xs));
        var G__12880 = cljs.core.next(xs);
        ctxt = G__12879;
        xs = G__12880;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));
  var segs = munged_ns.split(".");
  var G__12881 = cljs.core._STAR_target_STAR_;
  switch(G__12881) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var ctxt = eval(cljs.core.first(segs));
            if (cljs.core.truth_(function() {
              var and__7955__auto__ = ctxt;
              if (cljs.core.truth_(and__7955__auto__)) {
                return cljs.core.object_QMARK_(ctxt);
              } else {
                return and__7955__auto__;
              }
            }())) {
              return ctxt;
            } else {
              return null;
            }
          } catch (e12882) {
            if (e12882 instanceof ReferenceError) {
              var e = e12882;
              return null;
            } else {
              throw e12882;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      }
      break;
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error(["find-ns-obj not supported for target ", cljs.core._STAR_target_STAR_].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function cljs$core$ns_interns_STAR__$_step(ret, k) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function() {
      return goog.object.get(ns_obj, k);
    }, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym), cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
  };
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var G__12885 = arguments.length;
  switch(G__12885) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
  var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str, "$macros"].join("")) : ns;
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns__$1);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.uri_QMARK_ = function cljs$core$uri_QMARK_(x) {
  return x instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function cljs$core$maybe_enable_print_BANG_() {
  if (typeof console !== "undefined") {
    return cljs.core.enable_console_print_BANG_();
  } else {
    if (cljs.core._STAR_target_STAR_ === "nashorn" || cljs.core._STAR_target_STAR_ === "graaljs") {
      var system = Java.type("java.lang.System");
      cljs.core._STAR_print_newline_STAR_ = false;
      cljs.core.set_print_fn_BANG_(function() {
        var xs = arguments;
        var s = goog.array.clone(xs).join("");
        return system.out.println(s);
      });
      return cljs.core.set_print_err_fn_BANG_(function() {
        var xs = arguments;
        var s = goog.array.clone(xs).join("");
        return system.error.println(s);
      });
    } else {
      return null;
    }
  }
};
cljs.core.maybe_enable_print_BANG_();
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_eval_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_eval_STAR_ = function cljs$core$_STAR_eval_STAR_(_) {
    throw new Error("cljs.core/*eval* not bound");
  };
}
cljs.core.eval = function cljs$core$eval(form) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(form) : cljs.core._STAR_eval_STAR_.call(null, form);
};
if (COMPILED) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("nodejs", cljs.core._STAR_target_STAR_)) {
    goog.global = global;
  } else {
  }
} else {
}
;goog.provide("process.env");
goog.require("cljs.core");
goog.define("process.env.NODE_ENV", "development");
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  var r = new RegExp(re.source, function() {
    var G__738 = "g";
    var G__738__$1 = cljs.core.truth_(re.ignoreCase) ? [G__738, "i"].join("") : G__738;
    var G__738__$2 = cljs.core.truth_(re.multiline) ? [G__738__$1, "m"].join("") : G__738__$1;
    if (cljs.core.truth_(re.unicode)) {
      return [G__738__$2, "u"].join("");
    } else {
      return G__738__$2;
    }
  }());
  return s.replace(r, replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__739__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__739 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__740__i = 0, G__740__a = new Array(arguments.length - 0);
        while (G__740__i < G__740__a.length) {
          G__740__a[G__740__i] = arguments[G__740__i + 0];
          ++G__740__i;
        }
        args = new cljs.core.IndexedSeq(G__740__a, 0, null);
      }
      return G__739__delegate.call(this, args);
    };
    G__739.cljs$lang$maxFixedArity = 0;
    G__739.cljs$lang$applyTo = function(arglist__741) {
      var args = cljs.core.seq(arglist__741);
      return G__739__delegate(args);
    };
    G__739.cljs$core$IFn$_invoke$arity$variadic = G__739__delegate;
    return G__739;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var G__743 = arguments.length;
  switch(G__743) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__745 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var G__746 = cljs.core.next.call(null, coll__$1);
      sb = G__745;
      coll__$1 = G__746;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__747 = sb;
      var G__748 = coll__$2;
      sb = G__747;
      coll__$1 = G__748;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  return goog.string.capitalize(s);
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__749 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__749;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__750 = cljs.core._EQ__EQ_;
    var expr__751 = limit;
    if (cljs.core.truth_(pred__750.call(null, 1, expr__751))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__750.call(null, 2, expr__751))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var G__754 = arguments.length;
  switch(G__754) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === cljs.core.str.cljs$core$IFn$_invoke$arity$1(re) ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__756 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__757 = limit__$1 - 1;
          var G__758 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__756;
          limit__$1 = G__757;
          parts = G__758;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__759 = index - 1;
        index = G__759;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(s));
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));
      } else {
        buffer.append(ch);
      }
      var G__760 = index + 1;
      index = G__760;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var G__762 = arguments.length;
  switch(G__762) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var G__765 = arguments.length;
  switch(G__765) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___1214 = arguments.length;
  var i__4790__auto___1215 = 0;
  while (true) {
    if (i__4790__auto___1215 < len__4789__auto___1214) {
      args__4795__auto__.push(arguments[i__4790__auto___1215]);
      var G__1216 = i__4790__auto___1215 + 1;
      i__4790__auto___1215 = G__1216;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq1213) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq1213));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___1218 = arguments.length;
  var i__4790__auto___1219 = 0;
  while (true) {
    if (i__4790__auto___1219 < len__4789__auto___1218) {
      args__4795__auto__.push(arguments[i__4790__auto___1219]);
      var G__1220 = i__4790__auto___1219 + 1;
      i__4790__auto___1219 = G__1220;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq1217) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq1217));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__1221 = cljs.core._EQ_;
    var expr__1222 = c;
    if (cljs.core.truth_(pred__1221.call(null, "\b", expr__1222))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__1221.call(null, " ", expr__1222))) {
        return "\\space";
      } else {
        if (cljs.core.truth_(pred__1221.call(null, "\t", expr__1222))) {
          return "\\tab";
        } else {
          if (cljs.core.truth_(pred__1221.call(null, "\n", expr__1222))) {
            return "\\newline";
          } else {
            if (cljs.core.truth_(pred__1221.call(null, "\f", expr__1222))) {
              return "\\formfeed";
            } else {
              if (cljs.core.truth_(pred__1221.call(null, "\r", expr__1222))) {
                return "\\return";
              } else {
                if (cljs.core.truth_(pred__1221.call(null, '"', expr__1222))) {
                  return '\\"';
                } else {
                  if (cljs.core.truth_(pred__1221.call(null, "\\", expr__1222))) {
                    return "\\\\";
                  } else {
                    return ["\\", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
                  }
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___1225 = arguments.length;
  var i__4790__auto___1226 = 0;
  while (true) {
    if (i__4790__auto___1226 < len__4789__auto___1225) {
      args__4795__auto__.push(arguments[i__4790__auto___1226]);
      var G__1227 = i__4790__auto___1226 + 1;
      i__4790__auto___1226 = G__1227;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq1224) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq1224));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___1229 = arguments.length;
  var i__4790__auto___1230 = 0;
  while (true) {
    if (i__4790__auto___1230 < len__4789__auto___1229) {
      args__4795__auto__.push(arguments[i__4790__auto___1230]);
      var G__1231 = i__4790__auto___1230 + 1;
      i__4790__auto___1230 = G__1231;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq1228) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq1228));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__1235 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__1235, 0, null);
      var new_context = cljs.core.nth.call(null, vec__1235, 1, null);
      var G__1238 = new_context;
      var G__1239 = remainder;
      var G__1240 = cljs.core.conj.call(null, acc, result);
      context = G__1238;
      lis__$1 = G__1239;
      acc = G__1240;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__1244 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__1244, 0, null);
    var new_context = cljs.core.nth.call(null, vec__1244, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__1247 = new_context;
      var G__1248 = cljs.core.conj.call(null, acc, result);
      context = G__1247;
      acc = G__1248;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__1252 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__1252, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__1252, 1, null);
    var new_context = cljs.core.nth.call(null, vec__1252, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__1255 = new_context;
      var G__1256 = cljs.core.conj.call(null, acc, result);
      context = G__1255;
      acc = G__1256;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4582__auto__ = function cljs$pprint$unzip_map_$_iter__1257(s__1258) {
      return new cljs.core.LazySeq(null, function() {
        var s__1258__$1 = s__1258;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__1258__$1);
          if (temp__5735__auto__) {
            var s__1258__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__1258__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__1258__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__1260 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__1259 = 0;
                while (true) {
                  if (i__1259 < size__4581__auto__) {
                    var vec__1261 = cljs.core._nth.call(null, c__4580__auto__, i__1259);
                    var k = cljs.core.nth.call(null, vec__1261, 0, null);
                    var vec__1264 = cljs.core.nth.call(null, vec__1261, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__1264, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__1264, 1, null);
                    cljs.core.chunk_append.call(null, b__1260, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__1289 = i__1259 + 1;
                    i__1259 = G__1289;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1260), cljs$pprint$unzip_map_$_iter__1257.call(null, cljs.core.chunk_rest.call(null, s__1258__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1260), null);
              }
            } else {
              var vec__1267 = cljs.core.first.call(null, s__1258__$2);
              var k = cljs.core.nth.call(null, vec__1267, 0, null);
              var vec__1270 = cljs.core.nth.call(null, vec__1267, 1, null);
              var v1 = cljs.core.nth.call(null, vec__1270, 0, null);
              var v2 = cljs.core.nth.call(null, vec__1270, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__1257.call(null, cljs.core.rest.call(null, s__1258__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4582__auto__ = function cljs$pprint$unzip_map_$_iter__1273(s__1274) {
      return new cljs.core.LazySeq(null, function() {
        var s__1274__$1 = s__1274;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__1274__$1);
          if (temp__5735__auto__) {
            var s__1274__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__1274__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__1274__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__1276 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__1275 = 0;
                while (true) {
                  if (i__1275 < size__4581__auto__) {
                    var vec__1277 = cljs.core._nth.call(null, c__4580__auto__, i__1275);
                    var k = cljs.core.nth.call(null, vec__1277, 0, null);
                    var vec__1280 = cljs.core.nth.call(null, vec__1277, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__1280, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__1280, 1, null);
                    cljs.core.chunk_append.call(null, b__1276, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__1290 = i__1275 + 1;
                    i__1275 = G__1290;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1276), cljs$pprint$unzip_map_$_iter__1273.call(null, cljs.core.chunk_rest.call(null, s__1274__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1276), null);
              }
            } else {
              var vec__1283 = cljs.core.first.call(null, s__1274__$2);
              var k = cljs.core.nth.call(null, vec__1283, 0, null);
              var vec__1286 = cljs.core.nth.call(null, vec__1283, 1, null);
              var v1 = cljs.core.nth.call(null, vec__1286, 0, null);
              var v2 = cljs.core.nth.call(null, vec__1286, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__1273.call(null, cljs.core.rest.call(null, s__1274__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4582__auto__ = function cljs$pprint$tuple_map_$_iter__1291(s__1292) {
      return new cljs.core.LazySeq(null, function() {
        var s__1292__$1 = s__1292;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__1292__$1);
          if (temp__5735__auto__) {
            var s__1292__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__1292__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__1292__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__1294 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__1293 = 0;
                while (true) {
                  if (i__1293 < size__4581__auto__) {
                    var vec__1295 = cljs.core._nth.call(null, c__4580__auto__, i__1293);
                    var k = cljs.core.nth.call(null, vec__1295, 0, null);
                    var v = cljs.core.nth.call(null, vec__1295, 1, null);
                    cljs.core.chunk_append.call(null, b__1294, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__1301 = i__1293 + 1;
                    i__1293 = G__1301;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1294), cljs$pprint$tuple_map_$_iter__1291.call(null, cljs.core.chunk_rest.call(null, s__1292__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1294), null);
              }
            } else {
              var vec__1298 = cljs.core.first.call(null, s__1292__$2);
              var k = cljs.core.nth.call(null, vec__1298, 0, null);
              var v = cljs.core.nth.call(null, vec__1298, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__1291.call(null, cljs.core.rest.call(null, s__1292__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__1302 = n - 1;
          n = G__1302;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__1303 = n + 1;
        n = G__1303;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.createAsIfByAssoc([val]);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__1304 = pos + 1;
      pos = G__1304;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__4487__auto__ = pp == null ? null : pp;
    var m__4488__auto__ = cljs.pprint._ppflush[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, pp);
    } else {
      var m__4485__auto__ = cljs.pprint._ppflush["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var G__1307 = arguments.length;
  switch(G__1307) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint1308 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint1308 = function(writer, max_columns, fields, meta1309) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta1309 = meta1309;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint1308.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_1310, meta1309__$1) {
      var self__ = this;
      var _1310__$1 = this;
      return new cljs.pprint.t_cljs$pprint1308(self__.writer, self__.max_columns, self__.fields, meta1309__$1);
    };
    cljs.pprint.t_cljs$pprint1308.prototype.cljs$core$IMeta$_meta$arity$1 = function(_1310) {
      var self__ = this;
      var _1310__$1 = this;
      return self__.meta1309;
    };
    cljs.pprint.t_cljs$pprint1308.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.fields;
    };
    cljs.pprint.t_cljs$pprint1308.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint1308.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__1311 = cljs.core._EQ_;
      var expr__1312 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__1311.call(null, String, expr__1312))) {
        var s = x;
        var nl = s.lastIndexOf("\n");
        if (nl < 0) {
          cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
        } else {
          cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
          cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__1305_SHARP_) {
            return cljs.core._EQ_.call(null, p1__1305_SHARP_, "\n");
          }, s)));
        }
        return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
      } else {
        if (cljs.core.truth_(pred__1311.call(null, Number, expr__1312))) {
          return cljs.pprint.c_write_char.call(null, this$__$1, x);
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__1312)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint1308.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta1309", "meta1309", 1184453910, null)], null);
    };
    cljs.pprint.t_cljs$pprint1308.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint1308.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint1308";
    cljs.pprint.t_cljs$pprint1308.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint1308");
    };
    cljs.pprint.__GT_t_cljs$pprint1308 = function cljs$pprint$__GT_t_cljs$pprint1308(writer__$1, max_columns__$1, fields__$1, meta1309) {
      return new cljs.pprint.t_cljs$pprint1308(writer__$1, max_columns__$1, fields__$1, meta1309);
    };
  }
  return new cljs.pprint.t_cljs$pprint1308(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k1316, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__1320 = k1316;
  var G__1320__$1 = G__1320 instanceof cljs.core.Keyword ? G__1320.fqn : null;
  switch(G__1320__$1) {
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "indent":
      return self__.indent;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "suffix":
      return self__.suffix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k1316, else__4442__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__1321) {
    var vec__1322 = p__1321;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__1322, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__1322, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__1315) {
  var self__ = this;
  var G__1315__$1 = this;
  return new cljs.core.RecordIter(0, G__1315__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return 1977012399 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this1317, other1318) {
  var self__ = this;
  var this1317__$1 = this;
  return !(other1318 == null) && this1317__$1.constructor === other1318.constructor && cljs.core._EQ_.call(null, this1317__$1.parent, other1318.parent) && cljs.core._EQ_.call(null, this1317__$1.section, other1318.section) && cljs.core._EQ_.call(null, this1317__$1.start_col, other1318.start_col) && cljs.core._EQ_.call(null, this1317__$1.indent, other1318.indent) && cljs.core._EQ_.call(null, this1317__$1.done_nl, other1318.done_nl) && cljs.core._EQ_.call(null, this1317__$1.intra_block_nl, other1318.intra_block_nl) && 
  cljs.core._EQ_.call(null, this1317__$1.prefix, other1318.prefix) && cljs.core._EQ_.call(null, this1317__$1.per_line_prefix, other1318.per_line_prefix) && cljs.core._EQ_.call(null, this1317__$1.suffix, other1318.suffix) && cljs.core._EQ_.call(null, this1317__$1.logical_block_callback, other1318.logical_block_callback) && cljs.core._EQ_.call(null, this1317__$1.__extmap, other1318.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__1315) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__1325 = cljs.core.keyword_identical_QMARK_;
  var expr__1326 = k__4447__auto__;
  if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__1326))) {
    return new cljs.pprint.logical_block(G__1315, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__1326))) {
      return new cljs.pprint.logical_block(self__.parent, G__1315, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__1326))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__1315, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__1326))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__1315, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__1326))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__1315, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__1326))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__1315, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__1326))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__1315, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__1326))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__1315, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__1326))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__1315, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__1325.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__1326))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__1315, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__1315), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "section", "section", -300141526), self__.section, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "indent", "indent", -148200125), self__.indent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), 
  self__.per_line_prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback, null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__1315) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__1315, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/logical-block", null, 1, null);
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__1319) {
  var extmap__4478__auto__ = function() {
    var G__1328 = cljs.core.dissoc.call(null, G__1319, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), 
    new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194));
    if (cljs.core.record_QMARK_.call(null, G__1319)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__1328);
    } else {
      return G__1328;
    }
  }();
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__1319), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__1319), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__1319), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__1319), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__1319), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__1319), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__1319), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__1319), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__1319), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__1319), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__1330 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__1330;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k1332, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__1336 = k1332;
  var G__1336__$1 = G__1336 instanceof cljs.core.Keyword ? G__1336.fqn : null;
  switch(G__1336__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k1332, else__4442__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__1337) {
    var vec__1338 = p__1337;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__1338, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__1338, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__1331) {
  var self__ = this;
  var G__1331__$1 = this;
  return new cljs.core.RecordIter(0, G__1331__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? 
  cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return 1809113693 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this1333, other1334) {
  var self__ = this;
  var this1333__$1 = this;
  return !(other1334 == null) && this1333__$1.constructor === other1334.constructor && cljs.core._EQ_.call(null, this1333__$1.type_tag, other1334.type_tag) && cljs.core._EQ_.call(null, this1333__$1.data, other1334.data) && cljs.core._EQ_.call(null, this1333__$1.trailing_white_space, other1334.trailing_white_space) && cljs.core._EQ_.call(null, this1333__$1.start_pos, other1334.start_pos) && cljs.core._EQ_.call(null, this1333__$1.end_pos, other1334.end_pos) && cljs.core._EQ_.call(null, this1333__$1.__extmap, 
  other1334.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__1331) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__1341 = cljs.core.keyword_identical_QMARK_;
  var expr__1342 = k__4447__auto__;
  if (cljs.core.truth_(pred__1341.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__1342))) {
    return new cljs.pprint.buffer_blob(G__1331, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__1341.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__1342))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__1331, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__1341.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__1342))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__1331, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__1341.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__1342))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__1331, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__1341.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__1342))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__1331, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__1331), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "data", "data", -232669377), self__.data, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space, null), 
  new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__1331) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__1331, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/buffer-blob", null, 1, null);
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__1335) {
  var extmap__4478__auto__ = function() {
    var G__1344 = cljs.core.dissoc.call(null, G__1335, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__1335)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__1344);
    } else {
      return G__1344;
    }
  }();
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__1335), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__1335), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__1335), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__1335), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__1335), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__1144__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__1144__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k1347, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__1351 = k1347;
  var G__1351__$1 = G__1351 instanceof cljs.core.Keyword ? G__1351.fqn : null;
  switch(G__1351__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k1347, else__4442__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__1352) {
    var vec__1353 = p__1352;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__1353, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__1353, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__1346) {
  var self__ = this;
  var G__1346__$1 = this;
  return new cljs.core.RecordIter(0, G__1346__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? 
  cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -1640656800 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this1348, other1349) {
  var self__ = this;
  var this1348__$1 = this;
  return !(other1349 == null) && this1348__$1.constructor === other1349.constructor && cljs.core._EQ_.call(null, this1348__$1.type_tag, other1349.type_tag) && cljs.core._EQ_.call(null, this1348__$1.type, other1349.type) && cljs.core._EQ_.call(null, this1348__$1.logical_block, other1349.logical_block) && cljs.core._EQ_.call(null, this1348__$1.start_pos, other1349.start_pos) && cljs.core._EQ_.call(null, this1348__$1.end_pos, other1349.end_pos) && cljs.core._EQ_.call(null, this1348__$1.__extmap, other1349.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__1346) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__1356 = cljs.core.keyword_identical_QMARK_;
  var expr__1357 = k__4447__auto__;
  if (cljs.core.truth_(pred__1356.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__1357))) {
    return new cljs.pprint.nl_t(G__1346, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__1356.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__1357))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__1346, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__1356.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__1357))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__1346, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__1356.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__1357))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__1346, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__1356.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__1357))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__1346, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__1346), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__1346) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__1346, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/nl-t", null, 1, null);
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__1350) {
  var extmap__4478__auto__ = function() {
    var G__1359 = cljs.core.dissoc.call(null, G__1350, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__1350)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__1359);
    } else {
      return G__1359;
    }
  }();
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__1350), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__1350), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__1350), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__1350), (new cljs.core.Keyword(null, "end-pos", "end-pos", 
  -1643883926)).cljs$core$IFn$_invoke$arity$1(G__1350), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__1144__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__1144__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k1362, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__1366 = k1362;
  var G__1366__$1 = G__1366 instanceof cljs.core.Keyword ? G__1366.fqn : null;
  switch(G__1366__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k1362, else__4442__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__1367) {
    var vec__1368 = p__1367;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__1368, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__1368, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__1361) {
  var self__ = this;
  var G__1361__$1 = this;
  return new cljs.core.RecordIter(0, G__1361__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : 
  cljs.core.nil_iter.call(null));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -414877272 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this1363, other1364) {
  var self__ = this;
  var this1363__$1 = this;
  return !(other1364 == null) && this1363__$1.constructor === other1364.constructor && cljs.core._EQ_.call(null, this1363__$1.type_tag, other1364.type_tag) && cljs.core._EQ_.call(null, this1363__$1.logical_block, other1364.logical_block) && cljs.core._EQ_.call(null, this1363__$1.start_pos, other1364.start_pos) && cljs.core._EQ_.call(null, this1363__$1.end_pos, other1364.end_pos) && cljs.core._EQ_.call(null, this1363__$1.__extmap, other1364.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__1361) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__1371 = cljs.core.keyword_identical_QMARK_;
  var expr__1372 = k__4447__auto__;
  if (cljs.core.truth_(pred__1371.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__1372))) {
    return new cljs.pprint.start_block_t(G__1361, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__1371.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__1372))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__1361, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__1371.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__1372))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__1361, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__1371.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__1372))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__1361, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__1361), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__1361) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__1361, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/start-block-t", null, 1, null);
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__1365) {
  var extmap__4478__auto__ = function() {
    var G__1374 = cljs.core.dissoc.call(null, G__1365, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__1365)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__1374);
    } else {
      return G__1374;
    }
  }();
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__1365), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__1365), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__1365), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__1365), null, cljs.core.not_empty.call(null, 
  extmap__4478__auto__), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__1144__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__1144__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k1377, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__1381 = k1377;
  var G__1381__$1 = G__1381 instanceof cljs.core.Keyword ? G__1381.fqn : null;
  switch(G__1381__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k1377, else__4442__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__1382) {
    var vec__1383 = p__1382;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__1383, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__1383, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__1376) {
  var self__ = this;
  var G__1376__$1 = this;
  return new cljs.core.RecordIter(0, G__1376__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : 
  cljs.core.nil_iter.call(null));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return 1365867980 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this1378, other1379) {
  var self__ = this;
  var this1378__$1 = this;
  return !(other1379 == null) && this1378__$1.constructor === other1379.constructor && cljs.core._EQ_.call(null, this1378__$1.type_tag, other1379.type_tag) && cljs.core._EQ_.call(null, this1378__$1.logical_block, other1379.logical_block) && cljs.core._EQ_.call(null, this1378__$1.start_pos, other1379.start_pos) && cljs.core._EQ_.call(null, this1378__$1.end_pos, other1379.end_pos) && cljs.core._EQ_.call(null, this1378__$1.__extmap, other1379.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__1376) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__1386 = cljs.core.keyword_identical_QMARK_;
  var expr__1387 = k__4447__auto__;
  if (cljs.core.truth_(pred__1386.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__1387))) {
    return new cljs.pprint.end_block_t(G__1376, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__1386.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__1387))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__1376, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__1386.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__1387))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__1376, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__1386.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__1387))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__1376, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__1376), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__1376) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__1376, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/end-block-t", null, 1, null);
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__1380) {
  var extmap__4478__auto__ = function() {
    var G__1389 = cljs.core.dissoc.call(null, G__1380, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__1380)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__1389);
    } else {
      return G__1389;
    }
  }();
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__1380), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__1380), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__1380), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__1380), null, cljs.core.not_empty.call(null, 
  extmap__4478__auto__), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__1144__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__1144__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k1392, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__1396 = k1392;
  var G__1396__$1 = G__1396 instanceof cljs.core.Keyword ? G__1396.fqn : null;
  switch(G__1396__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k1392, else__4442__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__1397) {
    var vec__1398 = p__1397;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__1398, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__1398, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__1391) {
  var self__ = this;
  var G__1391__$1 = this;
  return new cljs.core.RecordIter(0, G__1391__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -1602780238 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this1393, other1394) {
  var self__ = this;
  var this1393__$1 = this;
  return !(other1394 == null) && this1393__$1.constructor === other1394.constructor && cljs.core._EQ_.call(null, this1393__$1.type_tag, other1394.type_tag) && cljs.core._EQ_.call(null, this1393__$1.logical_block, other1394.logical_block) && cljs.core._EQ_.call(null, this1393__$1.relative_to, other1394.relative_to) && cljs.core._EQ_.call(null, this1393__$1.offset, other1394.offset) && cljs.core._EQ_.call(null, this1393__$1.start_pos, other1394.start_pos) && cljs.core._EQ_.call(null, this1393__$1.end_pos, 
  other1394.end_pos) && cljs.core._EQ_.call(null, this1393__$1.__extmap, other1394.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__1391) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__1401 = cljs.core.keyword_identical_QMARK_;
  var expr__1402 = k__4447__auto__;
  if (cljs.core.truth_(pred__1401.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__1402))) {
    return new cljs.pprint.indent_t(G__1391, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__1401.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__1402))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__1391, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__1401.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__1402))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__1391, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__1401.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__1402))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__1391, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__1401.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__1402))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__1391, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__1401.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__1402))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__1391, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__1391), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to, null), 
  new cljs.core.MapEntry(new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__1391) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__1391, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/indent-t", null, 1, null);
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__1395) {
  var extmap__4478__auto__ = function() {
    var G__1404 = cljs.core.dissoc.call(null, G__1395, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__1395)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__1404);
    } else {
      return G__1404;
    }
  }();
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__1395), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__1395), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__1395), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__1395), (new cljs.core.Keyword(null, "start-pos", 
  "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__1395), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__1395), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__1144__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__1144__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(p1__1407_SHARP_, p2__1406_SHARP_) {
      return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__1406_SHARP_);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__5735__auto___1408 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5735__auto___1408)) {
    var cb_1409 = temp__5735__auto___1408;
    cb_1409.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__5735__auto___1410 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__5735__auto___1410)) {
    var prefix_1411 = temp__5735__auto___1410;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_1411);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__5735__auto___1412 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5735__auto___1412)) {
    var cb_1413 = temp__5735__auto___1412;
    cb_1413.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__5735__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__5735__auto__)) {
    var suffix = temp__5735__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__1414 = cljs.core._EQ_;
    var expr__1415 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__1414.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__1415))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__1414.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__1415))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__1415)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__4185__auto__) {
      return or__4185__auto__;
    } else {
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return false;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__5733__auto___1417 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__5733__auto___1417)) {
      var tws_1418 = temp__5733__auto___1417;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_1418);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__1419 = cljs.core.seq.call(null, tokens);
  var chunk__1420 = null;
  var count__1421 = 0;
  var i__1422 = 0;
  while (true) {
    if (i__1422 < count__1421) {
      var token = cljs.core._nth.call(null, chunk__1420, i__1422);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__5733__auto___1423 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__5733__auto___1423)) {
          var tws_1424 = temp__5733__auto___1423;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_1424);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_1425 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__4174__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__4174__auto__)) {
          return tws_1425;
        } else {
          return and__4174__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_1425);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__1426 = seq__1419;
      var G__1427 = chunk__1420;
      var G__1428 = count__1421;
      var G__1429 = i__1422 + 1;
      seq__1419 = G__1426;
      chunk__1420 = G__1427;
      count__1421 = G__1428;
      i__1422 = G__1429;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq.call(null, seq__1419);
      if (temp__5735__auto__) {
        var seq__1419__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__1419__$1)) {
          var c__4609__auto__ = cljs.core.chunk_first.call(null, seq__1419__$1);
          var G__1430 = cljs.core.chunk_rest.call(null, seq__1419__$1);
          var G__1431 = c__4609__auto__;
          var G__1432 = cljs.core.count.call(null, c__4609__auto__);
          var G__1433 = 0;
          seq__1419 = G__1430;
          chunk__1420 = G__1431;
          count__1421 = G__1432;
          i__1422 = G__1433;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__1419__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__5733__auto___1434 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__5733__auto___1434)) {
              var tws_1435 = temp__5733__auto___1434;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_1435);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_1436 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__4174__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__4174__auto__)) {
              return tws_1436;
            } else {
              return and__4174__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_1436);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__1437 = cljs.core.next.call(null, seq__1419__$1);
          var G__1438 = null;
          var G__1439 = 0;
          var G__1440 = 0;
          seq__1419 = G__1437;
          chunk__1420 = G__1438;
          count__1421 = G__1439;
          i__1422 = G__1440;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__4185__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return !cljs.pprint.tokens_fit_QMARK_.call(null, this$, section);
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__4174__auto__ = miser_width;
  if (cljs.core.truth_(and__4174__auto__)) {
    var and__4174__auto____$1 = maxcol;
    if (cljs.core.truth_(and__4174__auto____$1)) {
      if (cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return false;
      }
    } else {
      return and__4174__auto____$1;
    }
  } else {
    return and__4174__auto__;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(t, _, ___$1, ___$2) {
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__4185__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = !cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection);
    if (or__4185__auto____$1) {
      return or__4185__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__1441_SHARP_) {
    return !(cljs.pprint.nl_t_QMARK_.call(null, p1__1441_SHARP_) && cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__1441_SHARP_), lb));
  }, cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__1442_SHARP_) {
    var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__1442_SHARP_);
    return !(cljs.pprint.nl_t_QMARK_.call(null, p1__1442_SHARP_) && (cljs.core._EQ_.call(null, nl_lb, lb) || cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb)));
  }, cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__1443 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__1443;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_1444 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_1444);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__1445_SHARP_) {
    return !cljs.pprint.nl_t_QMARK_.call(null, p1__1445_SHARP_);
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__1446 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__1446, 0, null);
  var b = cljs.core.nth.call(null, vec__1446, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__1449 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__1449, 0, null);
    var remainder = cljs.core.nth.call(null, vec__1449, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = !cljs.pprint.tokens_fit_QMARK_.call(null, this$, result);
    var result__$1 = long_section ? function() {
      var rem2 = cljs.pprint.write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (!cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer)) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__1452 = new_buffer;
        buffer = G__1452;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (!cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__5733__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5733__auto__)) {
    var buf = temp__5733__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__5735__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5735__auto__)) {
    var tws = temp__5735__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_1457 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_1458 = oldpos_1457 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_1458);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_1457, newpos_1458));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__1453_1459 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__1454_1460 = null;
    var count__1455_1461 = 0;
    var i__1456_1462 = 0;
    while (true) {
      if (i__1456_1462 < count__1455_1461) {
        var l_1463__$1 = cljs.core._nth.call(null, chunk__1454_1460, i__1456_1462);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_1463__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__1464 = seq__1453_1459;
        var G__1465 = chunk__1454_1460;
        var G__1466 = count__1455_1461;
        var G__1467 = i__1456_1462 + 1;
        seq__1453_1459 = G__1464;
        chunk__1454_1460 = G__1465;
        count__1455_1461 = G__1466;
        i__1456_1462 = G__1467;
        continue;
      } else {
        var temp__5735__auto___1468 = cljs.core.seq.call(null, seq__1453_1459);
        if (temp__5735__auto___1468) {
          var seq__1453_1469__$1 = temp__5735__auto___1468;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__1453_1469__$1)) {
            var c__4609__auto___1470 = cljs.core.chunk_first.call(null, seq__1453_1469__$1);
            var G__1471 = cljs.core.chunk_rest.call(null, seq__1453_1469__$1);
            var G__1472 = c__4609__auto___1470;
            var G__1473 = cljs.core.count.call(null, c__4609__auto___1470);
            var G__1474 = 0;
            seq__1453_1459 = G__1471;
            chunk__1454_1460 = G__1472;
            count__1455_1461 = G__1473;
            i__1456_1462 = G__1474;
            continue;
          } else {
            var l_1475__$1 = cljs.core.first.call(null, seq__1453_1469__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_1475__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__1476 = cljs.core.next.call(null, seq__1453_1469__$1);
            var G__1477 = null;
            var G__1478 = 0;
            var G__1479 = 0;
            seq__1453_1459 = G__1476;
            chunk__1454_1460 = G__1477;
            count__1455_1461 = G__1478;
            i__1456_1462 = G__1479;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint1480 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint1480 = function(writer, max_columns, miser_width, lb, fields, meta1481) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta1481 = meta1481;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint1480.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_1482, meta1481__$1) {
      var self__ = this;
      var _1482__$1 = this;
      return new cljs.pprint.t_cljs$pprint1480(self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta1481__$1);
    };
    cljs.pprint.t_cljs$pprint1480.prototype.cljs$core$IMeta$_meta$arity$1 = function(_1482) {
      var self__ = this;
      var _1482__$1 = this;
      return self__.meta1481;
    };
    cljs.pprint.t_cljs$pprint1480.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.fields;
    };
    cljs.pprint.t_cljs$pprint1480.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__1483 = cljs.core._EQ_;
      var expr__1484 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__1483.call(null, String, expr__1484))) {
        var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
        var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
        var white_space = cljs.core.subs.call(null, s0, s.length);
        var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
        if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
          cljs.pprint.write_white_space.call(null, this$__$1);
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
        } else {
          var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          var newpos = oldpos + cljs.core.count.call(null, s0);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
          return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
        }
      } else {
        if (cljs.core.truth_(pred__1483.call(null, Number, expr__1484))) {
          return cljs.pprint.p_write_char.call(null, this$__$1, x);
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__1484)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint1480.prototype.cljs$core$IWriter$_flush$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      cljs.pprint._ppflush.call(null, this$__$1);
      return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
    };
    cljs.pprint.t_cljs$pprint1480.prototype.cljs$pprint$IPrettyFlush$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.pprint.t_cljs$pprint1480.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
        cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
        return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
      } else {
        return cljs.pprint.write_white_space.call(null, this$__$1);
      }
    };
    cljs.pprint.t_cljs$pprint1480.getBasis = function() {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta1481", "meta1481", -470949143, null)], 
      null);
    };
    cljs.pprint.t_cljs$pprint1480.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint1480.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint1480";
    cljs.pprint.t_cljs$pprint1480.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint1480");
    };
    cljs.pprint.__GT_t_cljs$pprint1480 = function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint1480(writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta1481) {
      return new cljs.pprint.t_cljs$pprint1480(writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta1481);
    };
  }
  return new cljs.pprint.t_cljs$pprint1480(writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__5735__auto___1486 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__5735__auto___1486)) {
      var cb_1487 = temp__5735__auto___1486;
      cb_1487.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, lb.start_col, col);
    return cljs.core.reset_BANG_.call(null, lb.indent, col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__5735__auto___1488 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__5735__auto___1488)) {
      var cb_1489 = temp__5735__auto___1488;
      cb_1489.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_1490 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_1491 = oldpos_1490 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_1491);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_1490, newpos_1491));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__1492 = cljs.core._EQ_;
      var expr__1493 = relative_to;
      if (cljs.core.truth_(pred__1492.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__1493))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__1492.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__1493))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__1493)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__1495_SHARP_) {
    var temp__5735__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__1495_SHARP_));
    if (cljs.core.truth_(temp__5735__auto__)) {
      var v = temp__5735__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__1495_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x)) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return false;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__4174__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__4174__auto__)) {
      var and__4174__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__4174__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__4174__auto____$1;
      }
    } else {
      return and__4174__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___1529 = arguments.length;
  var i__4790__auto___1530 = 0;
  while (true) {
    if (i__4790__auto___1530 < len__4789__auto___1529) {
      args__4795__auto__.push(arguments[i__4790__auto___1530]);
      var G__1531 = i__4790__auto___1530 + 1;
      i__4790__auto___1530 = G__1531;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 1 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4796__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR__orig_val__1501 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR__orig_val__1502 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR__orig_val__1503 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR__orig_val__1504 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR__orig_val__1505 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR__orig_val__1506 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR__orig_val__1507 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR__orig_val__1508 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR__orig_val__1509 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR__orig_val__1510 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR__orig_val__1511 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR__orig_val__1512 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  var _STAR_print_base_STAR__temp_val__1513 = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  var _STAR_print_circle_STAR__temp_val__1514 = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  var _STAR_print_length_STAR__temp_val__1515 = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  var _STAR_print_level_STAR__temp_val__1516 = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  var _STAR_print_lines_STAR__temp_val__1517 = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  var _STAR_print_miser_width_STAR__temp_val__1518 = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  var _STAR_print_pprint_dispatch_STAR__temp_val__1519 = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  var _STAR_print_pretty_STAR__temp_val__1520 = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  var _STAR_print_radix_STAR__temp_val__1521 = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  var _STAR_print_readably_STAR__temp_val__1522 = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  var _STAR_print_right_margin_STAR__temp_val__1523 = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  var _STAR_print_suppress_namespaces_STAR__temp_val__1524 = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR__temp_val__1513;
  cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR__temp_val__1514;
  cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__temp_val__1515;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__1516;
  cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR__temp_val__1517;
  cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR__temp_val__1518;
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR__temp_val__1519;
  cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__temp_val__1520;
  cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR__temp_val__1521;
  cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__temp_val__1522;
  cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR__temp_val__1523;
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR__temp_val__1524;
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__1127__auto___1532 = base_writer;
        var new_writer__1128__auto___1533 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__1127__auto___1532));
        var _STAR_out_STAR__orig_val__1525_1534 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__1526_1535 = new_writer__1128__auto___1533 ? cljs.pprint.make_pretty_writer.call(null, base_writer__1127__auto___1532, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__1127__auto___1532;
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__1526_1535;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__1525_1534;
        }
      } else {
        var _STAR_out_STAR__orig_val__1527_1536 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__1528_1537 = base_writer;
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__1528_1537;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__1527_1536;
        }
      }
      if (optval === true) {
        cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
      } else {
      }
      if (optval == null) {
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR__orig_val__1512;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR__orig_val__1511;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__orig_val__1510;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR__orig_val__1509;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__orig_val__1508;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR__orig_val__1507;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR__orig_val__1506;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR__orig_val__1505;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__1504;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__orig_val__1503;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR__orig_val__1502;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR__orig_val__1501;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq1499) {
  var G__1500 = cljs.core.first.call(null, seq1499);
  var seq1499__$1 = cljs.core.next.call(null, seq1499);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1500, seq1499__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var G__1539 = arguments.length;
  switch(G__1539) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR__orig_val__1540 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__1541 = new cljs.core.StringBufferWriter(sb);
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__1541;
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__1540;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__1127__auto__ = writer;
  var new_writer__1128__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__1127__auto__));
  var _STAR_out_STAR__orig_val__1542 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__1543 = new_writer__1128__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__1127__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__1127__auto__;
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__1543;
  try {
    var _STAR_print_pretty_STAR__orig_val__1544_1547 = cljs.pprint._STAR_print_pretty_STAR_;
    var _STAR_print_pretty_STAR__temp_val__1545_1548 = true;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__temp_val__1545_1548;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__orig_val__1544_1547;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__1542;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error(["Bad argument: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arg), ". It must be one of ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__4174__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__4174__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__4174__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___1552 = arguments.length;
  var i__4790__auto___1553 = 0;
  while (true) {
    if (i__4790__auto___1553 < len__4789__auto___1552) {
      args__4795__auto__.push(arguments[i__4790__auto___1553]);
      var G__1554 = i__4790__auto___1553 + 1;
      i__4790__auto___1553 = G__1554;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 2 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4796__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq1549) {
  var G__1550 = cljs.core.first.call(null, seq1549);
  var seq1549__$1 = cljs.core.next.call(null, seq1549);
  var G__1551 = cljs.core.first.call(null, seq1549__$1);
  var seq1549__$2 = cljs.core.next.call(null, seq1549__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1550, G__1551, seq1549__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(message), "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_format_str_STAR_), "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), "^", "\n"].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k1556, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__1560 = k1556;
  var G__1560__$1 = G__1560 instanceof cljs.core.Keyword ? G__1560.fqn : null;
  switch(G__1560__$1) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k1556, else__4442__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__1561) {
    var vec__1562 = p__1561;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__1562, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__1562, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__1555) {
  var self__ = this;
  var G__1555__$1 = this;
  return new cljs.core.RecordIter(0, G__1555__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -402038447 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this1557, other1558) {
  var self__ = this;
  var this1557__$1 = this;
  return !(other1558 == null) && this1557__$1.constructor === other1558.constructor && cljs.core._EQ_.call(null, this1557__$1.seq, other1558.seq) && cljs.core._EQ_.call(null, this1557__$1.rest, other1558.rest) && cljs.core._EQ_.call(null, this1557__$1.pos, other1558.pos) && cljs.core._EQ_.call(null, this1557__$1.__extmap, other1558.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__1555) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__1565 = cljs.core.keyword_identical_QMARK_;
  var expr__1566 = k__4447__auto__;
  if (cljs.core.truth_(pred__1565.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__1566))) {
    return new cljs.pprint.arg_navigator(G__1555, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__1565.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__1566))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__1555, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__1565.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__1566))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__1555, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__1555), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos, null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__1555) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__1555, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/arg-navigator", null, 1, null);
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__1559) {
  var extmap__4478__auto__ = function() {
    var G__1568 = cljs.core.dissoc.call(null, G__1559, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220));
    if (cljs.core.record_QMARK_.call(null, G__1559)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__1568);
    } else {
      return G__1568;
    }
  }();
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__1559), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__1559), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__1559), null, cljs.core.not_empty.call(null, extmap__4478__auto__), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__1570 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__1570, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1570, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k1574, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__1578 = k1574;
  var G__1578__$1 = G__1578 instanceof cljs.core.Keyword ? G__1578.fqn : null;
  switch(G__1578__$1) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k1574, else__4442__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__1579) {
    var vec__1580 = p__1579;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__1580, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__1580, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__1573) {
  var self__ = this;
  var G__1573__$1 = this;
  return new cljs.core.RecordIter(0, G__1573__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return -829256337 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this1575, other1576) {
  var self__ = this;
  var this1575__$1 = this;
  return !(other1576 == null) && this1575__$1.constructor === other1576.constructor && cljs.core._EQ_.call(null, this1575__$1.func, other1576.func) && cljs.core._EQ_.call(null, this1575__$1.def, other1576.def) && cljs.core._EQ_.call(null, this1575__$1.params, other1576.params) && cljs.core._EQ_.call(null, this1575__$1.offset, other1576.offset) && cljs.core._EQ_.call(null, this1575__$1.__extmap, other1576.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__1573) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__1583 = cljs.core.keyword_identical_QMARK_;
  var expr__1584 = k__4447__auto__;
  if (cljs.core.truth_(pred__1583.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__1584))) {
    return new cljs.pprint.compiled_directive(G__1573, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__1583.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__1584))) {
      return new cljs.pprint.compiled_directive(self__.func, G__1573, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__1583.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__1584))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__1573, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__1583.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__1584))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__1573, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__1573), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "func", "func", -238706040), self__.func, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "params", "params", 710516235), self__.params, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "offset", 
  "offset", 296498311), self__.offset, null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__1573) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__1573, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "cljs.pprint/compiled-directive", null, 1, null);
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__1577) {
  var extmap__4478__auto__ = function() {
    var G__1586 = cljs.core.dissoc.call(null, G__1577, new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311));
    if (cljs.core.record_QMARK_.call(null, G__1577)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__1586);
    } else {
      return G__1586;
    }
  }();
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__1577), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__1577), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__1577), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__1577), null, cljs.core.not_empty.call(null, extmap__4478__auto__), 
  null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__1588, navigator) {
  var vec__1589 = p__1588;
  var param = cljs.core.nth.call(null, vec__1589, 0, null);
  var vec__1592 = cljs.core.nth.call(null, vec__1589, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__1592, 0, null);
  var offset = cljs.core.nth.call(null, vec__1592, 1, null);
  var vec__1595 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__1595, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__1595, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__1598 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__1598, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__1598, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null].join("");
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__4185__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          return ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_print_base_STAR_), "r"].join("");
        }
      }() : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__1601 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__1601, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__1601, 1, null);
  var base_output = function() {
    var or__4185__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars), cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output), cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__1604_SHARP_) {
    if (p1__1604_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__1604_SHARP_, base), cljs.core.quot.call(null, p1__1604_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__1605_SHARP_) {
      if (p1__1605_SHARP_ < 10) {
        return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__1605_SHARP_);
      } else {
        return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__1605_SHARP_ - 10));
      }
    }, cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__1607 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__1607, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__1607, 1, null);
  if (cljs.pprint.integral_QMARK_.call(null, arg)) {
    var neg_1610 = arg < 0;
    var pos_arg_1611 = neg_1610 ? -arg : arg;
    var raw_str_1612 = cljs.pprint.opt_base_str.call(null, base, pos_arg_1611);
    var group_str_1613 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(p1__1606_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.str, p1__1606_SHARP_);
      }, cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_1612));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_1612;
    var signed_str_1614 = neg_1610 ? ["-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_1613)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? ["+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_1613)].join("") : group_str_1613;
    var padded_str_1615 = signed_str_1614.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_1614.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(signed_str_1614)].join("") : 
    signed_str_1614;
    cljs.pprint.print.call(null, padded_str_1615);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [hundreds > 0 ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), " hundred"].join("") : null, hundreds > 0 && tens > 0 ? " " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), ten_digit > 0 && unit_digit > 0 ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), !cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$), !cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [" ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null].join("");
    } else {
      var G__1616 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__1617 = pos - 1;
      var G__1618 = cljs.core.first.call(null, remainder);
      var G__1619 = cljs.core.next.call(null, remainder);
      acc = G__1616;
      pos = G__1617;
      this$ = G__1618;
      remainder = G__1619;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__1620 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__1620, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1620, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_1623 = arg < 0 ? -arg : arg;
    var parts_1624 = cljs.pprint.remainders.call(null, 1000, abs_arg_1623);
    if (cljs.core.count.call(null, parts_1624) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_1625 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_1624);
      var full_str_1626 = cljs.pprint.add_english_scales.call(null, parts_strs_1625, 0);
      cljs.pprint.print.call(null, [arg < 0 ? "minus " : null, full_str_1626].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [hundreds > 0 ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), " hundred"].join("") : null, hundreds > 0 && tens > 0 ? " " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), ten_digit > 0 && unit_digit > 0 ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__1627 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__1627, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1627, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_1630 = arg < 0 ? -arg : arg;
    var parts_1631 = cljs.pprint.remainders.call(null, 1000, abs_arg_1630);
    if (cljs.core.count.call(null, parts_1631) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_1632 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_1631));
      var head_str_1633 = cljs.pprint.add_english_scales.call(null, parts_strs_1632, 1);
      var tail_str_1634 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_1631));
      cljs.pprint.print.call(null, [arg < 0 ? "minus " : null, !cljs.core.empty_QMARK_.call(null, head_str_1633) && !cljs.core.empty_QMARK_.call(null, tail_str_1634) ? [head_str_1633, ", ", tail_str_1634].join("") : !cljs.core.empty_QMARK_.call(null, head_str_1633) ? [head_str_1633, "th"].join("") : tail_str_1634].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_1635 = cljs.core.rem.call(null, arg, 100);
      var not_teens_1636 = 11 < low_two_digits_1635 || 19 > low_two_digits_1635;
      var low_digit_1637 = cljs.core.rem.call(null, low_two_digits_1635, 10);
      cljs.pprint.print.call(null, low_digit_1637 === 1 && not_teens_1636 ? "st" : low_digit_1637 === 2 && not_teens_1636 ? "nd" : low_digit_1637 === 3 && not_teens_1636 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__1638 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__1638, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1638, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4000) {
    var digits_1641 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_1642 = cljs.core.PersistentVector.EMPTY;
    var pos_1643 = cljs.core.count.call(null, digits_1641) - 1;
    var digits_1644__$1 = digits_1641;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_1644__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_1642));
      } else {
        var digit_1645 = cljs.core.first.call(null, digits_1644__$1);
        var G__1646 = cljs.core._EQ_.call(null, 0, digit_1645) ? acc_1642 : cljs.core.conj.call(null, acc_1642, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_1643), digit_1645 - 1));
        var G__1647 = pos_1643 - 1;
        var G__1648 = cljs.core.next.call(null, digits_1644__$1);
        acc_1642 = G__1646;
        pos_1643 = G__1647;
        digits_1644__$1 = G__1648;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__1649 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__1649, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1649, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? ["Control-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__1652 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__1652, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1652, 1, null);
  var pred__1655_1658 = cljs.core._EQ_;
  var expr__1656_1659 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__1655_1658.call(null, "o", expr__1656_1659))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__1655_1658.call(null, "u", expr__1656_1659))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__1655_1658.call(null, null, expr__1656_1659))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__1656_1659)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__1660 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__1660, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1660, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.pprint.abort_QMARK_.call(null, context)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__1663 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__1663, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__1663, 1, null);
      var vec__1666 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__1666, 0, null);
      var offsets = cljs.core.nth.call(null, vec__1666, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(f));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.length - 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, s, 0, dotloc), cljs.core.subs.call(null, s, dotloc + 1)].join(""), cljs.core.str.cljs$core$IFn$_invoke$arity$1(dotloc - 1)], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, s, 0, 1), cljs.core.subs.call(null, s, 2, exploc)].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__1669 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__1669, 0, null);
  var e = cljs.core.nth.call(null, vec__1669, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__1672 = i - 1;
        i = G__1672;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = d;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__4273__auto__ = 2;
      var y__4274__auto__ = w;
      return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__4273__auto__ = e + 1;
      var y__4274__auto__ = w__$1 - 1;
      return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
    }() : w__$1 + e;
    var vec__1673 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__1673, 0, null);
    var e1 = cljs.core.nth.call(null, vec__1673, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__1673, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__1673, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > result.length;
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__1676 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__1676, 0, null);
  var e1 = cljs.core.nth.call(null, vec__1676, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(m1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.subs.call(null, m, 0, loc), ".", cljs.core.subs.call(null, m, loc)].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join("");
  } else {
    return [cljs.core.subs.call(null, m, 0, k), ".", cljs.core.subs.call(null, m, k)].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__1679 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__1679, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1679, 1, null);
  var vec__1682 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__1682, 0, null);
  var abs = cljs.core.nth.call(null, vec__1682, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__1685 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__1685, 0, null);
  var exp = cljs.core.nth.call(null, vec__1685, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__1688 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__1688, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__1688, 1, null);
  var expanded = cljs.core.nth.call(null, vec__1688, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__4174__auto__ = w;
    if (cljs.core.truth_(and__4174__auto__)) {
      var and__4174__auto____$1 = d;
      if (cljs.core.truth_(and__4174__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && fixed_repr.length > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__4174__auto____$1;
      }
    } else {
      return and__4174__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_1691 = fixed_repr__$1.length;
    var signed_len_1692 = cljs.core.truth_(add_sign) ? len_1691 + 1 : len_1691;
    var prepend_zero_1693__$1 = prepend_zero && !(signed_len_1692 >= w);
    var append_zero_1694__$1 = append_zero && !(signed_len_1692 >= w);
    var full_len_1695 = prepend_zero_1693__$1 || append_zero_1694__$1 ? signed_len_1692 + 1 : signed_len_1692;
    if (cljs.core.truth_(full_len_1695 > w ? (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params) : false)) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_1695, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(add_sign) ? sign : null), prepend_zero_1693__$1 ? "0" : null, fixed_repr__$1, append_zero_1694__$1 ? "0" : null].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(add_sign) ? sign : null), prepend_zero ? "0" : null, fixed_repr__$1, append_zero ? "0" : null].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__1696 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__1696, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1696, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__1702_1712 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__1703_1713 = G__1702_1712;
  var mantissa_1714 = cljs.core.nth.call(null, vec__1703_1713, 0, null);
  var exp_1715 = cljs.core.nth.call(null, vec__1703_1713, 1, null);
  var G__1702_1716__$1 = G__1702_1712;
  while (true) {
    var vec__1706_1717 = G__1702_1716__$1;
    var mantissa_1718__$1 = cljs.core.nth.call(null, vec__1706_1717, 0, null);
    var exp_1719__$1 = cljs.core.nth.call(null, vec__1706_1717, 1, null);
    var w_1720 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_1721 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_1722 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_1723 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_1724 = function() {
      var or__4185__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_1725 = function() {
      var or__4185__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_1726 = k_1723 <= 0;
    var scaled_exp_1727 = exp_1719__$1 - (k_1723 - 1);
    var scaled_exp_str_1728 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.abs(scaled_exp_1727));
    var scaled_exp_str_1729__$1 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(expchar_1724), scaled_exp_1727 < 0 ? "-" : "+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(e_1722) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_1722 - scaled_exp_str_1728.length, "0")) : null), scaled_exp_str_1728].join("");
    var exp_width_1730 = scaled_exp_str_1729__$1.length;
    var base_mantissa_width_1731 = cljs.core.count.call(null, mantissa_1718__$1);
    var scaled_mantissa_1732 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_1723, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(mantissa_1718__$1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(d_1721) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_1721 - (base_mantissa_width_1731 - 1) - (k_1723 < 0 ? -k_1723 : 0), "0")) : null)].join("");
    var w_mantissa_1733 = cljs.core.truth_(w_1720) ? w_1720 - exp_width_1730 : null;
    var vec__1709_1734 = cljs.pprint.round_str.call(null, scaled_mantissa_1732, 0, cljs.core._EQ_.call(null, k_1723, 0) ? d_1721 - 1 : k_1723 > 0 ? d_1721 : k_1723 < 0 ? d_1721 - 1 : null, cljs.core.truth_(w_mantissa_1733) ? w_mantissa_1733 - (cljs.core.truth_(add_sign_1725) ? 1 : 0) : null);
    var rounded_mantissa_1735 = cljs.core.nth.call(null, vec__1709_1734, 0, null);
    var __1736 = cljs.core.nth.call(null, vec__1709_1734, 1, null);
    var incr_exp_1737 = cljs.core.nth.call(null, vec__1709_1734, 2, null);
    var full_mantissa_1738 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_1735, k_1723);
    var append_zero_1739 = cljs.core._EQ_.call(null, k_1723, cljs.core.count.call(null, rounded_mantissa_1735)) && d_1721 == null;
    if (cljs.core.not.call(null, incr_exp_1737)) {
      if (cljs.core.truth_(w_1720)) {
        var len_1740 = full_mantissa_1738.length + exp_width_1730;
        var signed_len_1741 = cljs.core.truth_(add_sign_1725) ? len_1740 + 1 : len_1740;
        var prepend_zero_1742__$1 = prepend_zero_1726 && !cljs.core._EQ_.call(null, signed_len_1741, w_1720);
        var full_len_1743 = prepend_zero_1742__$1 ? signed_len_1741 + 1 : signed_len_1741;
        var append_zero_1744__$1 = append_zero_1739 && full_len_1743 < w_1720;
        if (cljs.core.truth_(function() {
          var and__4174__auto__ = function() {
            var or__4185__auto__ = full_len_1743 > w_1720;
            if (or__4185__auto__) {
              return or__4185__auto__;
            } else {
              var and__4174__auto__ = e_1722;
              if (cljs.core.truth_(and__4174__auto__)) {
                return exp_width_1730 - 2 > e_1722;
              } else {
                return and__4174__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__4174__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__4174__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_1720, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_1720 - full_len_1743 - (append_zero_1744__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.truth_(add_sign_1725) ? arg__$1 < 0 ? "-" : "+" : null, prepend_zero_1742__$1 ? "0" : null, full_mantissa_1738, append_zero_1744__$1 ? "0" : null, scaled_exp_str_1729__$1].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.truth_(add_sign_1725) ? arg__$1 < 0 ? "-" : "+" : null, prepend_zero_1726 ? "0" : null, full_mantissa_1738, append_zero_1739 ? "0" : null, scaled_exp_str_1729__$1].join(""));
      }
    } else {
      var G__1745 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_1735, exp_1719__$1 + 1], null);
      G__1702_1716__$1 = G__1745;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__1746 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__1746, 0, null);
  var _ = cljs.core.nth.call(null, vec__1746, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__1749 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__1749, 0, null);
  var exp = cljs.core.nth.call(null, vec__1749, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0.0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__4273__auto__ = cljs.core.count.call(null, mantissa);
    var y__4274__auto__ = function() {
      var x__4276__auto__ = n;
      var y__4277__auto__ = 7;
      return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
    }();
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__1752 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__1752, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1752, 1, null);
  var vec__1755 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__1755, 0, null);
  var exp = cljs.core.nth.call(null, vec__1755, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__1758 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__1758, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__1758, 1, null);
  var expanded = cljs.core.nth.call(null, vec__1758, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), fixed_repr].join("");
  var full_len = full_repr.length + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.truth_(function() {
    var and__4174__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4174__auto__)) {
      return add_sign;
    } else {
      return and__4174__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? add_sign : false) ? arg < 0 ? "-" : "+" : null, full_repr].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__1761 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__1761, 0, null);
  var navigator = cljs.core.nth.call(null, vec__1761, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__1764 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__1764, 0, null);
  var navigator = cljs.core.nth.call(null, vec__1764, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__1767 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__1767, 0, null);
  var navigator = cljs.core.nth.call(null, vec__1767, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__1770 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__1770, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1770, 1, null);
  var vec__1773 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__1773, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__1773, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        var and__4174__auto__ = max_count;
        if (cljs.core.truth_(and__4174__auto__)) {
          return count >= max_count;
        } else {
          return and__4174__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__1776 = count + 1;
        var G__1777 = iter_result;
        var G__1778 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__1776;
        args__$1 = G__1777;
        last_pos = G__1778;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__1779 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__1779, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1779, 1, null);
  var vec__1782 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__1782, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__1782, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        var and__4174__auto__ = max_count;
        if (cljs.core.truth_(and__4174__auto__)) {
          return count >= max_count;
        } else {
          return and__4174__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__1785 = count + 1;
        var G__1786 = cljs.core.next.call(null, arg_list__$1);
        count = G__1785;
        arg_list__$1 = G__1786;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__1787 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__1787, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1787, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        var and__4174__auto__ = max_count;
        if (cljs.core.truth_(and__4174__auto__)) {
          return count >= max_count;
        } else {
          return and__4174__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__1790 = count + 1;
        var G__1791 = iter_result;
        var G__1792 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__1790;
        navigator__$2 = G__1791;
        last_pos = G__1792;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__1793 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__1793, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1793, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4185__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4185__auto__) {
        return or__4185__auto__;
      } else {
        var and__4174__auto__ = max_count;
        if (cljs.core.truth_(and__4174__auto__)) {
          return count >= max_count;
        } else {
          return and__4174__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__1799 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__1799, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__1799, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__1802 = count + 1;
        var G__1803 = navigator__$3;
        count = G__1802;
        navigator__$2 = G__1803;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__1809 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR__orig_val__1812 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__1813 = new cljs.core.StringBufferWriter(sb);
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__1813;
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__1812;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__1809, 0, null);
      var result_str = cljs.core.nth.call(null, vec__1809, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__1814 = cljs.core.next.call(null, clauses__$1);
        var G__1815 = cljs.core.conj.call(null, acc, result_str);
        var G__1816 = iter_result;
        clauses__$1 = G__1814;
        acc = G__1815;
        navigator__$1 = G__1816;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__1817 = function() {
    var temp__5735__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var else$ = temp__5735__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__1820 = cljs.core.nth.call(null, vec__1817, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__1820, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__1817, 1, null);
  var navigator__$1 = function() {
    var or__4185__auto__ = new_navigator;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__1823 = function() {
    var temp__5735__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var p = temp__5735__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__1823, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__1823, 1, null);
  var navigator__$2 = function() {
    var or__4185__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__4185__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__4185__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__1826 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__1826, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__1826, 1, null);
  var slots = function() {
    var x__4273__auto__ = 1;
    var y__4274__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__4273__auto__ = minpad;
    var y__4274__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__4174__auto__ = eol_str;
    if (cljs.core.truth_(and__4174__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__4174__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_1829__$1 = slots;
  var extra_pad_1830__$1 = extra_pad;
  var strs_1831__$1 = strs;
  var pad_only_1832 = function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_1831__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_1831__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.not.call(null, pad_only_1832) ? cljs.core.first.call(null, strs_1831__$1) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(function() {
        var or__4185__auto__ = pad_only_1832;
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          var or__4185__auto____$1 = cljs.core.next.call(null, strs_1831__$1);
          if (or__4185__auto____$1) {
            return or__4185__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(extra_pad_1830__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__1833 = slots_1829__$1 - 1;
      var G__1834 = extra_pad_1830__$1 - 1;
      var G__1835 = cljs.core.truth_(pad_only_1832) ? strs_1831__$1 : cljs.core.next.call(null, strs_1831__$1);
      var G__1836 = false;
      slots_1829__$1 = G__1833;
      extra_pad_1830__$1 = G__1834;
      strs_1831__$1 = G__1835;
      pad_only_1832 = G__1836;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint1837 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint1837 = function(writer, meta1838) {
      this.writer = writer;
      this.meta1838 = meta1838;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint1837.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_1839, meta1838__$1) {
      var self__ = this;
      var _1839__$1 = this;
      return new cljs.pprint.t_cljs$pprint1837(self__.writer, meta1838__$1);
    };
    cljs.pprint.t_cljs$pprint1837.prototype.cljs$core$IMeta$_meta$arity$1 = function(_1839) {
      var self__ = this;
      var _1839__$1 = this;
      return self__.meta1838;
    };
    cljs.pprint.t_cljs$pprint1837.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint1837.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__1840 = cljs.core._EQ_;
      var expr__1841 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__1840.call(null, String, expr__1841))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__1840.call(null, Number, expr__1841))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__1841)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint1837.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta1838", "meta1838", -1768485790, null)], null);
    };
    cljs.pprint.t_cljs$pprint1837.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint1837.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint1837";
    cljs.pprint.t_cljs$pprint1837.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint1837");
    };
    cljs.pprint.__GT_t_cljs$pprint1837 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint1837(writer__$1, meta1838) {
      return new cljs.pprint.t_cljs$pprint1837(writer__$1, meta1838);
    };
  }
  return new cljs.pprint.t_cljs$pprint1837(writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint1843 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint1843 = function(writer, meta1844) {
      this.writer = writer;
      this.meta1844 = meta1844;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint1843.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_1845, meta1844__$1) {
      var self__ = this;
      var _1845__$1 = this;
      return new cljs.pprint.t_cljs$pprint1843(self__.writer, meta1844__$1);
    };
    cljs.pprint.t_cljs$pprint1843.prototype.cljs$core$IMeta$_meta$arity$1 = function(_1845) {
      var self__ = this;
      var _1845__$1 = this;
      return self__.meta1844;
    };
    cljs.pprint.t_cljs$pprint1843.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint1843.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__1846 = cljs.core._EQ_;
      var expr__1847 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__1846.call(null, String, expr__1847))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__1846.call(null, Number, expr__1847))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__1847)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint1843.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta1844", "meta1844", -2104978488, null)], null);
    };
    cljs.pprint.t_cljs$pprint1843.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint1843.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint1843";
    cljs.pprint.t_cljs$pprint1843.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint1843");
    };
    cljs.pprint.__GT_t_cljs$pprint1843 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint1843(writer__$1, meta1844) {
      return new cljs.pprint.t_cljs$pprint1843(writer__$1, meta1844);
    };
  }
  return new cljs.pprint.t_cljs$pprint1843(writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__4174__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__4174__auto__)) {
      var and__4174__auto____$1 = f;
      if (cljs.core.truth_(and__4174__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__4174__auto____$1;
      }
    } else {
      return and__4174__auto__;
    }
  }()) ? [clojure.string.upper_case.call(null, f), cljs.core.subs.call(null, s, 1)].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(s__$2) {
    if (cljs.core.empty_QMARK_.call(null, s__$2)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    } else {
      var m = RegExp("\\W\\w", "g").exec(s__$2);
      var offset = function() {
        var and__4174__auto__ = m;
        if (cljs.core.truth_(and__4174__auto__)) {
          return m.index + 1;
        } else {
          return and__4174__auto__;
        }
      }();
      if (cljs.core.truth_(offset)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, s__$2, 0, offset), clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
      }
    }
  }, s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint1849 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint1849 = function(writer, last_was_whitespace_QMARK_, meta1850) {
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta1850 = meta1850;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint1849.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_1851, meta1850__$1) {
      var self__ = this;
      var _1851__$1 = this;
      return new cljs.pprint.t_cljs$pprint1849(self__.writer, self__.last_was_whitespace_QMARK_, meta1850__$1);
    };
    cljs.pprint.t_cljs$pprint1849.prototype.cljs$core$IMeta$_meta$arity$1 = function(_1851) {
      var self__ = this;
      var _1851__$1 = this;
      return self__.meta1850;
    };
    cljs.pprint.t_cljs$pprint1849.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint1849.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__1852 = cljs.core._EQ_;
      var expr__1853 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__1852.call(null, String, expr__1853))) {
        var s = x;
        cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
        if (s.length > 0) {
          return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
        } else {
          return null;
        }
      } else {
        if (cljs.core.truth_(pred__1852.call(null, Number, expr__1853))) {
          var c = cljs.core.char$.call(null, x);
          var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
          cljs.core._write.call(null, self__.writer, mod_c);
          return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__1853)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint1849.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta1850", "meta1850", -581036181, null)], null);
    };
    cljs.pprint.t_cljs$pprint1849.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint1849.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint1849";
    cljs.pprint.t_cljs$pprint1849.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint1849");
    };
    cljs.pprint.__GT_t_cljs$pprint1849 = function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint1849(writer__$1, last_was_whitespace_QMARK___$1, meta1850) {
      return new cljs.pprint.t_cljs$pprint1849(writer__$1, last_was_whitespace_QMARK___$1, meta1850);
    };
  }
  return new cljs.pprint.t_cljs$pprint1849(writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint1855 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint1855 = function(writer, capped, meta1856) {
      this.writer = writer;
      this.capped = capped;
      this.meta1856 = meta1856;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint1855.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_1857, meta1856__$1) {
      var self__ = this;
      var _1857__$1 = this;
      return new cljs.pprint.t_cljs$pprint1855(self__.writer, self__.capped, meta1856__$1);
    };
    cljs.pprint.t_cljs$pprint1855.prototype.cljs$core$IMeta$_meta$arity$1 = function(_1857) {
      var self__ = this;
      var _1857__$1 = this;
      return self__.meta1856;
    };
    cljs.pprint.t_cljs$pprint1855.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint1855.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__1858 = cljs.core._EQ_;
      var expr__1859 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__1858.call(null, String, expr__1859))) {
        var s = clojure.string.lower_case.call(null, x);
        if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
          var m = RegExp("\\S", "g").exec(s);
          var offset = function() {
            var and__4174__auto__ = m;
            if (cljs.core.truth_(and__4174__auto__)) {
              return m.index;
            } else {
              return and__4174__auto__;
            }
          }();
          if (cljs.core.truth_(offset)) {
            cljs.core._write.call(null, self__.writer, [cljs.core.subs.call(null, s, 0, offset), clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset)), clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1))].join(""));
            return cljs.core.reset_BANG_.call(null, self__.capped, true);
          } else {
            return cljs.core._write.call(null, self__.writer, s);
          }
        } else {
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
        }
      } else {
        if (cljs.core.truth_(pred__1858.call(null, Number, expr__1859))) {
          var c = cljs.core.char$.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped)) && goog.string.isUnicodeChar(c)) {
            cljs.core.reset_BANG_.call(null, self__.capped, true);
            return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
          }
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__1859)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint1855.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta1856", "meta1856", -1734207206, null)], null);
    };
    cljs.pprint.t_cljs$pprint1855.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint1855.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint1855";
    cljs.pprint.t_cljs$pprint1855.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
      return cljs.core._write.call(null, writer__4429__auto__, "cljs.pprint/t_cljs$pprint1855");
    };
    cljs.pprint.__GT_t_cljs$pprint1855 = function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint1855(writer__$1, capped__$1, meta1856) {
      return new cljs.pprint.t_cljs$pprint1855(writer__$1, capped__$1, meta1856);
    };
  }
  return new cljs.pprint.t_cljs$pprint1855(writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR__orig_val__1861 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__1862 = make_writer.call(null, cljs.core._STAR_out_STAR_);
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__1862;
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__1861;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_1864 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_1865 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_1866 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_1867 = current_1866 < colnum_1864 ? colnum_1864 - current_1866 : cljs.core._EQ_.call(null, colinc_1865, 0) ? 0 : colinc_1865 - cljs.core.rem.call(null, current_1866 - colnum_1864, colinc_1865);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_1867, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_1868 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_1869 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_1870 = colrel_1868 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_1871 = colinc_1869 > 0 ? cljs.core.rem.call(null, start_col_1870, colinc_1869) : 0;
  var space_count_1872 = colrel_1868 + (cljs.core._EQ_.call(null, 0, offset_1871) ? 0 : colinc_1869 - offset_1871);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_1872, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__1873 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__1873, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__1873, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__1876_1880 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__1877_1881 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__1878_1882 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__1879_1883 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__1878_1882;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__1879_1883;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__1877_1881;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__1876_1880;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__1884_SHARP_, p2__1885_SHARP_, p3__1886_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__1884_SHARP_, p2__1885_SHARP_, p3__1886_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__1887_SHARP_, p2__1888_SHARP_, p3__1889_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__1887_SHARP_, p2__1888_SHARP_, p3__1889_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__1890_SHARP_, p2__1891_SHARP_, p3__1892_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__1890_SHARP_, p2__1891_SHARP_, p3__1892_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__1893_SHARP_, p2__1894_SHARP_, p3__1895_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__1893_SHARP_, p2__1894_SHARP_, p3__1895_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__1896_SHARP_, p2__1897_SHARP_, p3__1898_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__1896_SHARP_, p2__1897_SHARP_, p3__1898_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__1899_SHARP_, p2__1900_SHARP_, p3__1901_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__1899_SHARP_, p2__1900_SHARP_, p3__1901_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__1902_SHARP_, p2__1903_SHARP_, p3__1904_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__1902_SHARP_), p1__1902_SHARP_, p2__1903_SHARP_, p3__1904_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__4174__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__4174__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4174__auto__;
      }
    }())) {
      return function(p1__1905_SHARP_, p2__1906_SHARP_, p3__1907_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__1905_SHARP_, p2__1906_SHARP_, p3__1907_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__1908_SHARP_, p2__1909_SHARP_, p3__1910_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__1908_SHARP_, p2__1909_SHARP_, p3__1910_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__1911_SHARP_, p2__1912_SHARP_, p3__1913_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__1911_SHARP_, p2__1912_SHARP_, p3__1913_SHARP_);
          };
        } else {
          return function(p1__1914_SHARP_, p2__1915_SHARP_, p3__1916_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__1914_SHARP_, p2__1915_SHARP_, p3__1916_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__1926 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__1926, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__1926, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__4666__auto___1944 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_1945 = 0;
    while (true) {
      if (i_1945 < n__4666__auto___1944) {
        cljs.pprint.prn.call(null);
        var G__1946 = i_1945 + 1;
        i_1945 = G__1946;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_1947 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_1947 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__4666__auto___1948 = cnt_1947 - 1;
    var i_1949 = 0;
    while (true) {
      if (i_1949 < n__4666__auto___1948) {
        cljs.pprint.prn.call(null);
        var G__1950 = i_1949 + 1;
        i_1949 = G__1950;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__4666__auto___1951 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_1952 = 0;
    while (true) {
      if (i_1952 < n__4666__auto___1951) {
        cljs.pprint.print.call(null, "\f");
        var G__1953 = i_1952 + 1;
        i_1952 = G__1953;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__1917_SHARP_, p2__1918_SHARP_, p3__1919_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__1917_SHARP_, p2__1918_SHARP_, p3__1919_SHARP_);
    };
  } else {
    return function(p1__1920_SHARP_, p2__1921_SHARP_, p3__1922_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__1920_SHARP_, p2__1921_SHARP_, p3__1922_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__1929 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__1929, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__1929, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__1932 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__1932, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__1932, 1, null);
      var vec__1935 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__1935, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__1935, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__4174__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4174__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4174__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(p1__1923_SHARP_, p2__1924_SHARP_, p3__1925_SHARP_) {
    return cljs.pprint.modify_case.call(null, mod_case_writer, p1__1923_SHARP_, p2__1924_SHARP_, p3__1925_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__4174__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4174__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4174__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__4174__auto__ = arg1;
      if (cljs.core.truth_(and__4174__auto__)) {
        var and__4174__auto____$1 = arg2;
        if (cljs.core.truth_(and__4174__auto____$1)) {
          return arg3;
        } else {
          return and__4174__auto____$1;
        }
      } else {
        return and__4174__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__4174__auto__ = arg1;
        if (cljs.core.truth_(and__4174__auto__)) {
          return arg2;
        } else {
          return and__4174__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(params__$1, navigator, offsets) {
      var vec__1938 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__1938, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__1938, 1, null);
      if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__1941 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__1941, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__1941, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__1954) {
  var vec__1955 = p__1954;
  var s = cljs.core.nth.call(null, vec__1955, 0, null);
  var offset = cljs.core.nth.call(null, vec__1955, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__1955, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__1958) {
  var vec__1959 = p__1958;
  var p = cljs.core.nth.call(null, vec__1959, 0, null);
  var offset = cljs.core.nth.call(null, vec__1959, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__1962) {
    var vec__1963 = p__1962;
    var s__$1 = cljs.core.nth.call(null, vec__1963, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__1963, 1, null);
    var flags = cljs.core.nth.call(null, vec__1963, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, ['Flag "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, s__$1)), '" appears more than once in a directive'].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed)) ? (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags) : false)) {
    cljs.pprint.format_error.call(null, ['"@" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed)) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags) : false)) {
    cljs.pprint.format_error.call(null, ['":" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed)) ? function() {
    var and__4174__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    if (cljs.core.truth_(and__4174__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4174__auto__;
    }
  }() : false)) {
    return cljs.pprint.format_error.call(null, ['Cannot combine "@" and ":" flags for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), function() {
      var x__4276__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__4277__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__1966_SHARP_, p2__1967_SHARP_) {
    var val = cljs.core.first.call(null, p1__1966_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__1967_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, ["Parameter ", cljs.core.name.call(null, cljs.core.first.call(null, p2__1967_SHARP_)), ' has bad type in directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '": ', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__1966_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__4582__auto__ = function cljs$pprint$map_params_$_iter__1971(s__1972) {
      return new cljs.core.LazySeq(null, function() {
        var s__1972__$1 = s__1972;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__1972__$1);
          if (temp__5735__auto__) {
            var s__1972__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__1972__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__1972__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__1974 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__1973 = 0;
                while (true) {
                  if (i__1973 < size__4581__auto__) {
                    var vec__1975 = cljs.core._nth.call(null, c__4580__auto__, i__1973);
                    var name = cljs.core.nth.call(null, vec__1975, 0, null);
                    var vec__1978 = cljs.core.nth.call(null, vec__1975, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__1978, 0, null);
                    cljs.core.chunk_append.call(null, b__1974, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__1987 = i__1973 + 1;
                    i__1973 = G__1987;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1974), cljs$pprint$map_params_$_iter__1971.call(null, cljs.core.chunk_rest.call(null, s__1972__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1974), null);
              }
            } else {
              var vec__1981 = cljs.core.first.call(null, s__1972__$2);
              var name = cljs.core.nth.call(null, vec__1981, 0, null);
              var vec__1984 = cljs.core.nth.call(null, vec__1981, 1, null);
              var default$ = cljs.core.nth.call(null, vec__1984, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__1971.call(null, cljs.core.rest.call(null, s__1972__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__1968_SHARP_, p2__1969_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__1968_SHARP_, p2__1969_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__1970_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__1970_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__1988 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__1988, 0, null);
  var vec__1991 = cljs.core.nth.call(null, vec__1988, 1, null);
  var rest = cljs.core.nth.call(null, vec__1991, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__1991, 1, null);
  var vec__1994 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__1994, 0, null);
  var vec__1997 = cljs.core.nth.call(null, vec__1994, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__1997, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__1997, 1, null);
  var flags = cljs.core.nth.call(null, vec__1997, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, ['Directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(directive), '" is undefined'].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__4174__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__4174__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__4174__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__2000 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__2000, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__2000, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__2003) {
    var vec__2004 = p__2003;
    var clause_map = cljs.core.nth.call(null, vec__2004, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__2004, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__2004, 2, null);
    var vec__2007 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__2007, 0, null);
    var vec__2010 = cljs.core.nth.call(null, vec__2007, 1, null);
    var type = cljs.core.nth.call(null, vec__2010, 0, null);
    var right_params = cljs.core.nth.call(null, vec__2010, 1, null);
    var else_params = cljs.core.nth.call(null, vec__2010, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__2010, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params])), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null);
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR__orig_val__2013 = cljs.pprint._STAR_format_str_STAR_;
  var _STAR_format_str_STAR__temp_val__2014 = format_str;
  cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR__temp_val__2014;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p__2015) {
      var vec__2016 = p__2015;
      var s = cljs.core.nth.call(null, vec__2016, 0, null);
      var offset = cljs.core.nth.call(null, vec__2016, 1, null);
      if (cljs.core.empty_QMARK_.call(null, s)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
      } else {
        var tilde = s.indexOf("~");
        if (tilde < 0) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
        } else {
          if (tilde === 0) {
            return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
          }
        }
      }
    }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR__orig_val__2013;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__4185__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__4185__auto__)) {
          return or__4185__auto__;
        } else {
          var or__4185__auto____$1 = cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__4185__auto____$1)) {
            return or__4185__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__2019 = cljs.core.next.call(null, format__$1);
        format__$1 = G__2019;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var G__2021 = arguments.length;
  switch(G__2021) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.pprint.needs_pretty.call(null, format) && cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream)) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR__orig_val__2022 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__2023 = wrapped_stream;
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__2023;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
    } else {
      if (stream === true) {
        return cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__2022;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.pprint.abort_QMARK_.call(null, context)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__2024 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__2024, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__2024, 1, null);
      var vec__2027 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__2027, 0, null);
      var offsets = cljs.core.nth.call(null, vec__2027, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__4174__auto__ = macro_char;
    if (cljs.core.truth_(and__4174__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__4174__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2031_2036 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2032_2037 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2033_2038 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2034_2039 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2033_2038;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2034_2039;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count2035_2040 = 0;
      var alis_2041__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2035_2040 < cljs.core._STAR_print_length_STAR_) {
          if (alis_2041__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_2041__$1));
            if (cljs.core.next.call(null, alis_2041__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__2042 = length_count2035_2040 + 1;
              var G__2043 = cljs.core.next.call(null, alis_2041__$1);
              length_count2035_2040 = G__2042;
              alis_2041__$1 = G__2043;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2032_2037;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2031_2036;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2044_2049 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2045_2050 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2046_2051 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2047_2052 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2046_2051;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2047_2052;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count2048_2053 = 0;
      var aseq_2054 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2048_2053 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_2054) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_2054));
            if (cljs.core.next.call(null, aseq_2054)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__2055 = length_count2048_2053 + 1;
              var G__2056 = cljs.core.next.call(null, aseq_2054);
              length_count2048_2053 = G__2055;
              aseq_2054 = G__2056;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2045_2050;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2044_2049;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__1192__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
  return function() {
    var G__2057__delegate = function(args__1194__auto__) {
      var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
      return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
    };
    var G__2057 = function(var_args) {
      var args__1194__auto__ = null;
      if (arguments.length > 0) {
        var G__2058__i = 0, G__2058__a = new Array(arguments.length - 0);
        while (G__2058__i < G__2058__a.length) {
          G__2058__a[G__2058__i] = arguments[G__2058__i + 0];
          ++G__2058__i;
        }
        args__1194__auto__ = new cljs.core.IndexedSeq(G__2058__a, 0, null);
      }
      return G__2057__delegate.call(this, args__1194__auto__);
    };
    G__2057.cljs$lang$maxFixedArity = 0;
    G__2057.cljs$lang$applyTo = function(arglist__2059) {
      var args__1194__auto__ = cljs.core.seq(arglist__2059);
      return G__2057__delegate(args__1194__auto__);
    };
    G__2057.cljs$core$IFn$_invoke$arity$variadic = G__2057__delegate;
    return G__2057;
  }();
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  var vec__2060 = !cljs.core.record_QMARK_.call(null, amap) ? (new cljs.core.Var(function() {
    return cljs.core.lift_ns;
  }, new cljs.core.Symbol("cljs.core", "lift-ns", "cljs.core/lift-ns", 463499081, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "lift-ns", "lift-ns", 602311926, null), "cljs/core.cljs", 15, 1, 10278, 10278, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null)], null)), "Returns [lifted-ns lifted-map] or nil if m can't be lifted.", cljs.core.truth_(cljs.core.lift_ns) ? cljs.core.lift_ns.cljs$lang$test : null]))).call(null, amap) : null;
  var ns = cljs.core.nth.call(null, vec__2060, 0, null);
  var lift_map = cljs.core.nth.call(null, vec__2060, 1, null);
  var amap__$1 = function() {
    var or__4185__auto__ = lift_map;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return amap;
    }
  }();
  var prefix = cljs.core.truth_(ns) ? ["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "{"].join("") : "{";
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2063_2072 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2064_2073 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2065_2074 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2066_2075 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2065_2074;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2066_2075;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "}");
      var length_count2067_2076 = 0;
      var aseq_2077 = cljs.core.seq.call(null, amap__$1);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2067_2076 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_2077) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR__orig_val__2068_2078 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR__orig_val__2069_2079 = cljs.pprint._STAR_current_length_STAR_;
              var _STAR_current_level_STAR__temp_val__2070_2080 = cljs.pprint._STAR_current_level_STAR_ + 1;
              var _STAR_current_length_STAR__temp_val__2071_2081 = 0;
              cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2070_2080;
              cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2071_2081;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_2077));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_2077)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2069_2079;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2068_2078;
              }
            }
            if (cljs.core.next.call(null, aseq_2077)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__2082 = length_count2067_2076 + 1;
              var G__2083 = cljs.core.next.call(null, aseq_2077);
              length_count2067_2076 = G__2082;
              aseq_2077 = G__2083;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2064_2073;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2063_2072;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__1192__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
  return function() {
    var G__2084__delegate = function(args__1194__auto__) {
      var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
      return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
    };
    var G__2084 = function(var_args) {
      var args__1194__auto__ = null;
      if (arguments.length > 0) {
        var G__2085__i = 0, G__2085__a = new Array(arguments.length - 0);
        while (G__2085__i < G__2085__a.length) {
          G__2085__a[G__2085__i] = arguments[G__2085__i + 0];
          ++G__2085__i;
        }
        args__1194__auto__ = new cljs.core.IndexedSeq(G__2085__a, 0, null);
      }
      return G__2084__delegate.call(this, args__1194__auto__);
    };
    G__2084.cljs$lang$maxFixedArity = 0;
    G__2084.cljs$lang$applyTo = function(arglist__2086) {
      var args__1194__auto__ = cljs.core.seq(arglist__2086);
      return G__2084__delegate(args__1194__auto__);
    };
    G__2084.cljs$core$IFn$_invoke$arity$variadic = G__2084__delegate;
    return G__2084;
  }();
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__4185__auto__ = function() {
    var temp__5735__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var match = temp__5735__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = ["#\x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), "@", cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.getUid(o)), ": "].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2087_2094 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2088_2095 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2089_2096 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2090_2097 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2089_2096;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2090_2097;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(prefix.length - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, ((!(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o)) ? !cljs.core._realized_QMARK_.call(null, o) : false) ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, 
      o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2088_2095;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2087_2094;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__1192__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
  return function() {
    var G__2098__delegate = function(args__1194__auto__) {
      var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
      return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
    };
    var G__2098 = function(var_args) {
      var args__1194__auto__ = null;
      if (arguments.length > 0) {
        var G__2099__i = 0, G__2099__a = new Array(arguments.length - 0);
        while (G__2099__i < G__2099__a.length) {
          G__2099__a[G__2099__i] = arguments[G__2099__i + 0];
          ++G__2099__i;
        }
        args__1194__auto__ = new cljs.core.IndexedSeq(G__2099__a, 0, null);
      }
      return G__2098__delegate.call(this, args__1194__auto__);
    };
    G__2098.cljs$lang$maxFixedArity = 0;
    G__2098.cljs$lang$applyTo = function(arglist__2100) {
      var args__1194__auto__ = cljs.core.seq(arglist__2100);
      return G__2098__delegate(args__1194__auto__);
    };
    G__2098.cljs$core$IFn$_invoke$arity$variadic = G__2098__delegate;
    return G__2098;
  }();
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__2102 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__2102, 0, null);
    var end = cljs.core.nth.call(null, vec__2102, 1, null);
    var vec__2105 = reference;
    var seq__2106 = cljs.core.seq.call(null, vec__2105);
    var first__2107 = cljs.core.first.call(null, seq__2106);
    var seq__2106__$1 = cljs.core.next.call(null, seq__2106);
    var keyw = first__2107;
    var args = seq__2106__$1;
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__2108_2122 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__2109_2123 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__2110_2124 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__2111_2125 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2110_2124;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2111_2125;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__1192__auto__ = "~w~:i";
          var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
          return function() {
            var G__2126__delegate = function(args__1194__auto__) {
              var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
              return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
            };
            var G__2126 = function(var_args) {
              var args__1194__auto__ = null;
              if (arguments.length > 0) {
                var G__2127__i = 0, G__2127__a = new Array(arguments.length - 0);
                while (G__2127__i < G__2127__a.length) {
                  G__2127__a[G__2127__i] = arguments[G__2127__i + 0];
                  ++G__2127__i;
                }
                args__1194__auto__ = new cljs.core.IndexedSeq(G__2127__a, 0, null);
              }
              return G__2126__delegate.call(this, args__1194__auto__);
            };
            G__2126.cljs$lang$maxFixedArity = 0;
            G__2126.cljs$lang$applyTo = function(arglist__2128) {
              var args__1194__auto__ = cljs.core.seq(arglist__2128);
              return G__2126__delegate(args__1194__auto__);
            };
            G__2126.cljs$core$IFn$_invoke$arity$variadic = G__2126__delegate;
            return G__2126;
          }();
        })().call(null, keyw);
        var args_2129__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_2129__$1)) {
            (function() {
              var format_in__1192__auto__ = " ";
              var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
              return function(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args) {
                return function() {
                  var G__2130__delegate = function(args__1194__auto__) {
                    var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                    return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
                  };
                  var G__2130 = function(var_args) {
                    var args__1194__auto__ = null;
                    if (arguments.length > 0) {
                      var G__2131__i = 0, G__2131__a = new Array(arguments.length - 0);
                      while (G__2131__i < G__2131__a.length) {
                        G__2131__a[G__2131__i] = arguments[G__2131__i + 0];
                        ++G__2131__i;
                      }
                      args__1194__auto__ = new cljs.core.IndexedSeq(G__2131__a, 0, null);
                    }
                    return G__2130__delegate.call(this, args__1194__auto__);
                  };
                  G__2130.cljs$lang$maxFixedArity = 0;
                  G__2130.cljs$lang$applyTo = function(arglist__2132) {
                    var args__1194__auto__ = cljs.core.seq(arglist__2132);
                    return G__2130__delegate(args__1194__auto__);
                  };
                  G__2130.cljs$core$IFn$_invoke$arity$variadic = G__2130__delegate;
                  return G__2130;
                }();
              }(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args);
            })().call(null);
            var arg_2133 = cljs.core.first.call(null, args_2129__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_2133)) {
              var vec__2112_2134 = cljs.pprint.brackets.call(null, arg_2133);
              var start_2135__$1 = cljs.core.nth.call(null, vec__2112_2134, 0, null);
              var end_2136__$1 = cljs.core.nth.call(null, vec__2112_2134, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__2115_2137 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__2116_2138 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__2117_2139 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__2118_2140 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2117_2139;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2118_2140;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_2135__$1, null, end_2136__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_2133), 3) && cljs.core.second.call(null, arg_2133) instanceof cljs.core.Keyword) {
                    var vec__2119_2141 = arg_2133;
                    var ns_2142 = cljs.core.nth.call(null, vec__2119_2141, 0, null);
                    var kw_2143 = cljs.core.nth.call(null, vec__2119_2141, 1, null);
                    var lis_2144 = cljs.core.nth.call(null, vec__2119_2141, 2, null);
                    (function() {
                      var format_in__1192__auto__ = "~w ~w ";
                      var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
                      return function(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, vec__2119_2141, ns_2142, kw_2143, lis_2144, _STAR_current_level_STAR__orig_val__2115_2137, _STAR_current_length_STAR__orig_val__2116_2138, _STAR_current_level_STAR__temp_val__2117_2139, _STAR_current_length_STAR__temp_val__2118_2140, vec__2112_2134, start_2135__$1, end_2136__$1, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, 
                      _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args) {
                        return function() {
                          var G__2145__delegate = function(args__1194__auto__) {
                            var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                            return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
                          };
                          var G__2145 = function(var_args) {
                            var args__1194__auto__ = null;
                            if (arguments.length > 0) {
                              var G__2146__i = 0, G__2146__a = new Array(arguments.length - 0);
                              while (G__2146__i < G__2146__a.length) {
                                G__2146__a[G__2146__i] = arguments[G__2146__i + 0];
                                ++G__2146__i;
                              }
                              args__1194__auto__ = new cljs.core.IndexedSeq(G__2146__a, 0, null);
                            }
                            return G__2145__delegate.call(this, args__1194__auto__);
                          };
                          G__2145.cljs$lang$maxFixedArity = 0;
                          G__2145.cljs$lang$applyTo = function(arglist__2147) {
                            var args__1194__auto__ = cljs.core.seq(arglist__2147);
                            return G__2145__delegate(args__1194__auto__);
                          };
                          G__2145.cljs$core$IFn$_invoke$arity$variadic = G__2145__delegate;
                          return G__2145;
                        }();
                      }(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, vec__2119_2141, ns_2142, kw_2143, lis_2144, _STAR_current_level_STAR__orig_val__2115_2137, _STAR_current_length_STAR__orig_val__2116_2138, _STAR_current_level_STAR__temp_val__2117_2139, _STAR_current_length_STAR__temp_val__2118_2140, vec__2112_2134, start_2135__$1, end_2136__$1, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, 
                      _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args);
                    })().call(null, ns_2142, kw_2143);
                    if (cljs.core.sequential_QMARK_.call(null, lis_2144)) {
                      (function() {
                        var format_in__1192__auto__ = cljs.core.vector_QMARK_.call(null, lis_2144) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
                        return function(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, vec__2119_2141, ns_2142, kw_2143, lis_2144, _STAR_current_level_STAR__orig_val__2115_2137, _STAR_current_length_STAR__orig_val__2116_2138, _STAR_current_level_STAR__temp_val__2117_2139, _STAR_current_length_STAR__temp_val__2118_2140, vec__2112_2134, start_2135__$1, end_2136__$1, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, 
                        _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args) {
                          return function() {
                            var G__2148__delegate = function(args__1194__auto__) {
                              var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                              return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
                            };
                            var G__2148 = function(var_args) {
                              var args__1194__auto__ = null;
                              if (arguments.length > 0) {
                                var G__2149__i = 0, G__2149__a = new Array(arguments.length - 0);
                                while (G__2149__i < G__2149__a.length) {
                                  G__2149__a[G__2149__i] = arguments[G__2149__i + 0];
                                  ++G__2149__i;
                                }
                                args__1194__auto__ = new cljs.core.IndexedSeq(G__2149__a, 0, null);
                              }
                              return G__2148__delegate.call(this, args__1194__auto__);
                            };
                            G__2148.cljs$lang$maxFixedArity = 0;
                            G__2148.cljs$lang$applyTo = function(arglist__2150) {
                              var args__1194__auto__ = cljs.core.seq(arglist__2150);
                              return G__2148__delegate(args__1194__auto__);
                            };
                            G__2148.cljs$core$IFn$_invoke$arity$variadic = G__2148__delegate;
                            return G__2148;
                          }();
                        }(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, vec__2119_2141, ns_2142, kw_2143, lis_2144, _STAR_current_level_STAR__orig_val__2115_2137, _STAR_current_length_STAR__orig_val__2116_2138, _STAR_current_level_STAR__temp_val__2117_2139, _STAR_current_length_STAR__temp_val__2118_2140, vec__2112_2134, start_2135__$1, end_2136__$1, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, 
                        _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args);
                      })().call(null, lis_2144);
                    } else {
                      cljs.pprint.write_out.call(null, lis_2144);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__1192__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
                      return function(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, _STAR_current_level_STAR__orig_val__2115_2137, _STAR_current_length_STAR__orig_val__2116_2138, _STAR_current_level_STAR__temp_val__2117_2139, _STAR_current_length_STAR__temp_val__2118_2140, vec__2112_2134, start_2135__$1, end_2136__$1, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, _STAR_current_length_STAR__temp_val__2111_2125, 
                      vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args) {
                        return function() {
                          var G__2151__delegate = function(args__1194__auto__) {
                            var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                            return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
                          };
                          var G__2151 = function(var_args) {
                            var args__1194__auto__ = null;
                            if (arguments.length > 0) {
                              var G__2152__i = 0, G__2152__a = new Array(arguments.length - 0);
                              while (G__2152__i < G__2152__a.length) {
                                G__2152__a[G__2152__i] = arguments[G__2152__i + 0];
                                ++G__2152__i;
                              }
                              args__1194__auto__ = new cljs.core.IndexedSeq(G__2152__a, 0, null);
                            }
                            return G__2151__delegate.call(this, args__1194__auto__);
                          };
                          G__2151.cljs$lang$maxFixedArity = 0;
                          G__2151.cljs$lang$applyTo = function(arglist__2153) {
                            var args__1194__auto__ = cljs.core.seq(arglist__2153);
                            return G__2151__delegate(args__1194__auto__);
                          };
                          G__2151.cljs$core$IFn$_invoke$arity$variadic = G__2151__delegate;
                          return G__2151;
                        }();
                      }(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, _STAR_current_level_STAR__orig_val__2115_2137, _STAR_current_length_STAR__orig_val__2116_2138, _STAR_current_level_STAR__temp_val__2117_2139, _STAR_current_length_STAR__temp_val__2118_2140, vec__2112_2134, start_2135__$1, end_2136__$1, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, _STAR_current_length_STAR__temp_val__2111_2125, 
                      vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args);
                    }(), arg_2133);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2116_2138;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2115_2137;
                }
              }
              if (cljs.core.next.call(null, args_2129__$1)) {
                (function() {
                  var format_in__1192__auto__ = "~_";
                  var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
                  return function(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, vec__2112_2134, start_2135__$1, end_2136__$1, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args) {
                    return function() {
                      var G__2154__delegate = function(args__1194__auto__) {
                        var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                        return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
                      };
                      var G__2154 = function(var_args) {
                        var args__1194__auto__ = null;
                        if (arguments.length > 0) {
                          var G__2155__i = 0, G__2155__a = new Array(arguments.length - 0);
                          while (G__2155__i < G__2155__a.length) {
                            G__2155__a[G__2155__i] = arguments[G__2155__i + 0];
                            ++G__2155__i;
                          }
                          args__1194__auto__ = new cljs.core.IndexedSeq(G__2155__a, 0, null);
                        }
                        return G__2154__delegate.call(this, args__1194__auto__);
                      };
                      G__2154.cljs$lang$maxFixedArity = 0;
                      G__2154.cljs$lang$applyTo = function(arglist__2156) {
                        var args__1194__auto__ = cljs.core.seq(arglist__2156);
                        return G__2154__delegate(args__1194__auto__);
                      };
                      G__2154.cljs$core$IFn$_invoke$arity$variadic = G__2154__delegate;
                      return G__2154;
                    }();
                  }(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, vec__2112_2134, start_2135__$1, end_2136__$1, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_2133);
              if (cljs.core.next.call(null, args_2129__$1)) {
                (function() {
                  var format_in__1192__auto__ = "~:_";
                  var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
                  return function(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args) {
                    return function() {
                      var G__2157__delegate = function(args__1194__auto__) {
                        var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                        return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
                      };
                      var G__2157 = function(var_args) {
                        var args__1194__auto__ = null;
                        if (arguments.length > 0) {
                          var G__2158__i = 0, G__2158__a = new Array(arguments.length - 0);
                          while (G__2158__i < G__2158__a.length) {
                            G__2158__a[G__2158__i] = arguments[G__2158__i + 0];
                            ++G__2158__i;
                          }
                          args__1194__auto__ = new cljs.core.IndexedSeq(G__2158__a, 0, null);
                        }
                        return G__2157__delegate.call(this, args__1194__auto__);
                      };
                      G__2157.cljs$lang$maxFixedArity = 0;
                      G__2157.cljs$lang$applyTo = function(arglist__2159) {
                        var args__1194__auto__ = cljs.core.seq(arglist__2159);
                        return G__2157__delegate(args__1194__auto__);
                      };
                      G__2157.cljs$core$IFn$_invoke$arity$variadic = G__2157__delegate;
                      return G__2157;
                    }();
                  }(args_2129__$1, format_in__1192__auto__, cf__1193__auto__, arg_2133, _STAR_current_level_STAR__orig_val__2108_2122, _STAR_current_length_STAR__orig_val__2109_2123, _STAR_current_level_STAR__temp_val__2110_2124, _STAR_current_length_STAR__temp_val__2111_2125, vec__2102, start, end, vec__2105, seq__2106, first__2107, seq__2106__$1, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__2160 = cljs.core.next.call(null, args_2129__$1);
            args_2129__$1 = G__2160;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2109_2123;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2108_2122;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__2161 = alis;
    var seq__2162 = cljs.core.seq.call(null, vec__2161);
    var first__2163 = cljs.core.first.call(null, seq__2162);
    var seq__2162__$1 = cljs.core.next.call(null, seq__2162);
    var ns_sym = first__2163;
    var first__2163__$1 = cljs.core.first.call(null, seq__2162__$1);
    var seq__2162__$2 = cljs.core.next.call(null, seq__2162__$1);
    var ns_name = first__2163__$1;
    var stuff = seq__2162__$2;
    var vec__2164 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__2164, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__2164, 1, null);
    var vec__2167 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__2167, 0, null);
    var references = cljs.core.nth.call(null, vec__2167, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__2170_2174 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__2171_2175 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__2172_2176 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__2173_2177 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2172_2176;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2173_2177;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__1192__auto__ = "~w ~1I~@_~w";
          var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
          return function() {
            var G__2178__delegate = function(args__1194__auto__) {
              var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
              return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
            };
            var G__2178 = function(var_args) {
              var args__1194__auto__ = null;
              if (arguments.length > 0) {
                var G__2179__i = 0, G__2179__a = new Array(arguments.length - 0);
                while (G__2179__i < G__2179__a.length) {
                  G__2179__a[G__2179__i] = arguments[G__2179__i + 0];
                  ++G__2179__i;
                }
                args__1194__auto__ = new cljs.core.IndexedSeq(G__2179__a, 0, null);
              }
              return G__2178__delegate.call(this, args__1194__auto__);
            };
            G__2178.cljs$lang$maxFixedArity = 0;
            G__2178.cljs$lang$applyTo = function(arglist__2180) {
              var args__1194__auto__ = cljs.core.seq(arglist__2180);
              return G__2178__delegate(args__1194__auto__);
            };
            G__2178.cljs$core$IFn$_invoke$arity$variadic = G__2178__delegate;
            return G__2178;
          }();
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__4185__auto__ = doc_str;
          if (cljs.core.truth_(or__4185__auto__)) {
            return or__4185__auto__;
          } else {
            var or__4185__auto____$1 = attr_map;
            if (cljs.core.truth_(or__4185__auto____$1)) {
              return or__4185__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__1192__auto__ = "~@:_";
            var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
            return function() {
              var G__2181__delegate = function(args__1194__auto__) {
                var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
              };
              var G__2181 = function(var_args) {
                var args__1194__auto__ = null;
                if (arguments.length > 0) {
                  var G__2182__i = 0, G__2182__a = new Array(arguments.length - 0);
                  while (G__2182__i < G__2182__a.length) {
                    G__2182__a[G__2182__i] = arguments[G__2182__i + 0];
                    ++G__2182__i;
                  }
                  args__1194__auto__ = new cljs.core.IndexedSeq(G__2182__a, 0, null);
                }
                return G__2181__delegate.call(this, args__1194__auto__);
              };
              G__2181.cljs$lang$maxFixedArity = 0;
              G__2181.cljs$lang$applyTo = function(arglist__2183) {
                var args__1194__auto__ = cljs.core.seq(arglist__2183);
                return G__2181__delegate(args__1194__auto__);
              };
              G__2181.cljs$core$IFn$_invoke$arity$variadic = G__2181__delegate;
              return G__2181;
            }();
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__4185__auto__ = attr_map;
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__1192__auto__ = "~w~:[~;~:@_~]";
            var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
            return function() {
              var G__2184__delegate = function(args__1194__auto__) {
                var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
              };
              var G__2184 = function(var_args) {
                var args__1194__auto__ = null;
                if (arguments.length > 0) {
                  var G__2185__i = 0, G__2185__a = new Array(arguments.length - 0);
                  while (G__2185__i < G__2185__a.length) {
                    G__2185__a[G__2185__i] = arguments[G__2185__i + 0];
                    ++G__2185__i;
                  }
                  args__1194__auto__ = new cljs.core.IndexedSeq(G__2185__a, 0, null);
                }
                return G__2184__delegate.call(this, args__1194__auto__);
              };
              G__2184.cljs$lang$maxFixedArity = 0;
              G__2184.cljs$lang$applyTo = function(arglist__2186) {
                var args__1194__auto__ = cljs.core.seq(arglist__2186);
                return G__2184__delegate(args__1194__auto__);
              };
              G__2184.cljs$core$IFn$_invoke$arity$variadic = G__2184__delegate;
              return G__2184;
            }();
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_2187__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_2187__$1));
          var temp__5735__auto___2188 = cljs.core.next.call(null, references_2187__$1);
          if (temp__5735__auto___2188) {
            var references_2189__$2 = temp__5735__auto___2188;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__2190 = references_2189__$2;
            references_2187__$1 = G__2190;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2171_2175;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2170_2174;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__1192__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
  return function() {
    var G__2191__delegate = function(args__1194__auto__) {
      var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
      return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
    };
    var G__2191 = function(var_args) {
      var args__1194__auto__ = null;
      if (arguments.length > 0) {
        var G__2192__i = 0, G__2192__a = new Array(arguments.length - 0);
        while (G__2192__i < G__2192__a.length) {
          G__2192__a[G__2192__i] = arguments[G__2192__i + 0];
          ++G__2192__i;
        }
        args__1194__auto__ = new cljs.core.IndexedSeq(G__2192__a, 0, null);
      }
      return G__2191__delegate.call(this, args__1194__auto__);
    };
    G__2191.cljs$lang$maxFixedArity = 0;
    G__2191.cljs$lang$applyTo = function(arglist__2193) {
      var args__1194__auto__ = cljs.core.seq(arglist__2193);
      return G__2191__delegate(args__1194__auto__);
    };
    G__2191.cljs$core$IFn$_invoke$arity$variadic = G__2191__delegate;
    return G__2191;
  }();
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__1192__auto__ = " ~_";
        var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
        return function() {
          var G__2194__delegate = function(args__1194__auto__) {
            var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
            return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
          };
          var G__2194 = function(var_args) {
            var args__1194__auto__ = null;
            if (arguments.length > 0) {
              var G__2195__i = 0, G__2195__a = new Array(arguments.length - 0);
              while (G__2195__i < G__2195__a.length) {
                G__2195__a[G__2195__i] = arguments[G__2195__i + 0];
                ++G__2195__i;
              }
              args__1194__auto__ = new cljs.core.IndexedSeq(G__2195__a, 0, null);
            }
            return G__2194__delegate.call(this, args__1194__auto__);
          };
          G__2194.cljs$lang$maxFixedArity = 0;
          G__2194.cljs$lang$applyTo = function(arglist__2196) {
            var args__1194__auto__ = cljs.core.seq(arglist__2196);
            return G__2194__delegate(args__1194__auto__);
          };
          G__2194.cljs$core$IFn$_invoke$arity$variadic = G__2194__delegate;
          return G__2194;
        }();
      })().call(null);
    } else {
      (function() {
        var format_in__1192__auto__ = " ~@_";
        var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
        return function() {
          var G__2197__delegate = function(args__1194__auto__) {
            var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
            return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
          };
          var G__2197 = function(var_args) {
            var args__1194__auto__ = null;
            if (arguments.length > 0) {
              var G__2198__i = 0, G__2198__a = new Array(arguments.length - 0);
              while (G__2198__i < G__2198__a.length) {
                G__2198__a[G__2198__i] = arguments[G__2198__i + 0];
                ++G__2198__i;
              }
              args__1194__auto__ = new cljs.core.IndexedSeq(G__2198__a, 0, null);
            }
            return G__2197__delegate.call(this, args__1194__auto__);
          };
          G__2197.cljs$lang$maxFixedArity = 0;
          G__2197.cljs$lang$applyTo = function(arglist__2199) {
            var args__1194__auto__ = cljs.core.seq(arglist__2199);
            return G__2197__delegate(args__1194__auto__);
          };
          G__2197.cljs$core$IFn$_invoke$arity$variadic = G__2197__delegate;
          return G__2197;
        }();
      })().call(null);
    }
    return function() {
      var format_in__1192__auto__ = "~{~w~^ ~_~}";
      var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
      return function() {
        var G__2200__delegate = function(args__1194__auto__) {
          var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
          return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
        };
        var G__2200 = function(var_args) {
          var args__1194__auto__ = null;
          if (arguments.length > 0) {
            var G__2201__i = 0, G__2201__a = new Array(arguments.length - 0);
            while (G__2201__i < G__2201__a.length) {
              G__2201__a[G__2201__i] = arguments[G__2201__i + 0];
              ++G__2201__i;
            }
            args__1194__auto__ = new cljs.core.IndexedSeq(G__2201__a, 0, null);
          }
          return G__2200__delegate.call(this, args__1194__auto__);
        };
        G__2200.cljs$lang$maxFixedArity = 0;
        G__2200.cljs$lang$applyTo = function(arglist__2202) {
          var args__1194__auto__ = cljs.core.seq(arglist__2202);
          return G__2200__delegate(args__1194__auto__);
        };
        G__2200.cljs$core$IFn$_invoke$arity$variadic = G__2200__delegate;
        return G__2200;
      }();
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__1192__auto__ = " ~_~{~w~^ ~_~}";
      var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
      return function() {
        var G__2203__delegate = function(args__1194__auto__) {
          var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
          return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
        };
        var G__2203 = function(var_args) {
          var args__1194__auto__ = null;
          if (arguments.length > 0) {
            var G__2204__i = 0, G__2204__a = new Array(arguments.length - 0);
            while (G__2204__i < G__2204__a.length) {
              G__2204__a[G__2204__i] = arguments[G__2204__i + 0];
              ++G__2204__i;
            }
            args__1194__auto__ = new cljs.core.IndexedSeq(G__2204__a, 0, null);
          }
          return G__2203__delegate.call(this, args__1194__auto__);
        };
        G__2203.cljs$lang$maxFixedArity = 0;
        G__2203.cljs$lang$applyTo = function(arglist__2205) {
          var args__1194__auto__ = cljs.core.seq(arglist__2205);
          return G__2203__delegate(args__1194__auto__);
        };
        G__2203.cljs$core$IFn$_invoke$arity$variadic = G__2203__delegate;
        return G__2203;
      }();
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__2206 = alis;
    var seq__2207 = cljs.core.seq.call(null, vec__2206);
    var first__2208 = cljs.core.first.call(null, seq__2207);
    var seq__2207__$1 = cljs.core.next.call(null, seq__2207);
    var defn_sym = first__2208;
    var first__2208__$1 = cljs.core.first.call(null, seq__2207__$1);
    var seq__2207__$2 = cljs.core.next.call(null, seq__2207__$1);
    var defn_name = first__2208__$1;
    var stuff = seq__2207__$2;
    var vec__2209 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__2209, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__2209, 1, null);
    var vec__2212 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__2212, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__2212, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__2215_2219 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__2216_2220 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__2217_2221 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__2218_2222 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2217_2221;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2218_2222;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__1192__auto__ = "~w ~1I~@_~w";
          var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
          return function() {
            var G__2223__delegate = function(args__1194__auto__) {
              var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
              return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
            };
            var G__2223 = function(var_args) {
              var args__1194__auto__ = null;
              if (arguments.length > 0) {
                var G__2224__i = 0, G__2224__a = new Array(arguments.length - 0);
                while (G__2224__i < G__2224__a.length) {
                  G__2224__a[G__2224__i] = arguments[G__2224__i + 0];
                  ++G__2224__i;
                }
                args__1194__auto__ = new cljs.core.IndexedSeq(G__2224__a, 0, null);
              }
              return G__2223__delegate.call(this, args__1194__auto__);
            };
            G__2223.cljs$lang$maxFixedArity = 0;
            G__2223.cljs$lang$applyTo = function(arglist__2225) {
              var args__1194__auto__ = cljs.core.seq(arglist__2225);
              return G__2223__delegate(args__1194__auto__);
            };
            G__2223.cljs$core$IFn$_invoke$arity$variadic = G__2223__delegate;
            return G__2223;
          }();
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__1192__auto__ = " ~_~w";
            var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
            return function() {
              var G__2226__delegate = function(args__1194__auto__) {
                var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
              };
              var G__2226 = function(var_args) {
                var args__1194__auto__ = null;
                if (arguments.length > 0) {
                  var G__2227__i = 0, G__2227__a = new Array(arguments.length - 0);
                  while (G__2227__i < G__2227__a.length) {
                    G__2227__a[G__2227__i] = arguments[G__2227__i + 0];
                    ++G__2227__i;
                  }
                  args__1194__auto__ = new cljs.core.IndexedSeq(G__2227__a, 0, null);
                }
                return G__2226__delegate.call(this, args__1194__auto__);
              };
              G__2226.cljs$lang$maxFixedArity = 0;
              G__2226.cljs$lang$applyTo = function(arglist__2228) {
                var args__1194__auto__ = cljs.core.seq(arglist__2228);
                return G__2226__delegate(args__1194__auto__);
              };
              G__2226.cljs$core$IFn$_invoke$arity$variadic = G__2226__delegate;
              return G__2226;
            }();
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__1192__auto__ = " ~_~w";
            var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
            return function() {
              var G__2229__delegate = function(args__1194__auto__) {
                var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
                return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
              };
              var G__2229 = function(var_args) {
                var args__1194__auto__ = null;
                if (arguments.length > 0) {
                  var G__2230__i = 0, G__2230__a = new Array(arguments.length - 0);
                  while (G__2230__i < G__2230__a.length) {
                    G__2230__a[G__2230__i] = arguments[G__2230__i + 0];
                    ++G__2230__i;
                  }
                  args__1194__auto__ = new cljs.core.IndexedSeq(G__2230__a, 0, null);
                }
                return G__2229__delegate.call(this, args__1194__auto__);
              };
              G__2229.cljs$lang$maxFixedArity = 0;
              G__2229.cljs$lang$applyTo = function(arglist__2231) {
                var args__1194__auto__ = cljs.core.seq(arglist__2231);
                return G__2229__delegate(args__1194__auto__);
              };
              G__2229.cljs$core$IFn$_invoke$arity$variadic = G__2229__delegate;
              return G__2229;
            }();
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__4185__auto__ = doc_str;
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__4185__auto__ = doc_str;
            if (cljs.core.truth_(or__4185__auto__)) {
              return or__4185__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2216_2220;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2215_2219;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2232_2241 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2233_2242 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2234_2243 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2235_2244 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2234_2243;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2235_2244;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count2236_2245 = 0;
      var binding_2246 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2236_2245 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_2246)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR__orig_val__2237_2247 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR__orig_val__2238_2248 = cljs.pprint._STAR_current_length_STAR_;
              var _STAR_current_level_STAR__temp_val__2239_2249 = cljs.pprint._STAR_current_level_STAR_ + 1;
              var _STAR_current_length_STAR__temp_val__2240_2250 = 0;
              cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2239_2249;
              cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2240_2250;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_2246));
                if (cljs.core.next.call(null, binding_2246)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_2246));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2238_2248;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2237_2247;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_2246))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__2251 = length_count2236_2245 + 1;
              var G__2252 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_2246));
              length_count2236_2245 = G__2251;
              binding_2246 = G__2252;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2233_2242;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2232_2241;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2253_2257 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2254_2258 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2255_2259 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2256_2260 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2255_2259;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2256_2260;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__1192__auto__ = "~w ~1I~@_";
          var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
          return function() {
            var G__2261__delegate = function(args__1194__auto__) {
              var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
              return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
            };
            var G__2261 = function(var_args) {
              var args__1194__auto__ = null;
              if (arguments.length > 0) {
                var G__2262__i = 0, G__2262__a = new Array(arguments.length - 0);
                while (G__2262__i < G__2262__a.length) {
                  G__2262__a[G__2262__i] = arguments[G__2262__i + 0];
                  ++G__2262__i;
                }
                args__1194__auto__ = new cljs.core.IndexedSeq(G__2262__a, 0, null);
              }
              return G__2261__delegate.call(this, args__1194__auto__);
            };
            G__2261.cljs$lang$maxFixedArity = 0;
            G__2261.cljs$lang$applyTo = function(arglist__2263) {
              var args__1194__auto__ = cljs.core.seq(arglist__2263);
              return G__2261__delegate(args__1194__auto__);
            };
            G__2261.cljs$core$IFn$_invoke$arity$variadic = G__2261__delegate;
            return G__2261;
          }();
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__1192__auto__ = " ~_~{~w~^ ~_~}";
          var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
          return function() {
            var G__2264__delegate = function(args__1194__auto__) {
              var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
              return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
            };
            var G__2264 = function(var_args) {
              var args__1194__auto__ = null;
              if (arguments.length > 0) {
                var G__2265__i = 0, G__2265__a = new Array(arguments.length - 0);
                while (G__2265__i < G__2265__a.length) {
                  G__2265__a[G__2265__i] = arguments[G__2265__i + 0];
                  ++G__2265__i;
                }
                args__1194__auto__ = new cljs.core.IndexedSeq(G__2265__a, 0, null);
              }
              return G__2264__delegate.call(this, args__1194__auto__);
            };
            G__2264.cljs$lang$maxFixedArity = 0;
            G__2264.cljs$lang$applyTo = function(arglist__2266) {
              var args__1194__auto__ = cljs.core.seq(arglist__2266);
              return G__2264__delegate(args__1194__auto__);
            };
            G__2264.cljs$core$IFn$_invoke$arity$variadic = G__2264__delegate;
            return G__2264;
          }();
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2254_2258;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2253_2257;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__1192__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
  return function() {
    var G__2267__delegate = function(args__1194__auto__) {
      var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
      return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
    };
    var G__2267 = function(var_args) {
      var args__1194__auto__ = null;
      if (arguments.length > 0) {
        var G__2268__i = 0, G__2268__a = new Array(arguments.length - 0);
        while (G__2268__i < G__2268__a.length) {
          G__2268__a[G__2268__i] = arguments[G__2268__i + 0];
          ++G__2268__i;
        }
        args__1194__auto__ = new cljs.core.IndexedSeq(G__2268__a, 0, null);
      }
      return G__2267__delegate.call(this, args__1194__auto__);
    };
    G__2267.cljs$lang$maxFixedArity = 0;
    G__2267.cljs$lang$applyTo = function(arglist__2269) {
      var args__1194__auto__ = cljs.core.seq(arglist__2269);
      return G__2267__delegate(args__1194__auto__);
    };
    G__2267.cljs$core$IFn$_invoke$arity$variadic = G__2267__delegate;
    return G__2267;
  }();
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2270_2279 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2271_2280 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2272_2281 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2273_2282 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2272_2281;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2273_2282;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count2274_2283 = 0;
        var alis_2284__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2274_2283 < cljs.core._STAR_print_length_STAR_) {
            if (alis_2284__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__2275_2285 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__2276_2286 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__2277_2287 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__2278_2288 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2277_2287;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2278_2288;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_2284__$1));
                  if (cljs.core.next.call(null, alis_2284__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_2284__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2276_2286;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2275_2285;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_2284__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__2289 = length_count2274_2283 + 1;
                var G__2290 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_2284__$1));
                length_count2274_2283 = G__2289;
                alis_2284__$1 = G__2290;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2271_2280;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2270_2279;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__2291_2300 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__2292_2301 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__2293_2302 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__2294_2303 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2293_2302;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2294_2303;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__1192__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
          return function() {
            var G__2304__delegate = function(args__1194__auto__) {
              var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
              return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
            };
            var G__2304 = function(var_args) {
              var args__1194__auto__ = null;
              if (arguments.length > 0) {
                var G__2305__i = 0, G__2305__a = new Array(arguments.length - 0);
                while (G__2305__i < G__2305__a.length) {
                  G__2305__a[G__2305__i] = arguments[G__2305__i + 0];
                  ++G__2305__i;
                }
                args__1194__auto__ = new cljs.core.IndexedSeq(G__2305__a, 0, null);
              }
              return G__2304__delegate.call(this, args__1194__auto__);
            };
            G__2304.cljs$lang$maxFixedArity = 0;
            G__2304.cljs$lang$applyTo = function(arglist__2306) {
              var args__1194__auto__ = cljs.core.seq(arglist__2306);
              return G__2304__delegate(args__1194__auto__);
            };
            G__2304.cljs$core$IFn$_invoke$arity$variadic = G__2304__delegate;
            return G__2304;
          }();
        }(), alis);
        var length_count2295_2307 = 0;
        var alis_2308__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2295_2307 < cljs.core._STAR_print_length_STAR_) {
            if (alis_2308__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__2296_2309 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__2297_2310 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__2298_2311 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__2299_2312 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2298_2311;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2299_2312;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_2308__$1));
                  if (cljs.core.next.call(null, alis_2308__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_2308__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2297_2310;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2296_2309;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_2308__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__2313 = length_count2295_2307 + 1;
                var G__2314 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_2308__$1));
                length_count2295_2307 = G__2313;
                alis_2308__$1 = G__2314;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2292_2301;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2291_2300;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR__orig_val__2317 = cljs.pprint._STAR_symbol_map_STAR_;
    var _STAR_symbol_map_STAR__temp_val__2318 = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first.call(null, args), "%"]) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p1__2315_SHARP_, p2__2316_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__2315_SHARP_, ["%", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__2316_SHARP_)].join("")], null);
    }, args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR__temp_val__2318;
    try {
      return function() {
        var format_in__1192__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__1193__auto__ = typeof format_in__1192__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__1192__auto__) : format_in__1192__auto__;
        return function() {
          var G__2319__delegate = function(args__1194__auto__) {
            var navigator__1195__auto__ = cljs.pprint.init_navigator.call(null, args__1194__auto__);
            return cljs.pprint.execute_format.call(null, cf__1193__auto__, navigator__1195__auto__);
          };
          var G__2319 = function(var_args) {
            var args__1194__auto__ = null;
            if (arguments.length > 0) {
              var G__2320__i = 0, G__2320__a = new Array(arguments.length - 0);
              while (G__2320__i < G__2320__a.length) {
                G__2320__a[G__2320__i] = arguments[G__2320__i + 0];
                ++G__2320__i;
              }
              args__1194__auto__ = new cljs.core.IndexedSeq(G__2320__a, 0, null);
            }
            return G__2319__delegate.call(this, args__1194__auto__);
          };
          G__2319.cljs$lang$maxFixedArity = 0;
          G__2319.cljs$lang$applyTo = function(arglist__2321) {
            var args__1194__auto__ = cljs.core.seq(arglist__2321);
            return G__2319__delegate(args__1194__auto__);
          };
          G__2319.cljs$core$IFn$_invoke$arity$variadic = G__2319__delegate;
          return G__2319;
        }();
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR__orig_val__2317;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__2322_2327 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__2323_2328 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__2324_2329 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__2325_2330 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__2324_2329;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__2325_2330;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count2326_2331 = 0;
      var alis_2332__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count2326_2331 < cljs.core._STAR_print_length_STAR_) {
          if (alis_2332__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_2332__$1));
            if (cljs.core.next.call(null, alis_2332__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__2333 = length_count2326_2331 + 1;
              var G__2334 = cljs.core.next.call(null, alis_2332__$1);
              length_count2326_2331 = G__2333;
              alis_2332__$1 = G__2334;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__2323_2328;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__2322_2327;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__4582__auto__ = function cljs$pprint$two_forms_$_iter__2335(s__2336) {
      return new cljs.core.LazySeq(null, function() {
        var s__2336__$1 = s__2336;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__2336__$1);
          if (temp__5735__auto__) {
            var s__2336__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__2336__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__2336__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__2338 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__2337 = 0;
                while (true) {
                  if (i__2337 < size__4581__auto__) {
                    var x = cljs.core._nth.call(null, c__4580__auto__, i__2337);
                    cljs.core.chunk_append.call(null, b__2338, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__2339 = i__2337 + 1;
                    i__2337 = G__2339;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2338), cljs$pprint$two_forms_$_iter__2335.call(null, cljs.core.chunk_rest.call(null, s__2336__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2338), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__2336__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__2335.call(null, cljs.core.rest.call(null, s__2336__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p1__2340_SHARP_) {
    var vec__2341 = p1__2340_SHARP_;
    var s = cljs.core.nth.call(null, vec__2341, 0, null);
    var f = cljs.core.nth.call(null, vec__2341, 1, null);
    if (cljs.core.not.call(null, function() {
      var or__4185__auto__ = cljs.core.namespace.call(null, s);
      if (cljs.core.truth_(or__4185__auto__)) {
        return or__4185__auto__;
      } else {
        return cljs.core.special_symbol_QMARK_.call(null, s);
      }
    }())) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
    } else {
      return p1__2340_SHARP_;
    }
  }, amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__5733__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__5733__auto__)) {
      var special_form = temp__5733__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__5733__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__5733__auto__)) {
    var arg_num = temp__5733__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__4273__auto__ = 0;
    var y__4274__auto__ = width - cljs.core.count.call(null, s);
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var G__2348 = arguments.length;
  switch(G__2348) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  if (cljs.core.seq.call(null, rows)) {
    var widths = cljs.core.map.call(null, function(k) {
      return cljs.core.apply.call(null, cljs.core.max, cljs.core.str.cljs$core$IFn$_invoke$arity$1(k).length, cljs.core.map.call(null, function(p1__2344_SHARP_) {
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, p1__2344_SHARP_, k)).length;
      }, rows));
    }, ks);
    var spacers = cljs.core.map.call(null, function(p1__2345_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__2345_SHARP_, "-"));
    }, widths);
    var fmt_row = function(leader, divider, trailer, row) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(leader), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
        var iter__4582__auto__ = function cljs$pprint$iter__2359(s__2360) {
          return new cljs.core.LazySeq(null, function() {
            var s__2360__$1 = s__2360;
            while (true) {
              var temp__5735__auto__ = cljs.core.seq.call(null, s__2360__$1);
              if (temp__5735__auto__) {
                var s__2360__$2 = temp__5735__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__2360__$2)) {
                  var c__4580__auto__ = cljs.core.chunk_first.call(null, s__2360__$2);
                  var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
                  var b__2362 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
                  if (function() {
                    var i__2361 = 0;
                    while (true) {
                      if (i__2361 < size__4581__auto__) {
                        var vec__2363 = cljs.core._nth.call(null, c__4580__auto__, i__2361);
                        var col = cljs.core.nth.call(null, vec__2363, 0, null);
                        var width = cljs.core.nth.call(null, vec__2363, 1, null);
                        cljs.core.chunk_append.call(null, b__2362, cljs.pprint.add_padding.call(null, width, cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)));
                        var G__2374 = i__2361 + 1;
                        i__2361 = G__2374;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2362), cljs$pprint$iter__2359.call(null, cljs.core.chunk_rest.call(null, s__2360__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2362), null);
                  }
                } else {
                  var vec__2366 = cljs.core.first.call(null, s__2360__$2);
                  var col = cljs.core.nth.call(null, vec__2366, 0, null);
                  var width = cljs.core.nth.call(null, vec__2366, 1, null);
                  return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)), cljs$pprint$iter__2359.call(null, cljs.core.rest.call(null, s__2360__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4582__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(p1__2346_SHARP_) {
          return cljs.core.get.call(null, row, p1__2346_SHARP_);
        }, ks), widths));
      }()))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(trailer)].join("");
    };
    cljs.core.println.call(null);
    cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
    cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
    var seq__2369 = cljs.core.seq.call(null, rows);
    var chunk__2370 = null;
    var count__2371 = 0;
    var i__2372 = 0;
    while (true) {
      if (i__2372 < count__2371) {
        var row = cljs.core._nth.call(null, chunk__2370, i__2372);
        cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
        var G__2375 = seq__2369;
        var G__2376 = chunk__2370;
        var G__2377 = count__2371;
        var G__2378 = i__2372 + 1;
        seq__2369 = G__2375;
        chunk__2370 = G__2376;
        count__2371 = G__2377;
        i__2372 = G__2378;
        continue;
      } else {
        var temp__5735__auto__ = cljs.core.seq.call(null, seq__2369);
        if (temp__5735__auto__) {
          var seq__2369__$1 = temp__5735__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__2369__$1)) {
            var c__4609__auto__ = cljs.core.chunk_first.call(null, seq__2369__$1);
            var G__2379 = cljs.core.chunk_rest.call(null, seq__2369__$1);
            var G__2380 = c__4609__auto__;
            var G__2381 = cljs.core.count.call(null, c__4609__auto__);
            var G__2382 = 0;
            seq__2369 = G__2379;
            chunk__2370 = G__2380;
            count__2371 = G__2381;
            i__2372 = G__2382;
            continue;
          } else {
            var row = cljs.core.first.call(null, seq__2369__$1);
            cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
            var G__2383 = cljs.core.next.call(null, seq__2369__$1);
            var G__2384 = null;
            var G__2385 = 0;
            var G__2386 = 0;
            seq__2369 = G__2383;
            chunk__2370 = G__2384;
            count__2371 = G__2385;
            i__2372 = G__2386;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var G__2579 = arguments.length;
  switch(G__2579) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__2580 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter)) {
    return cljs.core.assoc.call(null, G__2580, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint);
  } else {
    return G__2580;
  }
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__4185__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__4185__auto__)) {
    return or__4185__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___2585 = arguments.length;
  var i__4790__auto___2586 = 0;
  while (true) {
    if (i__4790__auto___2586 < len__4789__auto___2585) {
      args__4795__auto__.push(arguments[i__4790__auto___2586]);
      var G__2587 = i__4790__auto___2586 + 1;
      i__4790__auto___2586 = G__2587;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 2 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4796__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq2582) {
  var G__2583 = cljs.core.first.call(null, seq2582);
  var seq2582__$1 = cljs.core.next.call(null, seq2582);
  var G__2584 = cljs.core.first.call(null, seq2582__$1);
  var seq2582__$2 = cljs.core.next.call(null, seq2582__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2583, G__2584, seq2582__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__2589 = m;
  var map__2589__$1 = (!(map__2589 == null) ? map__2589.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2589.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2589) : map__2589;
  var file = cljs.core.get.call(null, map__2589__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__2589__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__2589__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.reverse.call(null, cljs.core.map.call(null, function(p1__2588_SHARP_) {
    return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__2588_SHARP_));
  }, (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), " (", cljs.core.str.cljs$core$IFn$_invoke$arity$1(file), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), cljs.core.truth_(column) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join("") : null, ")"].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.test !== "undefined" && typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(m) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__4185__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__5735__auto___2591 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__5735__auto___2591)) {
    var message_2592 = temp__5735__auto___2591;
    cljs.core.println.call(null, message_2592);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__5735__auto___2593 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__5735__auto___2593)) {
    var message_2594 = temp__5735__auto___2593;
    cljs.core.println.call(null, message_2594);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  if (cnt > 1) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2), 10), parseInt(cljs.core.nth.call(null, parts, cnt - 1), 10)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [NaN, NaN], null);
  }
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  var output_dir = "out";
  var output_dir__$1 = function() {
    var G__2595 = output_dir;
    if (!clojure.string.ends_with_QMARK_.call(null, output_dir, "/")) {
      return [G__2595, "/"].join("");
    } else {
      return G__2595;
    }
  }();
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split(output_dir__$1)).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__5733__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__5733__auto__)) {
    var source_map = temp__5733__auto__;
    var temp__5733__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__5733__auto____$1)) {
      var columns = temp__5733__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__5733__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__5733__auto____$2)) {
          var mapping = temp__5733__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__5733__auto__ = typeof exception.stack === "string" ? function() {
    var G__2597 = exception.stack;
    var G__2597__$1 = G__2597 == null ? null : clojure.string.split_lines.call(null, G__2597);
    var G__2597__$2 = G__2597__$1 == null ? null : cljs.core.get.call(null, G__2597__$1, depth);
    if (G__2597__$2 == null) {
      return null;
    } else {
      return clojure.string.trim.call(null, G__2597__$2);
    }
  }() : false;
  if (cljs.core.truth_(temp__5733__auto__)) {
    var stack_element = temp__5733__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__2598 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__2598, 0, null);
    var column = cljs.core.nth.call(null, vec__2598, 1, null);
    var vec__2601 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__2601, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__2601, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__2601, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__2604 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m);
    var G__2604__$1 = G__2604 instanceof cljs.core.Keyword ? G__2604.fqn : null;
    switch(G__2604__$1) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__5735__auto__ = cljs.core.seq.call(null, fns);
    if (temp__5735__auto__) {
      var xs__6292__auto__ = temp__5735__auto__;
      var f = cljs.core.first.call(null, xs__6292__auto__);
      var obj = f.call(null);
      if (cljs.test.async_QMARK_.call(null, obj)) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__6292__auto__, temp__5735__auto__) {
            return function() {
              return cljs.test.run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__6292__auto__, temp__5735__auto__), null);
          return function(fns, d, obj, f, xs__6292__auto__, temp__5735__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__6292__auto__, temp__5735__auto__);
        }());
      } else {
        var G__2608 = function() {
          var G__2607 = cljs.core.rest.call(null, fns);
          if (cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj)))) {
            return cljs.core.concat.call(null, obj, G__2607);
          } else {
            return G__2607;
          }
        }();
        fns = G__2608;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__2609 = fns;
  if (G__2609 == null) {
    return null;
  } else {
    return cljs.core.vary_meta.call(null, G__2609, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  }
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e2610) {
      var e = e2610;
      var G__2611 = e;
      var G__2611__$1 = G__2611 instanceof cljs.core.Keyword ? G__2611.fqn : null;
      switch(G__2611__$1) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";
          break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__5733__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__5733__auto__)) {
    var t = temp__5733__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__2613 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__2613, 0, null);
  var types = vec__2613;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error(["Assert failed: ", "Fixtures may not be of mixed types", "\n", "(not-any? nil? types)"].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error(["Assert failed: ", "fixtures specified in :once and :each must be of the same type", "\n", "(\x3e 2 (count types))"].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.test.async_QMARK_.call(null, obj)) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__2616) {
    var vec__2617 = p__2616;
    var ns = cljs.core.nth.call(null, vec__2617, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__2617, 1, null);
    return function() {
      return cljs.test.block.call(null, function() {
        var env = cljs.test.get_current_env.call(null);
        var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
        var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
        var G__2620 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures);
        var G__2620__$1 = G__2620 instanceof cljs.core.Keyword ? G__2620.fqn : null;
        switch(G__2620__$1) {
          case "async":
            return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
            break;
          case "sync":
            var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
              return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function() {
                var seq__2621 = cljs.core.seq.call(null, vars__$1);
                var chunk__2622 = null;
                var count__2623 = 0;
                var i__2624 = 0;
                while (true) {
                  if (i__2624 < count__2623) {
                    var v = cljs.core._nth.call(null, chunk__2622, i__2624);
                    var temp__5735__auto___2626 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                    if (cljs.core.truth_(temp__5735__auto___2626)) {
                      var t_2627 = temp__5735__auto___2626;
                      each_fixture_fn.call(null, function(seq__2621, chunk__2622, count__2623, i__2624, t_2627, temp__5735__auto___2626, v, each_fixture_fn, G__2620, G__2620__$1, env, once_fixtures, each_fixtures, vec__2617, ns, vars__$1) {
                        return function() {
                          return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_2627)));
                        };
                      }(seq__2621, chunk__2622, count__2623, i__2624, t_2627, temp__5735__auto___2626, v, each_fixture_fn, G__2620, G__2620__$1, env, once_fixtures, each_fixtures, vec__2617, ns, vars__$1));
                    } else {
                    }
                    var G__2628 = seq__2621;
                    var G__2629 = chunk__2622;
                    var G__2630 = count__2623;
                    var G__2631 = i__2624 + 1;
                    seq__2621 = G__2628;
                    chunk__2622 = G__2629;
                    count__2623 = G__2630;
                    i__2624 = G__2631;
                    continue;
                  } else {
                    var temp__5735__auto__ = cljs.core.seq.call(null, seq__2621);
                    if (temp__5735__auto__) {
                      var seq__2621__$1 = temp__5735__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__2621__$1)) {
                        var c__4609__auto__ = cljs.core.chunk_first.call(null, seq__2621__$1);
                        var G__2632 = cljs.core.chunk_rest.call(null, seq__2621__$1);
                        var G__2633 = c__4609__auto__;
                        var G__2634 = cljs.core.count.call(null, c__4609__auto__);
                        var G__2635 = 0;
                        seq__2621 = G__2632;
                        chunk__2622 = G__2633;
                        count__2623 = G__2634;
                        i__2624 = G__2635;
                        continue;
                      } else {
                        var v = cljs.core.first.call(null, seq__2621__$1);
                        var temp__5735__auto___2636__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                        if (cljs.core.truth_(temp__5735__auto___2636__$1)) {
                          var t_2637 = temp__5735__auto___2636__$1;
                          each_fixture_fn.call(null, function(seq__2621, chunk__2622, count__2623, i__2624, t_2637, temp__5735__auto___2636__$1, v, seq__2621__$1, temp__5735__auto__, each_fixture_fn, G__2620, G__2620__$1, env, once_fixtures, each_fixtures, vec__2617, ns, vars__$1) {
                            return function() {
                              return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_2637)));
                            };
                          }(seq__2621, chunk__2622, count__2623, i__2624, t_2637, temp__5735__auto___2636__$1, v, seq__2621__$1, temp__5735__auto__, each_fixture_fn, G__2620, G__2620__$1, env, once_fixtures, each_fixtures, vec__2617, ns, vars__$1));
                        } else {
                        }
                        var G__2638 = cljs.core.next.call(null, seq__2621__$1);
                        var G__2639 = null;
                        var G__2640 = 0;
                        var G__2641 = 0;
                        seq__2621 = G__2638;
                        chunk__2622 = G__2639;
                        count__2623 = G__2640;
                        i__2624 = G__2641;
                        continue;
                      }
                    } else {
                      return null;
                    }
                  }
                  break;
                }
              });
            }], null);
            break;
          default:
            throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__2620__$1)].join(""));
        }
      }());
    };
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("fipp.util");
goog.require("cljs.core");
fipp.util.boolean_QMARK_ = function fipp$util$boolean_QMARK_(x) {
  return x === true || x === false;
};
fipp.util.char_QMARK_ = function fipp$util$char_QMARK_(x) {
  return false;
};
fipp.util.regexp_QMARK_ = cljs.core.regexp_QMARK_;
fipp.util.edn_QMARK_ = function fipp$util$edn_QMARK_(x) {
  var or__4185__auto__ = x == null;
  if (or__4185__auto__) {
    return or__4185__auto__;
  } else {
    var or__4185__auto____$1 = fipp.util.boolean_QMARK_.call(null, x);
    if (or__4185__auto____$1) {
      return or__4185__auto____$1;
    } else {
      var or__4185__auto____$2 = typeof x === "string";
      if (or__4185__auto____$2) {
        return or__4185__auto____$2;
      } else {
        var or__4185__auto____$3 = fipp.util.char_QMARK_.call(null, x);
        if (or__4185__auto____$3) {
          return or__4185__auto____$3;
        } else {
          var or__4185__auto____$4 = x instanceof cljs.core.Symbol;
          if (or__4185__auto____$4) {
            return or__4185__auto____$4;
          } else {
            var or__4185__auto____$5 = x instanceof cljs.core.Keyword;
            if (or__4185__auto____$5) {
              return or__4185__auto____$5;
            } else {
              var or__4185__auto____$6 = typeof x === "number";
              if (or__4185__auto____$6) {
                return or__4185__auto____$6;
              } else {
                var or__4185__auto____$7 = cljs.core.seq_QMARK_.call(null, x);
                if (or__4185__auto____$7) {
                  return or__4185__auto____$7;
                } else {
                  var or__4185__auto____$8 = cljs.core.vector_QMARK_.call(null, x);
                  if (or__4185__auto____$8) {
                    return or__4185__auto____$8;
                  } else {
                    var or__4185__auto____$9 = cljs.core.record_QMARK_.call(null, x);
                    if (or__4185__auto____$9) {
                      return or__4185__auto____$9;
                    } else {
                      var or__4185__auto____$10 = cljs.core.map_QMARK_.call(null, x);
                      if (or__4185__auto____$10) {
                        return or__4185__auto____$10;
                      } else {
                        var or__4185__auto____$11 = cljs.core.set_QMARK_.call(null, x);
                        if (or__4185__auto____$11) {
                          return or__4185__auto____$11;
                        } else {
                          var or__4185__auto____$12 = cljs.core.tagged_literal_QMARK_.call(null, x);
                          if (or__4185__auto____$12) {
                            return or__4185__auto____$12;
                          } else {
                            var or__4185__auto____$13 = cljs.core.var_QMARK_.call(null, x);
                            if (or__4185__auto____$13) {
                              return or__4185__auto____$13;
                            } else {
                              return fipp.util.regexp_QMARK_.call(null, x);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
fipp.util.value_obj_QMARK_ = function fipp$util$value_obj_QMARK_(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 262144 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IWithMeta$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IWithMeta, x)) {
    return !cljs.core.var_QMARK_.call(null, x);
  } else {
    return false;
  }
};
goog.provide("fipp.ednize");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("fipp.util");
fipp.ednize.IEdn = function() {
};
fipp.ednize._edn = function fipp$ednize$_edn(x) {
  if (!(x == null) && !(x.fipp$ednize$IEdn$_edn$arity$1 == null)) {
    return x.fipp$ednize$IEdn$_edn$arity$1(x);
  } else {
    var x__4487__auto__ = x == null ? null : x;
    var m__4488__auto__ = fipp.ednize._edn[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, x);
    } else {
      var m__4485__auto__ = fipp.ednize._edn["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IEdn.-edn", x);
      }
    }
  }
};
fipp.ednize.IOverride = function() {
};
fipp.ednize.override_QMARK_ = function fipp$ednize$override_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.fipp$ednize$IEdn$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, fipp.ednize.IEdn, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, fipp.ednize.IEdn, x);
  }
};
fipp.ednize.edn = function fipp$ednize$edn(x) {
  if (fipp.ednize.override_QMARK_.call(null, x)) {
    return fipp.ednize._edn.call(null, x);
  } else {
    if (cljs.core.object_QMARK_.call(null, x)) {
      return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "js", "js", -886355190, null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
        var iter__4582__auto__ = function fipp$ednize$edn_$_iter__770(s__771) {
          return new cljs.core.LazySeq(null, function() {
            var s__771__$1 = s__771;
            while (true) {
              var temp__5735__auto__ = cljs.core.seq.call(null, s__771__$1);
              if (temp__5735__auto__) {
                var s__771__$2 = temp__5735__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__771__$2)) {
                  var c__4580__auto__ = cljs.core.chunk_first.call(null, s__771__$2);
                  var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
                  var b__773 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
                  if (function() {
                    var i__772 = 0;
                    while (true) {
                      if (i__772 < size__4581__auto__) {
                        var k = cljs.core._nth.call(null, c__4580__auto__, i__772);
                        cljs.core.chunk_append.call(null, b__773, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), x[k]], null));
                        var G__779 = i__772 + 1;
                        i__772 = G__779;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__773), fipp$ednize$edn_$_iter__770.call(null, cljs.core.chunk_rest.call(null, s__771__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__773), null);
                  }
                } else {
                  var k = cljs.core.first.call(null, s__771__$2);
                  return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), x[k]], null), fipp$ednize$edn_$_iter__770.call(null, cljs.core.rest.call(null, s__771__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4582__auto__.call(null, cljs.core.js_keys.call(null, x));
      }()));
    } else {
      if (cljs.core.array_QMARK_.call(null, x)) {
        return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "js", "js", -886355190, null), cljs.core.vec.call(null, x));
      } else {
        if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x)) {
          var pending_QMARK_ = (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 1 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IPending$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, x)) ? !cljs.core.realized_QMARK_.call(null, x) : false;
          var val = pending_QMARK_ ? null : cljs.core.deref.call(null, x);
          var status = pending_QMARK_ ? new cljs.core.Keyword(null, "pending", "pending", -220036727) : new cljs.core.Keyword(null, "ready", "ready", 1086465795);
          return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "object", "object", -1179821820, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.pr_str.call(null, cljs.core.type.call(null, x))), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), status, new cljs.core.Keyword(null, "val", "val", 128701612), val], null)], null));
        } else {
          if (x instanceof Date) {
            return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "inst", "inst", -2008473268, null), function() {
              var normalize = function(n, len) {
                var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                while (true) {
                  if (ns.length < len) {
                    var G__780 = ["0", ns].join("");
                    ns = G__780;
                    continue;
                  } else {
                    return ns;
                  }
                  break;
                }
              };
              return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(x.getUTCFullYear()), "-", normalize.call(null, x.getUTCMonth() + 1, 2), "-", normalize.call(null, x.getUTCDate(), 2), "T", normalize.call(null, x.getUTCHours(), 2), ":", normalize.call(null, x.getUTCMinutes(), 2), ":", normalize.call(null, x.getUTCSeconds(), 2), ".", normalize.call(null, x.getUTCMilliseconds(), 3), "-", "00:00"].join("");
            }());
          } else {
            if (!(x == null) ? false || cljs.core.PROTOCOL_SENTINEL === x.fipp$ednize$IEdn$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, fipp.ednize.IEdn, x) : false : cljs.core.native_satisfies_QMARK_.call(null, fipp.ednize.IEdn, x)) {
              return fipp.ednize._edn.call(null, x);
            } else {
              if (cljs.core.truth_(fipp.util.edn_QMARK_.call(null, x))) {
                return x;
              } else {
                return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "object", "object", -1179821820, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.pr_str.call(null, cljs.core.type.call(null, x)))], null));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.UUID.prototype.fipp$ednize$IEdn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.fipp$ednize$IEdn$_edn$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1));
};
cljs.core.ExceptionInfo.prototype.fipp$ednize$IEdn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.fipp$ednize$IEdn$_edn$arity$1 = function(x) {
  var x__$1 = this;
  return cljs.core.tagged_literal.call(null, new cljs.core.Symbol(null, "ExceptionInfo", "ExceptionInfo", 294935087, null), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "message", "message", -406056002), cljs.core.ex_message.call(null, x__$1), new cljs.core.Keyword(null, "data", "data", -232669377), cljs.core.ex_data.call(null, x__$1)], null), function() {
    var temp__5735__auto__ = cljs.core.ex_cause.call(null, x__$1);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var cause = temp__5735__auto__;
      return new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "cause", "cause", 231901252), cause], null);
    } else {
      return null;
    }
  }()));
};
fipp.ednize.record__GT_tagged = function fipp$ednize$record__GT_tagged(x) {
  return cljs.core.tagged_literal.call(null, cljs.core.apply.call(null, cljs.core.symbol, clojure.string.split.call(null, cljs.core.pr_str.call(null, cljs.core.type.call(null, x)), /\//, 2)), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, x));
};
goog.provide("fipp.visit");
goog.require("cljs.core");
goog.require("fipp.util");
goog.require("fipp.ednize");
fipp.visit.IVisitor = function() {
};
fipp.visit.visit_unknown = function fipp$visit$visit_unknown(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_unknown$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_unknown$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_unknown[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_unknown["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-unknown", this$);
      }
    }
  }
};
fipp.visit.visit_nil = function fipp$visit$visit_nil(this$) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_nil$arity$1 == null)) {
    return this$.fipp$visit$IVisitor$visit_nil$arity$1(this$);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_nil[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$);
    } else {
      var m__4485__auto__ = fipp.visit.visit_nil["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-nil", this$);
      }
    }
  }
};
fipp.visit.visit_boolean = function fipp$visit$visit_boolean(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_boolean$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_boolean$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_boolean[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_boolean["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-boolean", this$);
      }
    }
  }
};
fipp.visit.visit_string = function fipp$visit$visit_string(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_string$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_string$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_string[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_string["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-string", this$);
      }
    }
  }
};
fipp.visit.visit_character = function fipp$visit$visit_character(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_character$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_character$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_character[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_character["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-character", this$);
      }
    }
  }
};
fipp.visit.visit_symbol = function fipp$visit$visit_symbol(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_symbol$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_symbol$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_symbol[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_symbol["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-symbol", this$);
      }
    }
  }
};
fipp.visit.visit_keyword = function fipp$visit$visit_keyword(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_keyword$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_keyword$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_keyword[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_keyword["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-keyword", this$);
      }
    }
  }
};
fipp.visit.visit_number = function fipp$visit$visit_number(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_number$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_number$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_number[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_number["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-number", this$);
      }
    }
  }
};
fipp.visit.visit_seq = function fipp$visit$visit_seq(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_seq$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_seq$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_seq[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_seq["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-seq", this$);
      }
    }
  }
};
fipp.visit.visit_vector = function fipp$visit$visit_vector(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_vector$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_vector$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_vector[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_vector["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-vector", this$);
      }
    }
  }
};
fipp.visit.visit_map = function fipp$visit$visit_map(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_map$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_map$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_map[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_map["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-map", this$);
      }
    }
  }
};
fipp.visit.visit_set = function fipp$visit$visit_set(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_set$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_set$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_set[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_set["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-set", this$);
      }
    }
  }
};
fipp.visit.visit_tagged = function fipp$visit$visit_tagged(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_tagged$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_tagged$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_tagged[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_tagged["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-tagged", this$);
      }
    }
  }
};
fipp.visit.visit_meta = function fipp$visit$visit_meta(this$, meta, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_meta$arity$3 == null)) {
    return this$.fipp$visit$IVisitor$visit_meta$arity$3(this$, meta, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_meta[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, meta, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_meta["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, meta, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-meta", this$);
      }
    }
  }
};
fipp.visit.visit_var = function fipp$visit$visit_var(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_var$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_var$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_var[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_var["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-var", this$);
      }
    }
  }
};
fipp.visit.visit_pattern = function fipp$visit$visit_pattern(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_pattern$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_pattern$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_pattern[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_pattern["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-pattern", this$);
      }
    }
  }
};
fipp.visit.visit_record = function fipp$visit$visit_record(this$, x) {
  if (!(this$ == null) && !(this$.fipp$visit$IVisitor$visit_record$arity$2 == null)) {
    return this$.fipp$visit$IVisitor$visit_record$arity$2(this$, x);
  } else {
    var x__4487__auto__ = this$ == null ? null : this$;
    var m__4488__auto__ = fipp.visit.visit_record[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, this$, x);
    } else {
      var m__4485__auto__ = fipp.visit.visit_record["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, this$, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "IVisitor.visit-record", this$);
      }
    }
  }
};
fipp.visit.visit_STAR_ = function fipp$visit$visit_STAR_(visitor, x) {
  if (x == null) {
    return fipp.visit.visit_nil.call(null, visitor);
  } else {
    if (fipp.ednize.override_QMARK_.call(null, x)) {
      return fipp.visit.visit_unknown.call(null, visitor, x);
    } else {
      if (fipp.util.boolean_QMARK_.call(null, x)) {
        return fipp.visit.visit_boolean.call(null, visitor, x);
      } else {
        if (typeof x === "string") {
          return fipp.visit.visit_string.call(null, visitor, x);
        } else {
          if (fipp.util.char_QMARK_.call(null, x)) {
            return fipp.visit.visit_character.call(null, visitor, x);
          } else {
            if (x instanceof cljs.core.Symbol) {
              return fipp.visit.visit_symbol.call(null, visitor, x);
            } else {
              if (x instanceof cljs.core.Keyword) {
                return fipp.visit.visit_keyword.call(null, visitor, x);
              } else {
                if (typeof x === "number") {
                  return fipp.visit.visit_number.call(null, visitor, x);
                } else {
                  if (cljs.core.seq_QMARK_.call(null, x)) {
                    return fipp.visit.visit_seq.call(null, visitor, x);
                  } else {
                    if (cljs.core.vector_QMARK_.call(null, x)) {
                      return fipp.visit.visit_vector.call(null, visitor, x);
                    } else {
                      if (cljs.core.record_QMARK_.call(null, x)) {
                        return fipp.visit.visit_record.call(null, visitor, x);
                      } else {
                        if (cljs.core.map_QMARK_.call(null, x)) {
                          return fipp.visit.visit_map.call(null, visitor, x);
                        } else {
                          if (cljs.core.set_QMARK_.call(null, x)) {
                            return fipp.visit.visit_set.call(null, visitor, x);
                          } else {
                            if (cljs.core.tagged_literal_QMARK_.call(null, x)) {
                              return fipp.visit.visit_tagged.call(null, visitor, x);
                            } else {
                              if (cljs.core.var_QMARK_.call(null, x)) {
                                return fipp.visit.visit_var.call(null, visitor, x);
                              } else {
                                if (cljs.core.truth_(fipp.util.regexp_QMARK_.call(null, x))) {
                                  return fipp.visit.visit_pattern.call(null, visitor, x);
                                } else {
                                  return fipp.visit.visit_unknown.call(null, visitor, x);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
fipp.visit.value_meta = function fipp$visit$value_meta(x) {
  if (fipp.util.value_obj_QMARK_.call(null, x)) {
    return cljs.core.meta.call(null, x);
  } else {
    return null;
  }
};
fipp.visit.visit = function fipp$visit$visit(visitor, x) {
  var temp__5733__auto__ = fipp.visit.value_meta.call(null, x);
  if (cljs.core.truth_(temp__5733__auto__)) {
    var m = temp__5733__auto__;
    return fipp.visit.visit_meta.call(null, visitor, m, x);
  } else {
    return fipp.visit.visit_STAR_.call(null, visitor, x);
  }
};
goog.provide("clojure.core.rrb_vector.protocols");
goog.require("cljs.core");
clojure.core.rrb_vector.protocols.PSpliceableVector = function() {
};
clojure.core.rrb_vector.protocols._splicev = function clojure$core$rrb_vector$protocols$_splicev(v1, v2) {
  if (!(v1 == null) && !(v1.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 == null)) {
    return v1.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2(v1, v2);
  } else {
    var x__4487__auto__ = v1 == null ? null : v1;
    var m__4488__auto__ = clojure.core.rrb_vector.protocols._splicev[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, v1, v2);
    } else {
      var m__4485__auto__ = clojure.core.rrb_vector.protocols._splicev["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, v1, v2);
      } else {
        throw cljs.core.missing_protocol.call(null, "PSpliceableVector.-splicev", v1);
      }
    }
  }
};
clojure.core.rrb_vector.protocols.PSliceableVector = function() {
};
clojure.core.rrb_vector.protocols._slicev = function clojure$core$rrb_vector$protocols$_slicev(v, start, end) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 == null)) {
    return v.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3(v, start, end);
  } else {
    var x__4487__auto__ = v == null ? null : v;
    var m__4488__auto__ = clojure.core.rrb_vector.protocols._slicev[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, v, start, end);
    } else {
      var m__4485__auto__ = clojure.core.rrb_vector.protocols._slicev["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, v, start, end);
      } else {
        throw cljs.core.missing_protocol.call(null, "PSliceableVector.-slicev", v);
      }
    }
  }
};
goog.provide("clojure.core.rrb_vector.nodes");
goog.require("cljs.core");
clojure.core.rrb_vector.nodes.empty_node = cljs.core.PersistentVector.EMPTY_NODE;
clojure.core.rrb_vector.nodes.clone = function clojure$core$rrb_vector$nodes$clone(shift, node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone.call(null, node.arr));
};
clojure.core.rrb_vector.nodes.regular_QMARK_ = function clojure$core$rrb_vector$nodes$regular_QMARK_(node) {
  return !(node.arr.length === 33);
};
clojure.core.rrb_vector.nodes.ranges = function clojure$core$rrb_vector$nodes$ranges(node) {
  return node.arr[32];
};
clojure.core.rrb_vector.nodes.last_range = function clojure$core$rrb_vector$nodes$last_range(node) {
  var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, node);
  var i = rngs[32] - 1;
  return rngs[i];
};
clojure.core.rrb_vector.nodes.regular_ranges = function clojure$core$rrb_vector$nodes$regular_ranges(shift, cnt) {
  var step = 1 << shift;
  var rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  var i = 0;
  var r = step;
  while (true) {
    if (r < cnt) {
      rngs[i] = r;
      var G__787 = i + 1;
      var G__788 = r + step;
      i = G__787;
      r = G__788;
      continue;
    } else {
      rngs[i] = cnt;
      rngs[32] = i + 1;
      return rngs;
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.overflow_QMARK_ = function clojure$core$rrb_vector$nodes$overflow_QMARK_(root, shift, cnt) {
  while (true) {
    if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, root)) {
      return cnt >> 5 > 1 << shift;
    } else {
      var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, root);
      var slc = rngs[32];
      if (slc === 32) {
        var or__4185__auto__ = shift === 5;
        if (or__4185__auto__) {
          return or__4185__auto__;
        } else {
          var G__789 = root.arr[slc - 1];
          var G__790 = shift - 5;
          var G__791 = rngs[31] - rngs[30] + 32;
          root = G__789;
          shift = G__790;
          cnt = G__791;
          continue;
        }
      } else {
        return false;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.index_of_0 = function clojure$core$rrb_vector$nodes$index_of_0(arr) {
  var l = 0;
  var h = 31;
  while (true) {
    if (l >= h - 1) {
      if ((arr[l] | 0) === 0) {
        return l;
      } else {
        if ((arr[h] | 0) === 0) {
          return h;
        } else {
          return 32;
        }
      }
    } else {
      var mid = l + (h - l >> 1);
      if ((arr[mid] | 0) === 0) {
        var G__792 = l;
        var G__793 = mid;
        l = G__792;
        h = G__793;
        continue;
      } else {
        var G__794 = mid + 1;
        var G__795 = h;
        l = G__794;
        h = G__795;
        continue;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.index_of_nil = function clojure$core$rrb_vector$nodes$index_of_nil(arr) {
  var l = 0;
  var h = 31;
  while (true) {
    if (l >= h - 1) {
      if (arr[l] == null) {
        return l;
      } else {
        if (arr[h] == null) {
          return h;
        } else {
          return 32;
        }
      }
    } else {
      var mid = l + (h - l >> 1);
      if (arr[mid] == null) {
        var G__796 = l;
        var G__797 = mid;
        l = G__796;
        h = G__797;
        continue;
      } else {
        var G__798 = mid + 1;
        var G__799 = h;
        l = G__798;
        h = G__799;
        continue;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.nodes.first_child = function clojure$core$rrb_vector$nodes$first_child(node) {
  return node.arr[0];
};
clojure.core.rrb_vector.nodes.last_child = function clojure$core$rrb_vector$nodes$last_child(node) {
  var arr = node.arr;
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
    return arr[clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr) - 1];
  } else {
    return arr[clojure.core.rrb_vector.nodes.ranges.call(null, node)[32] - 1];
  }
};
clojure.core.rrb_vector.nodes.remove_leftmost_child = function clojure$core$rrb_vector$nodes$remove_leftmost_child(shift, parent) {
  var arr = parent.arr;
  if (arr[1] == null) {
    return null;
  } else {
    var r_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, parent);
    var new_arr = new Array(r_QMARK_ ? 32 : 33);
    cljs.core.array_copy.call(null, arr, 1, new_arr, 0, 31);
    if (!r_QMARK_) {
      var rngs_800 = clojure.core.rrb_vector.nodes.ranges.call(null, parent);
      var rng0_801 = rngs_800[0];
      var new_rngs_802 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var lim_803 = rngs_800[32];
      cljs.core.array_copy.call(null, rngs_800, 1, new_rngs_802, 0, lim_803 - 1);
      var i_804 = 0;
      while (true) {
        if (i_804 < lim_803) {
          new_rngs_802[i_804] = new_rngs_802[i_804] - rng0_801;
          var G__805 = i_804 + 1;
          i_804 = G__805;
          continue;
        } else {
        }
        break;
      }
      new_rngs_802[32] = rngs_800[32] - 1;
      new_rngs_802[rngs_800[32] - 1] = 0;
      new_arr[32] = new_rngs_802;
    } else {
    }
    return cljs.core.__GT_VectorNode.call(null, parent.edit, new_arr);
  }
};
clojure.core.rrb_vector.nodes.replace_leftmost_child = function clojure$core$rrb_vector$nodes$replace_leftmost_child(shift, parent, pcnt, child, d) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, parent)) {
    var step = 1 << shift;
    var rng0 = step - d;
    var ncnt = pcnt - d;
    var li = shift >> pcnt - 1 & 31;
    var arr = parent.arr;
    var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    new_arr[0] = child;
    cljs.core.array_copy.call(null, arr, 1, new_arr, 1, li);
    new_arr[32] = new_rngs;
    new_rngs[0] = rng0;
    new_rngs[li] = ncnt;
    new_rngs[32] = li + 1;
    var i_806 = 1;
    while (true) {
      if (i_806 <= li) {
        new_rngs[i_806] = new_rngs[i_806 - 1] + step;
        var G__807 = i_806 + 1;
        i_806 = G__807;
        continue;
      } else {
      }
      break;
    }
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  } else {
    var new_arr = cljs.core.aclone.call(null, parent.arr);
    var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, parent);
    var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var li = rngs[32] - 1;
    new_rngs[32] = rngs[32];
    new_arr[32] = new_rngs;
    new_arr[0] = child;
    var i_808 = 0;
    while (true) {
      if (i_808 <= li) {
        new_rngs[i_808] = rngs[i_808] - d;
        var G__809 = i_808 + 1;
        i_808 = G__809;
        continue;
      } else {
      }
      break;
    }
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  }
};
clojure.core.rrb_vector.nodes.replace_rightmost_child = function clojure$core$rrb_vector$nodes$replace_rightmost_child(shift, parent, child, d) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, parent)) {
    var arr = parent.arr;
    var i = clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr) - 1;
    if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, child)) {
      var new_arr = cljs.core.aclone.call(null, arr);
      new_arr[i] = child;
      return cljs.core.__GT_VectorNode.call(null, null, new_arr);
    } else {
      var arr__$1 = parent.arr;
      var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var step = 1 << shift;
      var rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      rngs[32] = i + 1;
      new_arr[32] = rngs;
      cljs.core.array_copy.call(null, arr__$1, 0, new_arr, 0, i);
      new_arr[i] = child;
      var j_810 = 0;
      var r_811 = step;
      while (true) {
        if (j_810 <= i) {
          rngs[j_810] = r_811;
          var G__812 = j_810 + 1;
          var G__813 = r_811 + step;
          j_810 = G__812;
          r_811 = G__813;
          continue;
        } else {
        }
        break;
      }
      rngs[i] = clojure.core.rrb_vector.nodes.last_range.call(null, child);
      return cljs.core.__GT_VectorNode.call(null, null, arr__$1);
    }
  } else {
    var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, parent);
    var new_rngs = cljs.core.aclone.call(null, rngs);
    var i = rngs[32] - 1;
    var new_arr = cljs.core.aclone.call(null, parent.arr);
    new_arr[i] = child;
    new_arr[32] = new_rngs;
    new_rngs[i] = rngs[i] + d;
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  }
};
clojure.core.rrb_vector.nodes.new_path_STAR_ = function clojure$core$rrb_vector$nodes$new_path_STAR_(shift, node) {
  var reg_QMARK_ = 32 === node.arr.length;
  var len = reg_QMARK_ ? 32 : 33;
  var arr = new Array(len);
  var rngs = !reg_QMARK_ ? function() {
    var G__814 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    G__814[0] = node.arr.length;
    G__814[32] = 1;
    return G__814;
  }() : null;
  var ret = cljs.core.__GT_VectorNode.call(null, null, arr);
  var arr_815__$1 = arr;
  var shift_816__$1 = shift;
  while (true) {
    if (shift_816__$1 === 5) {
      if (!reg_QMARK_) {
        arr_815__$1[32] = rngs;
      } else {
      }
      arr_815__$1[0] = node;
    } else {
      var a_817 = new Array(len);
      var e_818 = cljs.core.__GT_VectorNode.call(null, null, a_817);
      arr_815__$1[0] = e_818;
      if (!reg_QMARK_) {
        arr_815__$1[32] = rngs;
      } else {
      }
      var G__819 = a_817;
      var G__820 = shift_816__$1 - 5;
      arr_815__$1 = G__819;
      shift_816__$1 = G__820;
      continue;
    }
    break;
  }
  return ret;
};
clojure.core.rrb_vector.nodes.fold_tail = function clojure$core$rrb_vector$nodes$fold_tail(node, shift, cnt, tail) {
  var tlen = tail.length;
  var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node) && tlen === 32;
  var arr = node.arr;
  var li = clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr);
  var new_arr = new Array(reg_QMARK_ ? 32 : 33);
  var rngs = !clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node) ? clojure.core.rrb_vector.nodes.ranges.call(null, node) : null;
  var cret = shift === 5 ? cljs.core.__GT_VectorNode.call(null, null, tail) : clojure.core.rrb_vector.nodes.fold_tail.call(null, arr[li - 1], shift - 5, clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node) ? cljs.core.mod.call(null, cnt, 1 << shift) : function() {
    var li__$1 = rngs[32] - 1;
    if (li__$1 > 0) {
      return rngs[li__$1] - rngs[li__$1 - 1];
    } else {
      return rngs[0];
    }
  }(), tail);
  var new_rngs = !reg_QMARK_ ? cljs.core.truth_(rngs) ? cljs.core.aclone.call(null, rngs) : clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift, cnt) : null;
  if ((cret == null || shift === 5) && li === 32) {
    return null;
  } else {
    cljs.core.array_copy.call(null, arr, 0, new_arr, 0, li);
    if (reg_QMARK_) {
    } else {
      if (cret == null || shift === 5) {
        new_rngs[li] = (li > 0 ? new_rngs[li - 1] : 0 | 0) + tlen;
        new_rngs[32] = li + 1;
      } else {
        if (li > 0) {
          new_rngs[li - 1] = new_rngs[li - 1] + tlen;
        } else {
        }
        new_rngs[32] = li;
      }
    }
    if (!reg_QMARK_) {
      new_arr[32] = new_rngs;
    } else {
    }
    if (cret == null) {
      new_arr[li] = clojure.core.rrb_vector.nodes.new_path_STAR_.call(null, shift - 5, cljs.core.__GT_VectorNode.call(null, null, tail));
    } else {
      new_arr[shift === 5 ? li : li - 1] = cret;
    }
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  }
};
goog.provide("clojure.core.rrb_vector.trees");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.nodes");
clojure.core.rrb_vector.trees.tail_offset = function clojure$core$rrb_vector$trees$tail_offset(cnt, tail) {
  return cnt - tail.length;
};
clojure.core.rrb_vector.trees.array_for = function clojure$core$rrb_vector$trees$array_for(cnt, shift, root, tail, i) {
  if (0 <= i && i < cnt) {
    if (i >= clojure.core.rrb_vector.trees.tail_offset.call(null, cnt, tail)) {
      return tail;
    } else {
      var i__$1 = i;
      var node = root;
      var shift__$1 = shift;
      while (true) {
        if (shift__$1 === 0) {
          return node.arr;
        } else {
          if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
            var node__$1 = node.arr[i__$1 >> shift__$1 & 31];
            var shift__$2 = shift__$1 - 5;
            while (true) {
              if (shift__$2 === 0) {
                return node__$1.arr;
              } else {
                var G__823 = node__$1.arr[i__$1 >> shift__$2 & 31];
                var G__824 = shift__$2 - 5;
                node__$1 = G__823;
                shift__$2 = G__824;
                continue;
              }
              break;
            }
          } else {
            var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, node);
            var j = function() {
              var j = i__$1 >> shift__$1 & 31;
              while (true) {
                if (i__$1 < rngs[j]) {
                  return j;
                } else {
                  var G__825 = j + 1;
                  j = G__825;
                  continue;
                }
                break;
              }
            }();
            var i__$2 = j > 0 ? i__$1 - rngs[j - 1] : i__$1;
            var G__826 = i__$2;
            var G__827 = node.arr[j];
            var G__828 = shift__$1 - 5;
            i__$1 = G__826;
            node = G__827;
            shift__$1 = G__828;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, cnt);
  }
};
clojure.core.rrb_vector.trees.new_path = function clojure$core$rrb_vector$trees$new_path(tail, edit, shift, current_node) {
  if (tail.length === 32) {
    var s = 0;
    var n = current_node;
    while (true) {
      if (s === shift) {
        return n;
      } else {
        var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var ret = cljs.core.__GT_VectorNode.call(null, edit, arr);
        arr[0] = n;
        var G__829 = s + 5;
        var G__830 = ret;
        s = G__829;
        n = G__830;
        continue;
      }
      break;
    }
  } else {
    var s = 0;
    var n = current_node;
    while (true) {
      if (s === shift) {
        return n;
      } else {
        var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var ret = cljs.core.__GT_VectorNode.call(null, edit, arr);
        arr[0] = n;
        arr[32] = rngs;
        rngs[32] = 1;
        rngs[0] = tail.length;
        var G__831 = s + 5;
        var G__832 = ret;
        s = G__831;
        n = G__832;
        continue;
      }
      break;
    }
  }
};
clojure.core.rrb_vector.trees.push_tail = function clojure$core$rrb_vector$trees$push_tail(shift, cnt, root_edit, current_node, tail_node) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, current_node)) {
    var arr = cljs.core.aclone.call(null, current_node.arr);
    var ret = cljs.core.__GT_VectorNode.call(null, current_node.edit, arr);
    var n_833 = ret;
    var shift_834__$1 = shift;
    while (true) {
      var arr_835__$1 = n_833.arr;
      var subidx_836 = cnt - 1 >> shift_834__$1 & 31;
      if (shift_834__$1 === 5) {
        arr_835__$1[subidx_836] = tail_node;
      } else {
        var temp__5733__auto___837 = arr_835__$1[subidx_836];
        if (cljs.core.truth_(temp__5733__auto___837)) {
          var child_838 = temp__5733__auto___837;
          var new_carr_839 = cljs.core.aclone.call(null, child_838.arr);
          var new_child_840 = cljs.core.__GT_VectorNode.call(null, root_edit, new_carr_839);
          arr_835__$1[subidx_836] = new_child_840;
          var G__841 = new_child_840;
          var G__842 = shift_834__$1 - 5;
          n_833 = G__841;
          shift_834__$1 = G__842;
          continue;
        } else {
          arr_835__$1[subidx_836] = clojure.core.rrb_vector.trees.new_path.call(null, tail_node.arr, root_edit, shift_834__$1 - 5, tail_node);
        }
      }
      break;
    }
    return ret;
  } else {
    var arr = cljs.core.aclone.call(null, current_node.arr);
    var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, current_node);
    var li = rngs[32] - 1;
    var ret = cljs.core.__GT_VectorNode.call(null, current_node.edit, arr);
    var cret = shift === 5 ? null : function() {
      var child = arr[li];
      var ccnt = li > 0 ? rngs[li] - rngs[li - 1] : rngs[0];
      if (!(ccnt === 1 << shift)) {
        return clojure.core.rrb_vector.trees.push_tail.call(null, shift - 5, ccnt + 1, root_edit, child, tail_node);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(cret)) {
      arr[li] = cret;
      rngs[li] = rngs[li] + 32;
      return ret;
    } else {
      arr[li + 1] = clojure.core.rrb_vector.trees.new_path.call(null, tail_node.arr, root_edit, shift - 5, tail_node);
      rngs[li + 1] = rngs[li] + 32;
      rngs[32] = rngs[32] + 1;
      return ret;
    }
  }
};
clojure.core.rrb_vector.trees.pop_tail = function clojure$core$rrb_vector$trees$pop_tail(shift, cnt, root_edit, current_node) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, current_node)) {
    var subidx = cnt - 1 >> shift & 31;
    if (shift > 5) {
      var new_child = clojure.core.rrb_vector.trees.pop_tail.call(null, shift - 5, cnt, root_edit, current_node.arr[subidx]);
      if (new_child == null && subidx === 0) {
        return null;
      } else {
        var arr = cljs.core.aclone.call(null, current_node.arr);
        arr[subidx] = new_child;
        return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = cljs.core.aclone.call(null, current_node.arr);
        arr[subidx] = null;
        return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
      }
    }
  } else {
    var subidx = cnt - 1 >> shift & 31;
    var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, current_node);
    var subidx__$1 = function() {
      var subidx__$1 = subidx;
      while (true) {
        if ((rngs[subidx__$1 + 1] | 0) === 0 || subidx__$1 === 31) {
          return subidx__$1;
        } else {
          var G__843 = subidx__$1 + 1;
          subidx__$1 = G__843;
          continue;
        }
        break;
      }
    }();
    var new_rngs = cljs.core.aclone.call(null, rngs);
    if (shift > 5) {
      var child = current_node.arr[subidx__$1];
      var child_cnt = subidx__$1 === 0 ? rngs[0] : rngs[subidx__$1] - rngs[subidx__$1 - 1];
      var new_child = clojure.core.rrb_vector.trees.pop_tail.call(null, shift - 5, child_cnt, root_edit, child);
      if (new_child == null && subidx__$1 === 0) {
        return null;
      } else {
        if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, child)) {
          var arr = cljs.core.aclone.call(null, current_node.arr);
          new_rngs[subidx__$1] = new_rngs[subidx__$1] - 32;
          arr[subidx__$1] = new_child;
          arr[32] = new_rngs;
          if (new_child == null) {
            new_rngs[32] = new_rngs[32] - 1;
          } else {
          }
          return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
        } else {
          var rng = clojure.core.rrb_vector.nodes.last_range.call(null, child);
          var diff = rng - (cljs.core.truth_(new_child) ? clojure.core.rrb_vector.nodes.last_range.call(null, new_child) : 0);
          var arr = cljs.core.aclone.call(null, current_node.arr);
          new_rngs[subidx__$1] = new_rngs[subidx__$1] - diff;
          arr[subidx__$1] = new_child;
          arr[32] = new_rngs;
          if (new_child == null) {
            new_rngs[32] = new_rngs[32] - 1;
          } else {
          }
          return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
        }
      }
    } else {
      if (subidx__$1 === 0) {
        return null;
      } else {
        var arr = cljs.core.aclone.call(null, current_node.arr);
        var child = arr[subidx__$1];
        var new_rngs__$1 = cljs.core.aclone.call(null, rngs);
        arr[subidx__$1] = null;
        arr[32] = new_rngs__$1;
        new_rngs__$1[subidx__$1] = 0;
        new_rngs__$1[32] = new_rngs__$1[32] - 1;
        return cljs.core.__GT_VectorNode.call(null, root_edit, arr);
      }
    }
  }
};
clojure.core.rrb_vector.trees.do_assoc = function clojure$core$rrb_vector$trees$do_assoc(shift, current_node, i, val) {
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, current_node)) {
    var node = clojure.core.rrb_vector.nodes.clone.call(null, shift, current_node);
    var shift_844__$1 = shift;
    var node_845__$1 = node;
    while (true) {
      if (shift_844__$1 === 0) {
        var arr_846 = node_845__$1.arr;
        arr_846[i & 31] = val;
      } else {
        var arr_847 = node_845__$1.arr;
        var subidx_848 = i >> shift_844__$1 & 31;
        var child_849 = clojure.core.rrb_vector.nodes.clone.call(null, shift_844__$1, arr_847[subidx_848]);
        arr_847[subidx_848] = child_849;
        var G__850 = shift_844__$1 - 5;
        var G__851 = child_849;
        shift_844__$1 = G__850;
        node_845__$1 = G__851;
        continue;
      }
      break;
    }
    return node;
  } else {
    var arr = cljs.core.aclone.call(null, current_node.arr);
    var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, current_node);
    var subidx = i >> shift & 31;
    var subidx__$1 = function() {
      var subidx__$1 = subidx;
      while (true) {
        if (i < (rngs[subidx__$1] | 0)) {
          return subidx__$1;
        } else {
          var G__852 = subidx__$1 + 1;
          subidx__$1 = G__852;
          continue;
        }
        break;
      }
    }();
    var i__$1 = subidx__$1 === 0 ? i : i - rngs[subidx__$1 - 1];
    arr[subidx__$1] = clojure.core.rrb_vector.trees.do_assoc.call(null, shift - 5, arr[subidx__$1], i__$1, val);
    return cljs.core.__GT_VectorNode.call(null, current_node.edit, arr);
  }
};
goog.provide("clojure.core.rrb_vector.transients");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.nodes");
goog.require("clojure.core.rrb_vector.trees");
clojure.core.rrb_vector.transients.ensure_editable = function clojure$core$rrb_vector$transients$ensure_editable(edit, node) {
  if (node.edit === edit) {
    return node;
  } else {
    var new_arr = cljs.core.aclone.call(null, node.arr);
    if (33 === new_arr.length) {
      new_arr[32] = cljs.core.aclone.call(null, new_arr[32]);
    } else {
    }
    return new cljs.core.VectorNode(edit, new_arr);
  }
};
clojure.core.rrb_vector.transients.editable_root = function clojure$core$rrb_vector$transients$editable_root(root) {
  return new cljs.core.VectorNode({}, cljs.core.aclone.call(null, root.arr));
};
clojure.core.rrb_vector.transients.editable_tail = function clojure$core$rrb_vector$transients$editable_tail(tail) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy.call(null, tail, 0, ret, 0, tail.length);
  return ret;
};
clojure.core.rrb_vector.transients.push_tail_BANG_ = function clojure$core$rrb_vector$transients$push_tail_BANG_(shift, cnt, root_edit, current_node, tail_node) {
  var ret = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, current_node);
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, ret)) {
    var n_857 = ret;
    var shift_858__$1 = shift;
    while (true) {
      var arr_859 = n_857.arr;
      var subidx_860 = cnt - 1 >> shift_858__$1 & 31;
      if (shift_858__$1 === 5) {
        arr_859[subidx_860] = tail_node;
      } else {
        var child_861 = arr_859[subidx_860];
        if (child_861 == null) {
          arr_859[subidx_860] = clojure.core.rrb_vector.trees.new_path.call(null, tail_node.arr, root_edit, shift_858__$1 - 5, tail_node);
        } else {
          var editable_child_862 = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, child_861);
          arr_859[subidx_860] = editable_child_862;
          var G__863 = editable_child_862;
          var G__864 = shift_858__$1 - 5;
          n_857 = G__863;
          shift_858__$1 = G__864;
          continue;
        }
      }
      break;
    }
    return ret;
  } else {
    var arr = ret.arr;
    var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, ret);
    var li = rngs[32] - 1;
    var cret = shift === 5 ? null : function() {
      var child = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, arr[li]);
      var ccnt = li > 0 ? rngs[li] - rngs[li - 1] : rngs[0];
      if (!(ccnt === 1 << shift)) {
        return clojure.core.rrb_vector.transients.push_tail_BANG_.call(null, shift - 5, ccnt + 1, root_edit, child, tail_node);
      } else {
        return null;
      }
    }();
    if (cljs.core.truth_(cret)) {
      arr[li] = cret;
      rngs[li] = rngs[li] + 32;
      return ret;
    } else {
      arr[li + 1] = clojure.core.rrb_vector.trees.new_path.call(null, tail_node.arr, root_edit, shift - 5, tail_node);
      rngs[li + 1] = rngs[li] + 32;
      rngs[32] = rngs[32] + 1;
      return ret;
    }
  }
};
clojure.core.rrb_vector.transients.pop_tail_BANG_ = function clojure$core$rrb_vector$transients$pop_tail_BANG_(shift, cnt, root_edit, current_node) {
  var ret = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, current_node);
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, ret)) {
    var subidx = cnt - 1 >> shift & 31;
    if (shift > 5) {
      var child = clojure.core.rrb_vector.transients.pop_tail_BANG_.call(null, shift - 5, cnt, root_edit, ret.arr[subidx]);
      if (child == null && subidx === 0) {
        return null;
      } else {
        var arr = ret.arr;
        arr[subidx] = child;
        return ret;
      }
    } else {
      if (subidx === 0) {
        return null;
      } else {
        var arr = ret.arr;
        arr[subidx] = null;
        return ret;
      }
    }
  } else {
    var subidx = cnt - 1 >> shift & 31;
    var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, ret);
    var subidx__$1 = function() {
      var subidx__$1 = subidx;
      while (true) {
        if ((rngs[subidx__$1 + 1] | 0) === 0 || subidx__$1 === 31) {
          return subidx__$1;
        } else {
          var G__865 = subidx__$1 + 1;
          subidx__$1 = G__865;
          continue;
        }
        break;
      }
    }();
    if (shift > 5) {
      var child = ret.arr[subidx__$1];
      var child_cnt = subidx__$1 === 0 ? rngs[0] : rngs[subidx__$1] - rngs[subidx__$1 - 1];
      var new_child = clojure.core.rrb_vector.transients.pop_tail_BANG_.call(null, shift - 5, child_cnt, root_edit, child);
      if (new_child == null && subidx__$1 === 0) {
        return null;
      } else {
        if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, child)) {
          var arr = ret.arr;
          rngs[subidx__$1] = rngs[subidx__$1] - 32;
          arr[subidx__$1] = new_child;
          if (new_child == null) {
            rngs[32] = rngs[32] - 1;
          } else {
          }
          return ret;
        } else {
          var rng = clojure.core.rrb_vector.nodes.last_range.call(null, child);
          var diff = rng - (cljs.core.truth_(new_child) ? clojure.core.rrb_vector.nodes.last_range.call(null, new_child) : 0);
          var arr = ret.arr;
          rngs[subidx__$1] = rngs[subidx__$1] - diff;
          arr[subidx__$1] = new_child;
          if (new_child == null) {
            rngs[32] = rngs[32] - 1;
          } else {
          }
          return ret;
        }
      }
    } else {
      if (subidx__$1 === 0) {
        return null;
      } else {
        var arr = ret.arr;
        var child = arr[subidx__$1];
        arr[subidx__$1] = null;
        rngs[subidx__$1] = 0;
        rngs[32] = rngs[32] - 1;
        return ret;
      }
    }
  }
};
clojure.core.rrb_vector.transients.do_assoc_BANG_ = function clojure$core$rrb_vector$transients$do_assoc_BANG_(shift, root_edit, current_node, i, val) {
  var ret = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, current_node);
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, ret)) {
    var shift_866__$1 = shift;
    var node_867 = ret;
    while (true) {
      if (shift_866__$1 === 0) {
        var arr_868 = node_867.arr;
        arr_868[i & 31] = val;
      } else {
        var arr_869 = node_867.arr;
        var subidx_870 = i >> shift_866__$1 & 31;
        var child_871 = clojure.core.rrb_vector.transients.ensure_editable.call(null, root_edit, arr_869[subidx_870]);
        arr_869[subidx_870] = child_871;
        var G__872 = shift_866__$1 - 5;
        var G__873 = child_871;
        shift_866__$1 = G__872;
        node_867 = G__873;
        continue;
      }
      break;
    }
  } else {
    var arr_874 = ret.arr;
    var rngs_875 = clojure.core.rrb_vector.nodes.ranges.call(null, ret);
    var subidx_876 = i >> shift & 31;
    var subidx_877__$1 = function() {
      var subidx_877__$1 = subidx_876;
      while (true) {
        if (i < (rngs_875[subidx_877__$1] | 0)) {
          return subidx_877__$1;
        } else {
          var G__879 = subidx_877__$1 + 1;
          subidx_877__$1 = G__879;
          continue;
        }
        break;
      }
    }();
    var i_878__$1 = subidx_877__$1 === 0 ? i : i - rngs_875[subidx_877__$1 - 1];
    arr_874[subidx_877__$1] = clojure.core.rrb_vector.transients.do_assoc_BANG_.call(null, shift - 5, root_edit, arr_874[subidx_877__$1], i_878__$1, val);
  }
  return ret;
};
goog.provide("clojure.core.rrb_vector.rrbt");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.protocols");
goog.require("clojure.core.rrb_vector.nodes");
goog.require("clojure.core.rrb_vector.trees");
goog.require("clojure.core.rrb_vector.transients");
clojure.core.rrb_vector.rrbt.rrbt_concat_threshold = 33;
clojure.core.rrb_vector.rrbt.max_extra_search_steps = 2;
clojure.core.rrb_vector.rrbt.AsRRBT = function() {
};
clojure.core.rrb_vector.rrbt._as_rrbt = function clojure$core$rrb_vector$rrbt$_as_rrbt(v) {
  if (!(v == null) && !(v.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 == null)) {
    return v.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1(v);
  } else {
    var x__4487__auto__ = v == null ? null : v;
    var m__4488__auto__ = clojure.core.rrb_vector.rrbt._as_rrbt[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, v);
    } else {
      var m__4485__auto__ = clojure.core.rrb_vector.rrbt._as_rrbt["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, v);
      } else {
        throw cljs.core.missing_protocol.call(null, "AsRRBT.-as-rrbt", v);
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2179858668;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_.call(null, coll);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "(", " ", ")", opts, this$__$1);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next.call(null, coll__$1);
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_coll.call(null, coll__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.call(null, coll__$1, other);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, self__.meta);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.call(null, cljs.core.subvec.call(null, self__.vec, self__.i + self__.off, cljs.core.count.call(null, self__.vec)), f, start);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest.call(null, coll__$1);
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.call(null, self__.node, self__.off);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.call(null, o, coll__$1);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var l = self__.node.length;
  var s = self__.i + l < cljs.core._count.call(null, self__.vec) ? clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, self__.vec, self__.i + l, 0) : null;
  if (s == null) {
    return null;
  } else {
    return s;
  }
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.cljs$lang$type = true;
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.cljs$lang$ctorStr = "clojure.core.rrb-vector.rrbt/RRBChunkedSeq";
clojure.core.rrb_vector.rrbt.RRBChunkedSeq.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "clojure.core.rrb-vector.rrbt/RRBChunkedSeq");
};
clojure.core.rrb_vector.rrbt.__GT_RRBChunkedSeq = function clojure$core$rrb_vector$rrbt$__GT_RRBChunkedSeq(vec, node, i, off, meta, __hash) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, node, i, off, meta, __hash);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq = function clojure$core$rrb_vector$rrbt$rrb_chunked_seq(var_args) {
  var G__883 = arguments.length;
  switch(G__883) {
    case 3:
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  var cnt = vec.cnt;
  var shift = vec.shift;
  var root = vec.root;
  var tail = vec.tail;
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, clojure.core.rrb_vector.trees.array_for.call(null, cnt, shift, root, tail, i), i, off, null, null);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, node, i, off, null, null);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new clojure.core.rrb_vector.rrbt.RRBChunkedSeq(vec, node, i, off, meta, null);
};
clojure.core.rrb_vector.rrbt.rrb_chunked_seq.cljs$lang$maxFixedArity = 5;
clojure.core.rrb_vector.rrbt.slice_right = function clojure$core$rrb_vector$rrbt$slice_right(node, shift, end) {
  if (shift === 0) {
    var arr = node.arr;
    var new_arr = new Array(end);
    cljs.core.array_copy.call(null, arr, 0, new_arr, 0, end);
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  } else {
    var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node);
    var rngs = !reg_QMARK_ ? clojure.core.rrb_vector.nodes.ranges.call(null, node) : null;
    var i = end - 1 >> shift & 31;
    var i__$1 = reg_QMARK_ ? i : function() {
      var j = i;
      while (true) {
        if (end <= rngs[j]) {
          return j;
        } else {
          var G__885 = j + 1;
          j = G__885;
          continue;
        }
        break;
      }
    }();
    var child_end = reg_QMARK_ ? function() {
      var ce = cljs.core.mod.call(null, end, 1 << shift);
      if (ce === 0) {
        return 1 << shift;
      } else {
        return ce;
      }
    }() : i__$1 > 0 ? end - rngs[i__$1 - 1] : end;
    var arr = node.arr;
    var new_child = clojure.core.rrb_vector.rrbt.slice_right.call(null, arr[i__$1], shift - 5, child_end);
    var regular_child_QMARK_ = shift === 5 ? 32 === new_child.arr.length : clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, new_child);
    var new_arr = new Array(reg_QMARK_ && regular_child_QMARK_ ? 32 : 33);
    var new_child_rng = regular_child_QMARK_ ? function() {
      var m = cljs.core.mod.call(null, child_end, 1 << shift);
      if (m === 0) {
        return 1 << shift;
      } else {
        return m;
      }
    }() : shift === 5 ? new_child.arr.length : clojure.core.rrb_vector.nodes.last_range.call(null, new_child);
    cljs.core.array_copy.call(null, arr, 0, new_arr, 0, i__$1);
    new_arr[i__$1] = new_child;
    if (!(reg_QMARK_ && regular_child_QMARK_)) {
      var new_rngs_886 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var step_887 = 1 << shift;
      if (reg_QMARK_) {
        var n__4666__auto___888 = i__$1;
        var j_889 = 0;
        while (true) {
          if (j_889 < n__4666__auto___888) {
            new_rngs_886[j_889] = (j_889 + 1) * step_887;
            var G__890 = j_889 + 1;
            j_889 = G__890;
            continue;
          } else {
          }
          break;
        }
      } else {
        var n__4666__auto___891 = i__$1;
        var j_892 = 0;
        while (true) {
          if (j_892 < n__4666__auto___891) {
            new_rngs_886[j_892] = rngs[j_892];
            var G__893 = j_892 + 1;
            j_892 = G__893;
            continue;
          } else {
          }
          break;
        }
      }
      new_rngs_886[i__$1] = (i__$1 > 0 ? new_rngs_886[i__$1 - 1] : 0) + new_child_rng;
      new_rngs_886[32] = i__$1 + 1;
      new_arr[32] = new_rngs_886;
    } else {
    }
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  }
};
clojure.core.rrb_vector.rrbt.slice_left = function clojure$core$rrb_vector$rrbt$slice_left(node, shift, start, end) {
  if (shift === 0) {
    var arr = node.arr;
    var new_len = arr.length - start;
    var new_arr = new Array(new_len);
    cljs.core.array_copy.call(null, arr, start, new_arr, 0, new_len);
    return cljs.core.__GT_VectorNode.call(null, null, new_arr);
  } else {
    var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node);
    var arr = node.arr;
    var rngs = !reg_QMARK_ ? clojure.core.rrb_vector.nodes.ranges.call(null, node) : null;
    var i = start >> shift & 31;
    var i__$1 = reg_QMARK_ ? i : function() {
      var j = i;
      while (true) {
        if (start < rngs[j]) {
          return j;
        } else {
          var G__894 = j + 1;
          j = G__894;
          continue;
        }
        break;
      }
    }();
    var len = reg_QMARK_ ? function() {
      var i__$2 = i__$1;
      while (true) {
        if (i__$2 === 32 || arr[i__$2] == null) {
          return i__$2;
        } else {
          var G__895 = i__$2 + 1;
          i__$2 = G__895;
          continue;
        }
        break;
      }
    }() : rngs[32];
    var child_start = i__$1 > 0 ? start - (reg_QMARK_ ? i__$1 * (1 << shift) : rngs[i__$1 - 1]) : start;
    var child_end = function() {
      var x__4276__auto__ = 1 << shift;
      var y__4277__auto__ = i__$1 > 0 ? end - (reg_QMARK_ ? i__$1 * (1 << shift) : rngs[i__$1 - 1]) : end;
      return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
    }();
    var new_child = clojure.core.rrb_vector.rrbt.slice_left.call(null, arr[i__$1], shift - 5, child_start, child_end);
    var new_len = len - i__$1;
    var new_len__$1 = new_child == null ? new_len - 1 : new_len;
    if (new_len__$1 === 0) {
      return null;
    } else {
      if (reg_QMARK_) {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var rngs__$1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var rng0 = new_child == null || shift === 5 || clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, new_child) ? (1 << shift) - (start >> shift - 5 & 31) : clojure.core.rrb_vector.nodes.last_range.call(null, new_child);
        var step = 1 << shift;
        var j_896 = 0;
        var r_897 = rng0;
        while (true) {
          if (j_896 < new_len__$1) {
            rngs__$1[j_896] = r_897;
            var G__898 = j_896 + 1;
            var G__899 = r_897 + step;
            j_896 = G__898;
            r_897 = G__899;
            continue;
          } else {
          }
          break;
        }
        rngs__$1[new_len__$1 - 1] = end - start;
        rngs__$1[32] = new_len__$1;
        cljs.core.array_copy.call(null, arr, new_child == null ? i__$1 + 1 : i__$1, new_arr, 0, new_len__$1);
        if (!(new_child == null)) {
          new_arr[0] = new_child;
        } else {
        }
        new_arr[32] = rngs__$1;
        return cljs.core.__GT_VectorNode.call(null, node.edit, new_arr);
      } else {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var j_900 = 0;
        var i_901__$2 = i__$1;
        while (true) {
          if (j_900 < new_len__$1) {
            new_rngs[j_900] = rngs[i_901__$2] - start;
            var G__902 = j_900 + 1;
            var G__903 = i_901__$2 + 1;
            j_900 = G__902;
            i_901__$2 = G__903;
            continue;
          } else {
          }
          break;
        }
        new_rngs[32] = new_len__$1;
        cljs.core.array_copy.call(null, arr, new_child == null ? i__$1 + 1 : i__$1, new_arr, 0, new_len__$1);
        if (!(new_child == null)) {
          new_arr[0] = new_child;
        } else {
        }
        new_arr[32] = new_rngs;
        return cljs.core.__GT_VectorNode.call(null, node.edit, new_arr);
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector = function(cnt, shift, root, tail, meta, __hash) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2315152159;
  this.cljs$lang$protocol_mask$partition1$ = 2052;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return cljs.core.pr_str_STAR_.call(null, this$);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, k) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, k, null);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, k, not_found) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, k, not_found);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this$, f, init) {
  var self__ = this;
  var this$__$1 = this;
  var i = 0;
  var j = 0;
  var init__$1 = init;
  var arr = clojure.core.rrb_vector.trees.array_for.call(null, self__.cnt, self__.shift, self__.root, self__.tail, i);
  var lim = arr.length - 1;
  var step = lim + 1;
  while (true) {
    var init__$2 = f.call(null, init__$1, i + j, arr[j]);
    if (cljs.core.reduced_QMARK_.call(null, init__$2)) {
      return cljs.core.deref.call(null, init__$2);
    } else {
      if (j < lim) {
        var G__908 = i;
        var G__909 = j + 1;
        var G__910 = init__$2;
        var G__911 = arr;
        var G__912 = lim;
        var G__913 = step;
        i = G__908;
        j = G__909;
        init__$1 = G__910;
        arr = G__911;
        lim = G__912;
        step = G__913;
        continue;
      } else {
        var i__$1 = i + step;
        if (i__$1 < self__.cnt) {
          var arr__$1 = clojure.core.rrb_vector.trees.array_for.call(null, self__.cnt, self__.shift, self__.root, self__.tail, i__$1);
          var len = arr__$1.length;
          var lim__$1 = len - 1;
          var G__914 = i__$1;
          var G__915 = 0;
          var G__916 = init__$2;
          var G__917 = arr__$1;
          var G__918 = lim__$1;
          var G__919 = len;
          i = G__914;
          j = G__915;
          init__$1 = G__916;
          arr = G__917;
          lim = G__918;
          step = G__919;
          continue;
        } else {
          return init__$2;
        }
      }
    }
    break;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(this$, i) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    var tail_off = self__.cnt - self__.tail.length;
    if (tail_off <= i) {
      return self__.tail[i - tail_off];
    } else {
      var i__$1 = i;
      var node = self__.root;
      var shift__$1 = self__.shift;
      while (true) {
        if (shift__$1 === 0) {
          var arr = node.arr;
          return arr[i__$1 >> shift__$1 & 31];
        } else {
          if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
            var arr = node.arr;
            var idx = i__$1 >> shift__$1 & 31;
            var i__$2 = i__$1;
            var node__$1 = arr[idx];
            var shift__$2 = shift__$1 - 5;
            while (true) {
              var arr__$1 = node__$1.arr;
              var idx__$1 = i__$2 >> shift__$2 & 31;
              if (shift__$2 === 0) {
                return arr__$1[idx__$1];
              } else {
                var G__920 = i__$2;
                var G__921 = arr__$1[idx__$1];
                var G__922 = shift__$2 - 5;
                i__$2 = G__920;
                node__$1 = G__921;
                shift__$2 = G__922;
                continue;
              }
              break;
            }
          } else {
            var arr = node.arr;
            var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, node);
            var idx = function() {
              var j = i__$1 >> shift__$1 & 31;
              while (true) {
                if (i__$1 < rngs[j]) {
                  return j;
                } else {
                  var G__923 = j + 1;
                  j = G__923;
                  continue;
                }
                break;
              }
            }();
            var i__$2 = idx === 0 ? i__$1 : i__$1 - rngs[idx - 1];
            var G__924 = i__$2;
            var G__925 = arr[idx];
            var G__926 = shift__$1 - 5;
            i__$1 = G__924;
            node = G__925;
            shift__$1 = G__926;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return cljs.core.vector_index_out_of_bounds.call(null, i, self__.cnt);
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(this$, i, not_found) {
  var self__ = this;
  var this$__$1 = this;
  if (i >= 0 && i < self__.cnt) {
    return cljs.core._nth.call(null, this$__$1, i);
  } else {
    return not_found;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this$, writer, opts) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, this$__$1);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(this$, i, val) {
  var self__ = this;
  var this$__$1 = this;
  if (0 <= i && i < self__.cnt) {
    var tail_off = clojure.core.rrb_vector.trees.tail_offset.call(null, self__.cnt, self__.tail);
    if (i >= tail_off) {
      var new_tail = new Array(self__.tail.length);
      var idx = i - tail_off;
      cljs.core.array_copy.call(null, self__.tail, 0, new_tail, 0, self__.tail.length);
      new_tail[idx] = val;
      return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, self__.root, new_tail, self__.meta, null);
    } else {
      return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, clojure.core.rrb_vector.trees.do_assoc.call(null, self__.shift, self__.root, i, val), self__.tail, self__.meta, null);
    }
  } else {
    if (i === self__.cnt) {
      return cljs.core._conj.call(null, this$__$1, val);
    } else {
      return cljs.core.vector_index_out_of_bounds.call(null, i, self__.cnt);
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.meta;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.cnt;
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, 0);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._nth.call(null, this$__$1, 1);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.call(null, this$__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (self__.tail.length > 1) {
        var new_tail = new Array(self__.tail.length - 1);
        cljs.core.array_copy.call(null, self__.tail, 0, new_tail, 0, new_tail.length);
        return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift, self__.root, new_tail, self__.meta, null);
      } else {
        var new_tail = clojure.core.rrb_vector.trees.array_for.call(null, self__.cnt, self__.shift, self__.root, self__.tail, self__.cnt - 2);
        var root_cnt = clojure.core.rrb_vector.trees.tail_offset.call(null, self__.cnt, self__.tail);
        var new_root = clojure.core.rrb_vector.trees.pop_tail.call(null, self__.shift, root_cnt, self__.root.edit, self__.root);
        if (new_root == null) {
          return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift, clojure.core.rrb_vector.nodes.empty_node, new_tail, self__.meta, null);
        } else {
          if (self__.shift > 5 && new_root.arr[1] == null) {
            return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift - 5, new_root.arr[0], new_tail, self__.meta, null);
          } else {
            return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt - 1, self__.shift, new_root, new_tail, self__.meta, null);
          }
        }
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(this$__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = cljs.core.hash_coll.call(null, this$__$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.equiv_sequential.call(null, this$__$1, that);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return clojure.core.rrb_vector.rrbt.__GT_Transient.call(null, self__.cnt, self__.shift, clojure.core.rrb_vector.transients.editable_root.call(null, self__.root), clojure.core.rrb_vector.transients.editable_tail.call(null, self__.tail), self__.tail.length);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, self__.meta);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 = function(this$, start, end) {
  var self__ = this;
  var this$__$1 = this;
  var new_cnt = end - start;
  if (start < 0 || end > self__.cnt) {
    throw new Error("vector index out of bounds");
  } else {
    if (start === end) {
      return cljs.core.empty.call(null, this$__$1);
    } else {
      if (start > end) {
        throw new Error("start index greater than end index");
      } else {
        var tail_off = clojure.core.rrb_vector.trees.tail_offset.call(null, self__.cnt, self__.tail);
        if (start >= tail_off) {
          var new_tail = new Array(new_cnt);
          cljs.core.array_copy.call(null, self__.tail, start - tail_off, new_tail, 0, new_cnt);
          return new clojure.core.rrb_vector.rrbt.Vector(new_cnt, 5, clojure.core.rrb_vector.nodes.empty_node, new_tail, self__.meta, null);
        } else {
          var tail_cut_QMARK_ = end > tail_off;
          var new_root = tail_cut_QMARK_ ? self__.root : clojure.core.rrb_vector.rrbt.slice_right.call(null, self__.root, self__.shift, end);
          var new_root__$1 = start === 0 ? new_root : clojure.core.rrb_vector.rrbt.slice_left.call(null, new_root, self__.shift, start, function() {
            var x__4276__auto__ = end;
            var y__4277__auto__ = tail_off;
            return x__4276__auto__ < y__4277__auto__ ? x__4276__auto__ : y__4277__auto__;
          }());
          var new_tail = tail_cut_QMARK_ ? function() {
            var new_len = end - tail_off;
            var new_tail = new Array(new_len);
            cljs.core.array_copy.call(null, self__.tail, 0, new_tail, 0, new_len);
            return new_tail;
          }() : clojure.core.rrb_vector.trees.array_for.call(null, new_cnt, self__.shift, new_root__$1, [], new_cnt - 1);
          var new_root__$2 = tail_cut_QMARK_ ? new_root__$1 : clojure.core.rrb_vector.trees.pop_tail.call(null, self__.shift, new_cnt, new_root__$1.edit, new_root__$1);
          if (new_root__$2 == null) {
            return new clojure.core.rrb_vector.rrbt.Vector(new_cnt, 5, clojure.core.rrb_vector.nodes.empty_node, new_tail, self__.meta, null);
          } else {
            var r = new_root__$2;
            var s = self__.shift;
            while (true) {
              if (s > 5 && r.arr[1] == null) {
                var G__927 = r.arr[0];
                var G__928 = s - 5;
                r = G__927;
                s = G__928;
                continue;
              } else {
                return new clojure.core.rrb_vector.rrbt.Vector(new_cnt, s, r, new_tail, self__.meta, null);
              }
              break;
            }
          }
        }
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(this$, f) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(this$, f, start) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ci_reduce.call(null, this$__$1, f, start);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this$, k, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._assoc_n.call(null, this$__$1, k, v);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (clojure.core.rrb_vector.trees.tail_offset.call(null, self__.cnt, self__.tail) === 0) {
      return cljs.core.array_seq.call(null, self__.tail);
    } else {
      return clojure.core.rrb_vector.rrbt.rrb_chunked_seq.call(null, this$__$1, 0, 0);
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, meta__$1) {
  var self__ = this;
  var this$__$1 = this;
  return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, self__.root, self__.tail, meta__$1, self__.__hash);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, val) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.tail.length < 32) {
    var tail_len = self__.tail.length;
    var new_tail = new Array(tail_len + 1);
    cljs.core.array_copy.call(null, self__.tail, 0, new_tail, 0, tail_len);
    new_tail[tail_len] = val;
    return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift, self__.root, new_tail, self__.meta, null);
  } else {
    var tail_node = cljs.core.__GT_VectorNode.call(null, self__.root.edit, self__.tail);
    var new_tail = function() {
      var new_arr = [null];
      new_arr[0] = val;
      return new_arr;
    }();
    if (clojure.core.rrb_vector.nodes.overflow_QMARK_.call(null, self__.root, self__.shift, self__.cnt)) {
      if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, self__.root)) {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_root = cljs.core.__GT_VectorNode.call(null, self__.root.edit, new_arr);
        var G__905_929 = new_arr;
        G__905_929[0] = self__.root;
        G__905_929[1] = clojure.core.rrb_vector.trees.new_path.call(null, self__.tail, self__.root.edit, self__.shift, tail_node);
        return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift + 5, new_root, new_tail, self__.meta, null);
      } else {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_root = cljs.core.__GT_VectorNode.call(null, self__.root.edit, new_arr);
        var root_total_range = clojure.core.rrb_vector.nodes.ranges.call(null, self__.root)[31];
        var G__906_930 = new_arr;
        G__906_930[0] = self__.root;
        G__906_930[1] = clojure.core.rrb_vector.trees.new_path.call(null, self__.tail, self__.root.edit, self__.shift, tail_node);
        G__906_930[32] = new_rngs;
        var G__907_931 = new_rngs;
        G__907_931[0] = root_total_range;
        G__907_931[1] = root_total_range + 32;
        G__907_931[32] = 2;
        return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift + 5, new_root, new_tail, self__.meta, null);
      }
    } else {
      return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt + 1, self__.shift, clojure.core.rrb_vector.trees.push_tail.call(null, self__.shift, self__.cnt, self__.root.edit, self__.root, tail_node), new_tail, self__.meta, null);
    }
  }
};
clojure.core.rrb_vector.rrbt.Vector.prototype.call = function() {
  var G__932 = null;
  var G__932__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._nth.call(null, this$, k);
  };
  var G__932__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var this$ = self____$1;
    return cljs.core._nth.call(null, this$, k, not_found);
  };
  G__932 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__932__2.call(this, self__, k);
      case 3:
        return G__932__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__932.cljs$core$IFn$_invoke$arity$2 = G__932__2;
  G__932.cljs$core$IFn$_invoke$arity$3 = G__932__3;
  return G__932;
}();
clojure.core.rrb_vector.rrbt.Vector.prototype.apply = function(self__, args904) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone.call(null, args904)));
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var this$ = this;
  return cljs.core._nth.call(null, this$, k);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var this$ = this;
  return cljs.core._nth.call(null, this$, k, not_found);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.compare_indexed.call(null, this$__$1, that);
};
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
clojure.core.rrb_vector.rrbt.Vector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 = function(this$, that) {
  var self__ = this;
  var this$__$1 = this;
  return clojure.core.rrb_vector.rrbt.splice_rrbts.call(null, this$__$1, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, that));
};
clojure.core.rrb_vector.rrbt.Vector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
clojure.core.rrb_vector.rrbt.Vector.cljs$lang$type = true;
clojure.core.rrb_vector.rrbt.Vector.cljs$lang$ctorStr = "clojure.core.rrb-vector.rrbt/Vector";
clojure.core.rrb_vector.rrbt.Vector.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "clojure.core.rrb-vector.rrbt/Vector");
};
clojure.core.rrb_vector.rrbt.__GT_Vector = function clojure$core$rrb_vector$rrbt$__GT_Vector(cnt, shift, root, tail, meta, __hash) {
  return new clojure.core.rrb_vector.rrbt.Vector(cnt, shift, root, tail, meta, __hash);
};
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 = function(this$) {
  var this$__$1 = this;
  return new clojure.core.rrb_vector.rrbt.Vector(cljs.core.count.call(null, this$__$1), this$__$1.shift, this$__$1.root, this$__$1.tail, cljs.core.meta.call(null, this$__$1), null);
};
cljs.core.Subvec.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.clojure$core$rrb_vector$rrbt$AsRRBT$_as_rrbt$arity$1 = function(this$) {
  var this$__$1 = this;
  var v = this$__$1.v;
  var start = this$__$1.start;
  var end = this$__$1.end;
  return clojure.core.rrb_vector.protocols._slicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v), start, end);
};
clojure.core.rrb_vector.rrbt.shift_from_to = function clojure$core$rrb_vector$rrbt$shift_from_to(node, from, to) {
  while (true) {
    if (from === to) {
      return node;
    } else {
      if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
        var G__936 = cljs.core.__GT_VectorNode.call(null, node.edit, function() {
          var G__933 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          G__933[0] = node;
          return G__933;
        }());
        var G__937 = 5 + from;
        var G__938 = to;
        node = G__936;
        from = G__937;
        to = G__938;
        continue;
      } else {
        var G__939 = cljs.core.__GT_VectorNode.call(null, node.edit, function() {
          var G__934 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          G__934[0] = node;
          G__934[32] = function() {
            var G__935 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            G__935[0] = clojure.core.rrb_vector.nodes.last_range.call(null, node);
            G__935[32] = 1;
            return G__935;
          }();
          return G__934;
        }());
        var G__940 = 5 + from;
        var G__941 = to;
        node = G__939;
        from = G__940;
        to = G__941;
        continue;
      }
    }
    break;
  }
};
clojure.core.rrb_vector.rrbt.slot_count = function clojure$core$rrb_vector$rrbt$slot_count(node, shift) {
  var arr = node.arr;
  if (shift === 0) {
    return arr.length;
  } else {
    if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
      return clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr);
    } else {
      var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, node);
      return rngs[32];
    }
  }
};
clojure.core.rrb_vector.rrbt.subtree_branch_count = function clojure$core$rrb_vector$rrbt$subtree_branch_count(node, shift) {
  var arr = node.arr;
  var cs = shift - 5;
  if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node)) {
    var i = 0;
    var sbc = 0;
    while (true) {
      if (i === 32) {
        return sbc;
      } else {
        var temp__5733__auto__ = arr[i];
        if (cljs.core.truth_(temp__5733__auto__)) {
          var child = temp__5733__auto__;
          var G__942 = i + 1;
          var G__943 = sbc + clojure.core.rrb_vector.rrbt.slot_count.call(null, child, cs);
          i = G__942;
          sbc = G__943;
          continue;
        } else {
          return sbc;
        }
      }
      break;
    }
  } else {
    var lim = clojure.core.rrb_vector.nodes.ranges.call(null, node)[32];
    var i = 0;
    var sbc = 0;
    while (true) {
      if (i === lim) {
        return sbc;
      } else {
        var child = arr[i];
        var G__944 = i + 1;
        var G__945 = sbc + clojure.core.rrb_vector.rrbt.slot_count.call(null, child, cs);
        i = G__944;
        sbc = G__945;
        continue;
      }
      break;
    }
  }
};
clojure.core.rrb_vector.rrbt.leaf_seq = function clojure$core$rrb_vector$rrbt$leaf_seq(arr) {
  return cljs.core.mapcat.call(null, function(p1__946_SHARP_) {
    return p1__946_SHARP_.arr;
  }, cljs.core.take.call(null, clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr), arr));
};
clojure.core.rrb_vector.rrbt.rebalance_leaves = function clojure$core$rrb_vector$rrbt$rebalance_leaves(n1, cnt1, n2, cnt2, transferred_leaves) {
  var slc1 = clojure.core.rrb_vector.rrbt.slot_count.call(null, n1, 5);
  var slc2 = clojure.core.rrb_vector.rrbt.slot_count.call(null, n2, 5);
  var a = slc1 + slc2;
  var sbc1 = clojure.core.rrb_vector.rrbt.subtree_branch_count.call(null, n1, 5);
  var sbc2 = clojure.core.rrb_vector.rrbt.subtree_branch_count.call(null, n2, 5);
  var p = sbc1 + sbc2;
  var e = a - (cljs.core.quot.call(null, p - 1, 32) + 1);
  if (e <= 2) {
    return [n1, n2];
  } else {
    if (sbc1 + sbc2 <= 1024) {
      var reg_QMARK_ = cljs.core.mod.call(null, p, 32) === 0;
      var new_arr = new Array(reg_QMARK_ ? 32 : 33);
      var new_n1 = cljs.core.__GT_VectorNode.call(null, null, new_arr);
      var i_947 = 0;
      var bs_948 = cljs.core.partition_all.call(null, 32, cljs.core.concat.call(null, clojure.core.rrb_vector.rrbt.leaf_seq.call(null, n1.arr), clojure.core.rrb_vector.rrbt.leaf_seq.call(null, n2.arr)));
      while (true) {
        var temp__5735__auto___949 = cljs.core.seq.call(null, bs_948);
        if (temp__5735__auto___949) {
          var xs__6292__auto___950 = temp__5735__auto___949;
          var block_951 = cljs.core.first.call(null, xs__6292__auto___950);
          var a_952__$1 = new Array(cljs.core.count.call(null, block_951));
          var i_953__$1 = 0;
          var xs_954 = cljs.core.seq.call(null, block_951);
          while (true) {
            if (xs_954) {
              a_952__$1[i_953__$1] = cljs.core.first.call(null, xs_954);
              var G__955 = i_953__$1 + 1;
              var G__956 = cljs.core.next.call(null, xs_954);
              i_953__$1 = G__955;
              xs_954 = G__956;
              continue;
            } else {
            }
            break;
          }
          new_arr[i_947] = cljs.core.__GT_VectorNode.call(null, null, a_952__$1);
          var G__957 = i_947 + 1;
          var G__958 = cljs.core.next.call(null, bs_948);
          i_947 = G__957;
          bs_948 = G__958;
          continue;
        } else {
        }
        break;
      }
      if (!reg_QMARK_) {
        new_arr[32] = clojure.core.rrb_vector.nodes.regular_ranges.call(null, 5, p);
      } else {
      }
      transferred_leaves.val = sbc2;
      return [new_n1, null];
    } else {
      var reg_QMARK_ = cljs.core.mod.call(null, p, 32) === 0;
      var new_arr1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var new_arr2 = new Array(reg_QMARK_ ? 32 : 33);
      var new_n1 = cljs.core.__GT_VectorNode.call(null, null, new_arr1);
      var new_n2 = cljs.core.__GT_VectorNode.call(null, null, new_arr2);
      var i_959 = 0;
      var bs_960 = cljs.core.partition_all.call(null, 32, cljs.core.concat.call(null, clojure.core.rrb_vector.rrbt.leaf_seq.call(null, new Array(n1)), clojure.core.rrb_vector.rrbt.leaf_seq.call(null, new Array(n2))));
      while (true) {
        var temp__5735__auto___961 = cljs.core.seq.call(null, bs_960);
        if (temp__5735__auto___961) {
          var xs__6292__auto___962 = temp__5735__auto___961;
          var block_963 = cljs.core.first.call(null, xs__6292__auto___962);
          var a_964__$1 = new Array(cljs.core.count.call(null, block_963));
          var i_965__$1 = 0;
          var xs_966 = cljs.core.seq.call(null, block_963);
          while (true) {
            if (xs_966) {
              a_964__$1[i_965__$1] = cljs.core.first.call(null, xs_966);
              var G__967 = i_965__$1 + 1;
              var G__968 = cljs.core.next.call(null, xs_966);
              i_965__$1 = G__967;
              xs_966 = G__968;
              continue;
            } else {
            }
            break;
          }
          if (i_959 < 32) {
            new_arr1[i_959] = cljs.core.__GT_VectorNode.call(null, null, a_964__$1);
          } else {
            new_arr2[i_959 - 32] = cljs.core.__GT_VectorNode.call(null, null, a_964__$1);
          }
          var G__969 = i_959 + 1;
          var G__970 = cljs.core.next.call(null, bs_960);
          i_959 = G__969;
          bs_960 = G__970;
          continue;
        } else {
        }
        break;
      }
      if (!reg_QMARK_) {
        new_arr2[32] = clojure.core.rrb_vector.nodes.regular_ranges.call(null, 5, p - 1024);
      } else {
      }
      transferred_leaves.val = 1024 - sbc1;
      return [new_n1, new_n2];
    }
  }
};
clojure.core.rrb_vector.rrbt.child_seq = function clojure$core$rrb_vector$rrbt$child_seq(node, shift, cnt) {
  var arr = node.arr;
  var rngs = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, node) ? clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift, cnt) : clojure.core.rrb_vector.nodes.ranges.call(null, node);
  var cs = cljs.core.truth_(rngs) ? rngs[32] : clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr);
  var cseq = function clojure$core$rrb_vector$rrbt$child_seq_$_cseq(c, r) {
    var arr__$1 = c.arr;
    var rngs__$1 = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, c) ? clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift - 5, r) : clojure.core.rrb_vector.nodes.ranges.call(null, c);
    var gcs = cljs.core.truth_(rngs__$1) ? rngs__$1[32] : clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr__$1);
    return cljs.core.map.call(null, cljs.core.list, cljs.core.take.call(null, gcs, arr__$1), cljs.core.take.call(null, gcs, cljs.core.map.call(null, cljs.core._, rngs__$1, cljs.core.cons.call(null, 0, rngs__$1))));
  };
  return cljs.core.mapcat.call(null, cseq, cljs.core.take.call(null, cs, arr), cljs.core.take.call(null, cs, cljs.core.map.call(null, cljs.core._, rngs, cljs.core.cons.call(null, 0, rngs))));
};
clojure.core.rrb_vector.rrbt.rebalance = function clojure$core$rrb_vector$rrbt$rebalance(shift, n1, cnt1, n2, cnt2, transferred_leaves) {
  if (n2 == null) {
    return [n1, null];
  } else {
    var slc1 = clojure.core.rrb_vector.rrbt.slot_count.call(null, n1, shift);
    var slc2 = clojure.core.rrb_vector.rrbt.slot_count.call(null, n2, shift);
    var a = slc1 + slc2;
    var sbc1 = clojure.core.rrb_vector.rrbt.subtree_branch_count.call(null, n1, shift);
    var sbc2 = clojure.core.rrb_vector.rrbt.subtree_branch_count.call(null, n2, shift);
    var p = sbc1 + sbc2;
    var e = a - (cljs.core.quot.call(null, p - 1, 32) + 1);
    if (e <= 2) {
      return [n1, n2];
    } else {
      if (sbc1 + sbc2 <= 1024) {
        var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_n1 = cljs.core.__GT_VectorNode.call(null, null, new_arr);
        var i_977 = 0;
        var bs_978 = cljs.core.partition_all.call(null, 32, cljs.core.concat.call(null, clojure.core.rrb_vector.rrbt.child_seq.call(null, n1, shift, cnt1), clojure.core.rrb_vector.rrbt.child_seq.call(null, n2, shift, cnt2)));
        while (true) {
          var temp__5735__auto___979 = cljs.core.seq.call(null, bs_978);
          if (temp__5735__auto___979) {
            var xs__6292__auto___980 = temp__5735__auto___979;
            var block_981 = cljs.core.first.call(null, xs__6292__auto___980);
            var a_982__$1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            var r_983 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            a_982__$1[32] = r_983;
            r_983[32] = cljs.core.count.call(null, block_981);
            var i_984__$1 = 0;
            var o_985 = 0;
            var gcs_986 = cljs.core.seq.call(null, block_981);
            while (true) {
              var temp__5735__auto___987__$1 = cljs.core.seq.call(null, gcs_986);
              if (temp__5735__auto___987__$1) {
                var xs__6292__auto___988__$1 = temp__5735__auto___987__$1;
                var vec__971_989 = cljs.core.first.call(null, xs__6292__auto___988__$1);
                var gc_990 = cljs.core.nth.call(null, vec__971_989, 0, null);
                var gcr_991 = cljs.core.nth.call(null, vec__971_989, 1, null);
                a_982__$1[i_984__$1] = gc_990;
                r_983[i_984__$1] = o_985 + gcr_991;
                var G__992 = i_984__$1 + 1;
                var G__993 = o_985 + gcr_991;
                var G__994 = cljs.core.next.call(null, gcs_986);
                i_984__$1 = G__992;
                o_985 = G__993;
                gcs_986 = G__994;
                continue;
              } else {
              }
              break;
            }
            new_arr[i_977] = cljs.core.__GT_VectorNode.call(null, null, a_982__$1);
            new_rngs[i_977] = r_983[r_983[32] - 1] + (i_977 > 0 ? new_rngs[i_977 - 1] : 0);
            new_rngs[32] = i_977 + 1;
            var G__995 = i_977 + 1;
            var G__996 = cljs.core.next.call(null, bs_978);
            i_977 = G__995;
            bs_978 = G__996;
            continue;
          } else {
          }
          break;
        }
        new_arr[32] = new_rngs;
        transferred_leaves.val = cnt2;
        return [new_n1, null];
      } else {
        var new_arr1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_arr2 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_rngs2 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_n1 = cljs.core.__GT_VectorNode.call(null, null, new_arr1);
        var new_n2 = cljs.core.__GT_VectorNode.call(null, null, new_arr2);
        var i_997 = 0;
        var bs_998 = cljs.core.partition_all.call(null, 32, cljs.core.concat.call(null, clojure.core.rrb_vector.rrbt.child_seq.call(null, n1, shift, cnt1), clojure.core.rrb_vector.rrbt.child_seq.call(null, n2, shift, cnt2)));
        while (true) {
          var temp__5735__auto___999 = cljs.core.seq.call(null, bs_998);
          if (temp__5735__auto___999) {
            var xs__6292__auto___1000 = temp__5735__auto___999;
            var block_1001 = cljs.core.first.call(null, xs__6292__auto___1000);
            var a_1002__$1 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            var r_1003 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
            a_1002__$1[32] = r_1003;
            r_1003[32] = cljs.core.count.call(null, block_1001);
            var i_1004__$1 = 0;
            var o_1005 = 0;
            var gcs_1006 = cljs.core.seq.call(null, block_1001);
            while (true) {
              var temp__5735__auto___1007__$1 = cljs.core.seq.call(null, gcs_1006);
              if (temp__5735__auto___1007__$1) {
                var xs__6292__auto___1008__$1 = temp__5735__auto___1007__$1;
                var vec__974_1009 = cljs.core.first.call(null, xs__6292__auto___1008__$1);
                var gc_1010 = cljs.core.nth.call(null, vec__974_1009, 0, null);
                var gcr_1011 = cljs.core.nth.call(null, vec__974_1009, 1, null);
                a_1002__$1[i_1004__$1] = gc_1010;
                r_1003[i_1004__$1] = o_1005 + gcr_1011;
                var G__1012 = i_1004__$1 + 1;
                var G__1013 = o_1005 + gcr_1011;
                var G__1014 = cljs.core.next.call(null, gcs_1006);
                i_1004__$1 = G__1012;
                o_1005 = G__1013;
                gcs_1006 = G__1014;
                continue;
              } else {
              }
              break;
            }
            if (i_997 < 32 && i_997 * 32 + cljs.core.count.call(null, block_1001) > sbc1) {
              var tbs_1015 = i_997 * 32 + cljs.core.count.call(null, block_1001) - sbc1;
              var li_1016 = r_1003[32] - 1;
              var d_1017 = tbs_1015 >= 32 ? r_1003[li_1016] : r_1003[li_1016] - r_1003[li_1016 - tbs_1015];
              transferred_leaves.val = transferred_leaves.val + d_1017;
            } else {
            }
            var new_arr_1018 = i_997 < 32 ? new_arr1 : new_arr2;
            var new_rngs_1019 = i_997 < 32 ? new_rngs1 : new_rngs2;
            var i_1020__$1 = cljs.core.mod.call(null, i_997, 32);
            new_arr_1018[i_1020__$1] = cljs.core.__GT_VectorNode.call(null, null, a_1002__$1);
            new_rngs_1019[i_1020__$1] = r_1003[r_1003[32] - 1] + (i_1020__$1 > 0 ? new_rngs_1019[i_1020__$1 - 1] : 0);
            new_rngs_1019[32] = i_1020__$1 + 1;
            var G__1021 = i_997 + 1;
            var G__1022 = cljs.core.next.call(null, bs_998);
            i_997 = G__1021;
            bs_998 = G__1022;
            continue;
          } else {
          }
          break;
        }
        new_arr1[32] = new_rngs1;
        new_arr2[32] = new_rngs2;
        return [new_n1, new_n2];
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.zippath = function clojure$core$rrb_vector$rrbt$zippath(shift, n1, cnt1, n2, cnt2, transferred_leaves) {
  if (shift === 5) {
    return clojure.core.rrb_vector.rrbt.rebalance_leaves.call(null, n1, cnt1, n2, cnt2, transferred_leaves);
  } else {
    var c1 = clojure.core.rrb_vector.nodes.last_child.call(null, n1);
    var c2 = clojure.core.rrb_vector.nodes.first_child.call(null, n2);
    var ccnt1 = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, n1) ? function() {
      var m = cljs.core.mod.call(null, cnt1, 1 << shift);
      if (m === 0) {
        return 1 << shift;
      } else {
        return m;
      }
    }() : function() {
      var rngs = clojure.core.rrb_vector.nodes.ranges.call(null, n1);
      var i = rngs[32] - 1;
      if (i === 0) {
        return rngs[0];
      } else {
        return rngs[i] - rngs[i - 1];
      }
    }();
    var ccnt2 = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, n2) ? function() {
      var m = cljs.core.mod.call(null, cnt2, 1 << shift);
      if (m === 0) {
        return 1 << shift;
      } else {
        return m;
      }
    }() : clojure.core.rrb_vector.nodes.ranges.call(null, n2)[0];
    var next_transferred_leaves = new cljs.core.Box(0);
    var vec__1023 = clojure.core.rrb_vector.rrbt.zippath.call(null, shift - 5, c1, ccnt1, c2, ccnt2, next_transferred_leaves);
    var new_c1 = cljs.core.nth.call(null, vec__1023, 0, null);
    var new_c2 = cljs.core.nth.call(null, vec__1023, 1, null);
    var d = next_transferred_leaves.val;
    transferred_leaves.val = transferred_leaves.val + d;
    return clojure.core.rrb_vector.rrbt.rebalance.call(null, shift, c1 === new_c1 ? n1 : clojure.core.rrb_vector.nodes.replace_rightmost_child.call(null, shift, n1, new_c1, d), cnt1 + d, cljs.core.truth_(new_c2) ? c2 === new_c2 ? n2 : clojure.core.rrb_vector.nodes.replace_leftmost_child.call(null, shift, n2, cnt2, new_c2, d) : clojure.core.rrb_vector.nodes.remove_leftmost_child.call(null, shift, n2), cnt2 - d, transferred_leaves);
  }
};
clojure.core.rrb_vector.rrbt.squash_nodes = function clojure$core$rrb_vector$rrbt$squash_nodes(shift, n1, cnt1, n2, cnt2) {
  var arr1 = n1.arr;
  var arr2 = n2.arr;
  var li1 = clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr1);
  var li2 = clojure.core.rrb_vector.nodes.index_of_nil.call(null, arr2);
  var slots = cljs.core.concat.call(null, cljs.core.take.call(null, li1, arr1), cljs.core.take.call(null, li2, arr2));
  if (cljs.core.count.call(null, slots) > 32) {
    return [n1, n2];
  } else {
    var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
    var rngs1 = cljs.core.take.call(null, li1, clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, n1) ? clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift, cnt1) : clojure.core.rrb_vector.nodes.ranges.call(null, n1));
    var rngs2 = cljs.core.take.call(null, li2, clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, n2) ? clojure.core.rrb_vector.nodes.regular_ranges.call(null, shift, cnt2) : clojure.core.rrb_vector.nodes.ranges.call(null, n2));
    var rngs2__$1 = function() {
      var r = cljs.core.last.call(null, rngs1);
      return cljs.core.map.call(null, function(p1__1026_SHARP_) {
        return p1__1026_SHARP_ + r;
      }, rngs2);
    }();
    var rngs = cljs.core.concat.call(null, rngs1, rngs2__$1);
    new_arr[32] = new_rngs;
    var i_1027 = 0;
    var cs_1028 = cljs.core.seq.call(null, slots);
    while (true) {
      if (cs_1028) {
        new_arr[i_1027] = cljs.core.first.call(null, cs_1028);
        var G__1029 = i_1027 + 1;
        var G__1030 = cljs.core.next.call(null, cs_1028);
        i_1027 = G__1029;
        cs_1028 = G__1030;
        continue;
      } else {
      }
      break;
    }
    var i_1031 = 0;
    var rngs_1032__$1 = cljs.core.seq.call(null, rngs);
    while (true) {
      if (rngs_1032__$1) {
        new_rngs[i_1031] = cljs.core.first.call(null, rngs_1032__$1);
        var G__1033 = i_1031 + 1;
        var G__1034 = cljs.core.next.call(null, rngs_1032__$1);
        i_1031 = G__1033;
        rngs_1032__$1 = G__1034;
        continue;
      } else {
        new_rngs[32] = i_1031;
      }
      break;
    }
    return [cljs.core.__GT_VectorNode.call(null, null, new_arr), null];
  }
};
clojure.core.rrb_vector.rrbt.splice_rrbts = function clojure$core$rrb_vector$rrbt$splice_rrbts(v1, v2) {
  if (cljs.core.count.call(null, v1) === 0) {
    return v2;
  } else {
    if (cljs.core.count.call(null, v2) < 33) {
      return cljs.core.into.call(null, v1, v2);
    } else {
      var s1 = v1.shift;
      var s2 = v2.shift;
      var r1 = v1.root;
      var o_QMARK_ = clojure.core.rrb_vector.nodes.overflow_QMARK_.call(null, r1, s1, cljs.core.count.call(null, v1) + (32 - v1.tail.length));
      var r1__$1 = o_QMARK_ ? function() {
        var tail = v1.tail;
        var tail_node = cljs.core.__GT_VectorNode.call(null, null, tail);
        var reg_QMARK_ = clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, r1) && tail.length === 32;
        var arr = new Array(reg_QMARK_ ? 32 : 33);
        arr[0] = r1;
        arr[1] = clojure.core.rrb_vector.nodes.new_path_STAR_.call(null, s1, tail_node);
        if (!reg_QMARK_) {
          var rngs_1042 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          rngs_1042[32] = 2;
          rngs_1042[0] = cljs.core.count.call(null, v1) - tail.length;
          rngs_1042[1] = cljs.core.count.call(null, v1);
          arr[32] = rngs_1042;
        } else {
        }
        return cljs.core.__GT_VectorNode.call(null, null, arr);
      }() : clojure.core.rrb_vector.nodes.fold_tail.call(null, r1, s1, clojure.core.rrb_vector.trees.tail_offset.call(null, v1.cnt, v1.tail), v1.tail);
      var s1__$1 = o_QMARK_ ? s1 + 5 : s1;
      var r2 = v2.root;
      var s = function() {
        var x__4273__auto__ = s1__$1;
        var y__4274__auto__ = s2;
        return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
      }();
      var r1__$2 = clojure.core.rrb_vector.rrbt.shift_from_to.call(null, r1__$1, s1__$1, s);
      var r2__$1 = clojure.core.rrb_vector.rrbt.shift_from_to.call(null, r2, s2, s);
      var transferred_leaves = new cljs.core.Box(0);
      var vec__1035 = clojure.core.rrb_vector.rrbt.zippath.call(null, s, r1__$2, cljs.core.count.call(null, v1), r2__$1, cljs.core.count.call(null, v2) - v2.tail.length, transferred_leaves);
      var n1 = cljs.core.nth.call(null, vec__1035, 0, null);
      var n2 = cljs.core.nth.call(null, vec__1035, 1, null);
      var d = transferred_leaves.val;
      var ncnt1 = cljs.core.count.call(null, v1) + d;
      var ncnt2 = cljs.core.count.call(null, v2) - v2.tail.length - d;
      var vec__1038 = n2 === r2__$1 ? clojure.core.rrb_vector.rrbt.squash_nodes.call(null, s, n1, ncnt1, n2, ncnt2) : [n1, n2];
      var n1__$1 = cljs.core.nth.call(null, vec__1038, 0, null);
      var n2__$1 = cljs.core.nth.call(null, vec__1038, 1, null);
      var ncnt1__$1 = cljs.core.truth_(n2__$1) ? ncnt1 : ncnt1 + ncnt2;
      var ncnt2__$1 = cljs.core.truth_(n2__$1) ? ncnt2 : 0;
      if (cljs.core.truth_(n2__$1)) {
        var arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_root = cljs.core.__GT_VectorNode.call(null, null, arr);
        arr[0] = n1__$1;
        arr[1] = n2__$1;
        arr[32] = function() {
          var G__1041 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          G__1041[0] = ncnt1__$1;
          G__1041[1] = ncnt1__$1 + ncnt2__$1;
          G__1041[32] = 2;
          return G__1041;
        }();
        return new clojure.core.rrb_vector.rrbt.Vector(cljs.core.count.call(null, v1) + cljs.core.count.call(null, v2), s + 5, new_root, v2.tail, null, null);
      } else {
        var r = n1__$1;
        var s__$1 = s;
        while (true) {
          if (s__$1 > 5 && r.arr[1] == null) {
            var G__1043 = r.arr[0];
            var G__1044 = s__$1 - 5;
            r = G__1043;
            s__$1 = G__1044;
            continue;
          } else {
            return new clojure.core.rrb_vector.rrbt.Vector(cljs.core.count.call(null, v1) + cljs.core.count.call(null, v2), s__$1, r, v2.tail, null, null);
          }
          break;
        }
      }
    }
  }
};
clojure.core.rrb_vector.rrbt.Transient = function(cnt, shift, root, tail, tidx) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.tidx = tidx;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    if (self__.tidx < 32) {
      self__.tail[self__.tidx] = o;
      self__.cnt = self__.cnt + 1;
      self__.tidx = self__.tidx + 1;
      return this$__$1;
    } else {
      var tail_node = cljs.core.__GT_VectorNode.call(null, self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      self__.tidx = 1;
      if (clojure.core.rrb_vector.nodes.overflow_QMARK_.call(null, self__.root, self__.shift, self__.cnt)) {
        if (clojure.core.rrb_vector.nodes.regular_QMARK_.call(null, self__.root)) {
          var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var G__1045_1048 = new_arr;
          G__1045_1048[0] = self__.root;
          G__1045_1048[1] = clojure.core.rrb_vector.trees.new_path.call(null, self__.tail, self__.root.edit, self__.shift, tail_node);
          self__.root = cljs.core.__GT_VectorNode.call(null, self__.root.edit, new_arr);
          self__.shift = self__.shift + 5;
          self__.cnt = self__.cnt + 1;
          return this$__$1;
        } else {
          var new_arr = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var new_rngs = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
          var new_root = cljs.core.__GT_VectorNode.call(null, self__.root.edit, new_arr);
          var root_total_range = clojure.core.rrb_vector.nodes.ranges.call(null, self__.root)[31];
          var G__1046_1049 = new_arr;
          G__1046_1049[0] = self__.root;
          G__1046_1049[1] = clojure.core.rrb_vector.trees.new_path.call(null, self__.tail, self__.root.edit, self__.shift, tail_node);
          G__1046_1049[32] = new_rngs;
          var G__1047_1050 = new_rngs;
          G__1047_1050[0] = root_total_range;
          G__1047_1050[1] = root_total_range + 32;
          G__1047_1050[32] = 2;
          self__.root = new_root;
          self__.shift = self__.shift + 5;
          self__.cnt = self__.cnt + 1;
          return this$__$1;
        }
      } else {
        var new_root = clojure.core.rrb_vector.transients.push_tail_BANG_.call(null, self__.shift, self__.cnt, self__.root.edit, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return this$__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var trimmed_tail = new Array(self__.tidx);
    cljs.core.array_copy.call(null, self__.tail, 0, trimmed_tail, 0, self__.tidx);
    return new clojure.core.rrb_vector.rrbt.Vector(self__.cnt, self__.shift, self__.root, trimmed_tail, null, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(this$, key, val) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._assoc_n_BANG_.call(null, this$__$1, key, val);
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(this$, i, val) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    if (0 <= i && i < self__.cnt) {
      var tail_off = self__.cnt - self__.tidx;
      if (tail_off <= i) {
        self__.tail[i - tail_off] = val;
      } else {
        self__.root = clojure.core.rrb_vector.transients.do_assoc_BANG_.call(null, self__.shift, self__.root.edit, self__.root, i, val);
      }
      return this$__$1;
    } else {
      if (i === self__.cnt) {
        return cljs.core._conj_BANG_.call(null, this$__$1, val);
      } else {
        return cljs.core.vector_index_out_of_bounds.call(null, i, self__.cnt);
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        self__.tidx = 0;
        self__.tail[0] = null;
        return this$__$1;
      } else {
        if (self__.tidx > 1) {
          self__.cnt = self__.cnt - 1;
          self__.tidx = self__.tidx - 1;
          self__.tail[self__.tidx] = null;
          return this$__$1;
        } else {
          var new_tail_base = clojure.core.rrb_vector.trees.array_for.call(null, self__.cnt, self__.shift, self__.root, self__.tail, self__.cnt - 2);
          var new_tail = cljs.core.aclone.call(null, new_tail_base);
          var new_tidx = new_tail_base.length;
          var new_root = clojure.core.rrb_vector.transients.pop_tail_BANG_.call(null, self__.shift, self__.cnt, self__.root.edit, self__.root);
          if (new_root == null) {
            self__.cnt = self__.cnt - 1;
            self__.root = clojure.core.rrb_vector.transients.ensure_editable.call(null, self__.root.edit, clojure.core.rrb_vector.nodes.empty_node);
            self__.tail = new_tail;
            self__.tidx = new_tidx;
            return this$__$1;
          } else {
            if (self__.shift > 5 && new_root.arr[1] == null) {
              self__.cnt = self__.cnt - 1;
              self__.shift = self__.shift - 5;
              self__.root = new_root.arr[0];
              self__.tail = new_tail;
              self__.tidx = new_tidx;
              return this$__$1;
            } else {
              self__.cnt = self__.cnt - 1;
              self__.root = new_root;
              self__.tail = new_tail;
              self__.tidx = new_tidx;
              return this$__$1;
            }
          }
        }
      }
    }
  } else {
    throw new Error("count after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
clojure.core.rrb_vector.rrbt.Transient.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tidx", "tidx", 1939123455, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
clojure.core.rrb_vector.rrbt.Transient.cljs$lang$type = true;
clojure.core.rrb_vector.rrbt.Transient.cljs$lang$ctorStr = "clojure.core.rrb-vector.rrbt/Transient";
clojure.core.rrb_vector.rrbt.Transient.cljs$lang$ctorPrWriter = function(this__4428__auto__, writer__4429__auto__, opt__4430__auto__) {
  return cljs.core._write.call(null, writer__4429__auto__, "clojure.core.rrb-vector.rrbt/Transient");
};
clojure.core.rrb_vector.rrbt.__GT_Transient = function clojure$core$rrb_vector$rrbt$__GT_Transient(cnt, shift, root, tail, tidx) {
  return new clojure.core.rrb_vector.rrbt.Transient(cnt, shift, root, tail, tidx);
};
goog.provide("clojure.core.rrb_vector.interop");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.protocols");
goog.require("clojure.core.rrb_vector.rrbt");
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 = function(v, start, end) {
  var v__$1 = this;
  return clojure.core.rrb_vector.protocols._slicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v__$1), start, end);
};
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSliceableVector$_slicev$arity$3 = function(v, start, end) {
  var v__$1 = this;
  return clojure.core.rrb_vector.protocols._slicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v__$1), start, end);
};
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 = function(v1, v2) {
  var v1__$1 = this;
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v1__$1), v2);
};
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.clojure$core$rrb_vector$protocols$PSpliceableVector$_splicev$arity$2 = function(v1, v2) {
  var v1__$1 = this;
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.rrbt._as_rrbt.call(null, v1__$1), v2);
};
goog.provide("clojure.core.rrb_vector");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector.protocols");
goog.require("clojure.core.rrb_vector.rrbt");
goog.require("clojure.core.rrb_vector.interop");
clojure.core.rrb_vector.catvec = function clojure$core$rrb_vector$catvec(var_args) {
  var G__1093 = arguments.length;
  switch(G__1093) {
    case 0:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___1095 = arguments.length;
      var i__4790__auto___1096 = 0;
      while (true) {
        if (i__4790__auto___1096 < len__4789__auto___1095) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___1096]);
          var G__1097 = i__4790__auto___1096 + 1;
          i__4790__auto___1096 = G__1097;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(4), 0, null);
      return clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4811__auto__);
  }
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$1 = function(v1) {
  return v1;
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$2 = function(v1, v2) {
  return clojure.core.rrb_vector.protocols._splicev.call(null, v1, v2);
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$3 = function(v1, v2, v3) {
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.protocols._splicev.call(null, v1, v2), v3);
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$4 = function(v1, v2, v3, v4) {
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.protocols._splicev.call(null, v1, v2), clojure.core.rrb_vector.protocols._splicev.call(null, v3, v4));
};
clojure.core.rrb_vector.catvec.cljs$core$IFn$_invoke$arity$variadic = function(v1, v2, v3, v4, vn) {
  return clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.protocols._splicev.call(null, clojure.core.rrb_vector.protocols._splicev.call(null, v1, v2), clojure.core.rrb_vector.protocols._splicev.call(null, v3, v4)), cljs.core.apply.call(null, clojure.core.rrb_vector.catvec, vn));
};
clojure.core.rrb_vector.catvec.cljs$lang$applyTo = function(seq1088) {
  var G__1089 = cljs.core.first.call(null, seq1088);
  var seq1088__$1 = cljs.core.next.call(null, seq1088);
  var G__1090 = cljs.core.first.call(null, seq1088__$1);
  var seq1088__$2 = cljs.core.next.call(null, seq1088__$1);
  var G__1091 = cljs.core.first.call(null, seq1088__$2);
  var seq1088__$3 = cljs.core.next.call(null, seq1088__$2);
  var G__1092 = cljs.core.first.call(null, seq1088__$3);
  var seq1088__$4 = cljs.core.next.call(null, seq1088__$3);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1089, G__1090, G__1091, G__1092, seq1088__$4);
};
clojure.core.rrb_vector.catvec.cljs$lang$maxFixedArity = 4;
clojure.core.rrb_vector.subvec = function clojure$core$rrb_vector$subvec(var_args) {
  var G__1099 = arguments.length;
  switch(G__1099) {
    case 2:
      return clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return clojure.core.rrb_vector.protocols._slicev.call(null, v, start, cljs.core.count.call(null, v));
};
clojure.core.rrb_vector.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return clojure.core.rrb_vector.protocols._slicev.call(null, v, start, end);
};
clojure.core.rrb_vector.subvec.cljs$lang$maxFixedArity = 3;
clojure.core.rrb_vector.vector = function clojure$core$rrb_vector$vector(var_args) {
  var G__1107 = arguments.length;
  switch(G__1107) {
    case 0:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___1114 = arguments.length;
      var i__4790__auto___1115 = 0;
      while (true) {
        if (i__4790__auto___1115 < len__4789__auto___1114) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___1115]);
          var G__1116 = i__4790__auto___1115 + 1;
          i__4790__auto___1115 = G__1116;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(4), 0, null);
      return clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4811__auto__);
  }
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$0 = function() {
  var arr__1108 = [];
  return new clojure.core.rrb_vector.rrbt.Vector(0, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__1108, null, 0);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$1 = function(x1) {
  var arr__1109 = [null];
  arr__1109[0] = x1;
  return new clojure.core.rrb_vector.rrbt.Vector(1, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__1109, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$2 = function(x1, x2) {
  var arr__1110 = [null, null];
  arr__1110[0] = x1;
  arr__1110[1] = x2;
  return new clojure.core.rrb_vector.rrbt.Vector(2, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__1110, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$3 = function(x1, x2, x3) {
  var arr__1111 = [null, null, null];
  arr__1111[0] = x1;
  arr__1111[1] = x2;
  arr__1111[2] = x3;
  return new clojure.core.rrb_vector.rrbt.Vector(3, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__1111, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$4 = function(x1, x2, x3, x4) {
  var arr__1112 = [null, null, null, null];
  arr__1112[0] = x1;
  arr__1112[1] = x2;
  arr__1112[2] = x3;
  arr__1112[3] = x4;
  return new clojure.core.rrb_vector.rrbt.Vector(4, 5, cljs.core.PersistentVector.EMPTY_NODE, arr__1112, null, null);
};
clojure.core.rrb_vector.vector.cljs$core$IFn$_invoke$arity$variadic = function(x1, x2, x3, x4, xn) {
  return cljs.core.into.call(null, clojure.core.rrb_vector.vector.call(null, x1, x2, x3, x4), xn);
};
clojure.core.rrb_vector.vector.cljs$lang$applyTo = function(seq1102) {
  var G__1103 = cljs.core.first.call(null, seq1102);
  var seq1102__$1 = cljs.core.next.call(null, seq1102);
  var G__1104 = cljs.core.first.call(null, seq1102__$1);
  var seq1102__$2 = cljs.core.next.call(null, seq1102__$1);
  var G__1105 = cljs.core.first.call(null, seq1102__$2);
  var seq1102__$3 = cljs.core.next.call(null, seq1102__$2);
  var G__1106 = cljs.core.first.call(null, seq1102__$3);
  var seq1102__$4 = cljs.core.next.call(null, seq1102__$3);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1103, G__1104, G__1105, G__1106, seq1102__$4);
};
clojure.core.rrb_vector.vector.cljs$lang$maxFixedArity = 4;
clojure.core.rrb_vector.vec = function clojure$core$rrb_vector$vec(coll) {
  if (cljs.core.vector_QMARK_.call(null, coll)) {
    return clojure.core.rrb_vector.rrbt._as_rrbt.call(null, coll);
  } else {
    return cljs.core.apply.call(null, clojure.core.rrb_vector.vector, coll);
  }
};
goog.provide("fipp.deque");
goog.require("cljs.core");
goog.require("clojure.core.rrb_vector");
fipp.deque.create = cljs.core.vector;
fipp.deque.empty = cljs.core.PersistentVector.EMPTY;
fipp.deque.popl = function fipp$deque$popl(v) {
  return cljs.core.subvec.call(null, v, 1);
};
fipp.deque.conjr = cljs.core.fnil.call(null, cljs.core.conj, fipp.deque.empty);
fipp.deque.conjlr = function fipp$deque$conjlr(l, deque, r) {
  return clojure.core.rrb_vector.catvec.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [l], null), deque, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [r], null));
};
fipp.deque.concat = clojure.core.rrb_vector.catvec;
goog.provide("fipp.engine");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("fipp.deque");
if (typeof fipp !== "undefined" && typeof fipp.engine !== "undefined" && typeof fipp.engine.serialize_node !== "undefined") {
} else {
  fipp.engine.serialize_node = function() {
    var method_table__4672__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4673__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4674__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4675__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4676__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "fipp.engine", "serialize-node"), cljs.core.first, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4676__auto__, method_table__4672__auto__, prefer_table__4673__auto__, method_cache__4674__auto__, cached_hierarchy__4675__auto__);
  }();
}
fipp.engine.serialize = function fipp$engine$serialize(doc) {
  if (doc == null) {
    return null;
  } else {
    if (cljs.core.seq_QMARK_.call(null, doc)) {
      return cljs.core.mapcat.call(null, fipp.engine.serialize, doc);
    } else {
      if (typeof doc === "string") {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.Keyword(null, "text", "text", -1790561697), doc], null)], null);
      } else {
        if (doc instanceof cljs.core.Keyword) {
          return fipp.engine.serialize_node.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [doc], null));
        } else {
          if (cljs.core.vector_QMARK_.call(null, doc)) {
            return fipp.engine.serialize_node.call(null, doc);
          } else {
            throw cljs.core.ex_info.call(null, "Unexpected class for doc node", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "node", "node", 581201198), doc], null));
          }
        }
      }
    }
  }
};
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "text", "text", -1790561697), function(p__2646) {
  var vec__2647 = p__2646;
  var seq__2648 = cljs.core.seq.call(null, vec__2647);
  var first__2649 = cljs.core.first.call(null, seq__2648);
  var seq__2648__$1 = cljs.core.next.call(null, seq__2648);
  var _ = first__2649;
  var text = seq__2648__$1;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "text", "text", -1790561697), new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.apply.call(null, cljs.core.str, text)], null)], null);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "pass", "pass", 1574159993), function(p__2650) {
  var vec__2651 = p__2650;
  var seq__2652 = cljs.core.seq.call(null, vec__2651);
  var first__2653 = cljs.core.first.call(null, seq__2652);
  var seq__2652__$1 = cljs.core.next.call(null, seq__2652);
  var _ = first__2653;
  var text = seq__2652__$1;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.apply.call(null, cljs.core.str, text)], null)], null);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "escaped", "escaped", -1007929769), function(p__2654) {
  var vec__2655 = p__2654;
  var _ = cljs.core.nth.call(null, vec__2655, 0, null);
  var text = cljs.core.nth.call(null, vec__2655, 1, null);
  if (typeof text === "string") {
  } else {
    throw new Error("Assert failed: (string? text)");
  }
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "escaped", "escaped", -1007929769), new cljs.core.Keyword(null, "text", "text", -1790561697), text], null)], null);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "span", "span", 1394872991), function(p__2658) {
  var vec__2659 = p__2658;
  var seq__2660 = cljs.core.seq.call(null, vec__2659);
  var first__2661 = cljs.core.first.call(null, seq__2660);
  var seq__2660__$1 = cljs.core.next.call(null, seq__2660);
  var _ = first__2661;
  var children = seq__2660__$1;
  return fipp.engine.serialize.call(null, children);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "line", "line", 212345235), function(p__2662) {
  var vec__2663 = p__2662;
  var _ = cljs.core.nth.call(null, vec__2663, 0, null);
  var inline = cljs.core.nth.call(null, vec__2663, 1, null);
  var terminate = cljs.core.nth.call(null, vec__2663, 2, null);
  var inline__$1 = function() {
    var or__4185__auto__ = inline;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return " ";
    }
  }();
  var terminate__$1 = function() {
    var or__4185__auto__ = terminate;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return "";
    }
  }();
  if (typeof inline__$1 === "string") {
  } else {
    throw new Error("Assert failed: (string? inline)");
  }
  if (typeof terminate__$1 === "string") {
  } else {
    throw new Error("Assert failed: (string? terminate)");
  }
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "inline", "inline", 1399884222), inline__$1, new cljs.core.Keyword(null, "terminate", "terminate", 1256003496), terminate__$1], null)], null);
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "break", "break", 126570225), function() {
  var G__2666__delegate = function(_) {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "break", "break", 126570225)], null)], null);
  };
  var G__2666 = function(var_args) {
    var _ = null;
    if (arguments.length > 0) {
      var G__2667__i = 0, G__2667__a = new Array(arguments.length - 0);
      while (G__2667__i < G__2667__a.length) {
        G__2667__a[G__2667__i] = arguments[G__2667__i + 0];
        ++G__2667__i;
      }
      _ = new cljs.core.IndexedSeq(G__2667__a, 0, null);
    }
    return G__2666__delegate.call(this, _);
  };
  G__2666.cljs$lang$maxFixedArity = 0;
  G__2666.cljs$lang$applyTo = function(arglist__2668) {
    var _ = cljs.core.seq(arglist__2668);
    return G__2666__delegate(_);
  };
  G__2666.cljs$core$IFn$_invoke$arity$variadic = G__2666__delegate;
  return G__2666;
}());
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "group", "group", 582596132), function(p__2669) {
  var vec__2670 = p__2669;
  var seq__2671 = cljs.core.seq.call(null, vec__2670);
  var first__2672 = cljs.core.first.call(null, seq__2671);
  var seq__2671__$1 = cljs.core.next.call(null, seq__2671);
  var _ = first__2672;
  var children = seq__2671__$1;
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "begin", "begin", -319034319)], null)], null), fipp.engine.serialize.call(null, children), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "op", "op", 
  -1882987955), new cljs.core.Keyword(null, "end", "end", -268185958)], null)], null));
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "nest", "nest", -314993663), function(p__2673) {
  var vec__2674 = p__2673;
  var seq__2675 = cljs.core.seq.call(null, vec__2674);
  var first__2676 = cljs.core.first.call(null, seq__2675);
  var seq__2675__$1 = cljs.core.next.call(null, seq__2675);
  var _ = first__2676;
  var args = seq__2675__$1;
  var vec__2677 = typeof cljs.core.first.call(null, args) === "number" ? args : cljs.core.cons.call(null, 2, args);
  var seq__2678 = cljs.core.seq.call(null, vec__2677);
  var first__2679 = cljs.core.first.call(null, seq__2678);
  var seq__2678__$1 = cljs.core.next.call(null, seq__2678);
  var offset = first__2679;
  var children = seq__2678__$1;
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "nest", "nest", -314993663), new cljs.core.Keyword(null, "offset", "offset", 296498311), offset], null)], null), fipp.engine.serialize.call(null, children), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "outdent", "outdent", 467209411)], null)], null));
});
cljs.core._add_method.call(null, fipp.engine.serialize_node, new cljs.core.Keyword(null, "align", "align", 1964212802), function(p__2680) {
  var vec__2681 = p__2680;
  var seq__2682 = cljs.core.seq.call(null, vec__2681);
  var first__2683 = cljs.core.first.call(null, seq__2682);
  var seq__2682__$1 = cljs.core.next.call(null, seq__2682);
  var _ = first__2683;
  var args = seq__2682__$1;
  var vec__2684 = typeof cljs.core.first.call(null, args) === "number" ? args : cljs.core.cons.call(null, 0, args);
  var seq__2685 = cljs.core.seq.call(null, vec__2684);
  var first__2686 = cljs.core.first.call(null, seq__2685);
  var seq__2685__$1 = cljs.core.next.call(null, seq__2685);
  var offset = first__2686;
  var children = seq__2685__$1;
  return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "align", "align", 1964212802), new cljs.core.Keyword(null, "offset", "offset", 296498311), offset], null)], null), fipp.engine.serialize.call(null, children), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "outdent", "outdent", 467209411)], null)], null));
});
fipp.engine.annotate_rights = function fipp$engine$annotate_rights(rf) {
  var pos = cljs.core.volatile_BANG_.call(null, 0);
  return function() {
    var G__2688 = null;
    var G__2688__0 = function() {
      return rf.call(null);
    };
    var G__2688__1 = function(res) {
      return rf.call(null, res);
    };
    var G__2688__2 = function(res, node) {
      var delta = function() {
        var G__2687 = (new cljs.core.Keyword(null, "op", "op", -1882987955)).cljs$core$IFn$_invoke$arity$1(node);
        var G__2687__$1 = G__2687 instanceof cljs.core.Keyword ? G__2687.fqn : null;
        switch(G__2687__$1) {
          case "text":
            return cljs.core.count.call(null, (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(node));
            break;
          case "line":
            return cljs.core.count.call(null, (new cljs.core.Keyword(null, "inline", "inline", 1399884222)).cljs$core$IFn$_invoke$arity$1(node));
            break;
          case "escaped":
            return 1;
            break;
          default:
            return 0;
        }
      }();
      var p = cljs.core._vreset_BANG_.call(null, pos, cljs.core._deref.call(null, pos) + delta);
      return rf.call(null, res, cljs.core.assoc.call(null, node, new cljs.core.Keyword(null, "right", "right", -452581833), p));
    };
    G__2688 = function(res, node) {
      switch(arguments.length) {
        case 0:
          return G__2688__0.call(this);
        case 1:
          return G__2688__1.call(this, res);
        case 2:
          return G__2688__2.call(this, res, node);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__2688.cljs$core$IFn$_invoke$arity$0 = G__2688__0;
    G__2688.cljs$core$IFn$_invoke$arity$1 = G__2688__1;
    G__2688.cljs$core$IFn$_invoke$arity$2 = G__2688__2;
    return G__2688;
  }();
};
fipp.engine.update_right = function fipp$engine$update_right(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___2693 = arguments.length;
  var i__4790__auto___2694 = 0;
  while (true) {
    if (i__4790__auto___2694 < len__4789__auto___2693) {
      args__4795__auto__.push(arguments[i__4790__auto___2694]);
      var G__2695 = i__4790__auto___2694 + 1;
      i__4790__auto___2694 = G__2695;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 2 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(2), 0, null) : null;
  return fipp.engine.update_right.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4796__auto__);
};
fipp.engine.update_right.cljs$core$IFn$_invoke$arity$variadic = function(deque, f, args) {
  return fipp.deque.conjr.call(null, cljs.core.pop.call(null, deque), cljs.core.apply.call(null, f, cljs.core.peek.call(null, deque), args));
};
fipp.engine.update_right.cljs$lang$maxFixedArity = 2;
fipp.engine.update_right.cljs$lang$applyTo = function(seq2690) {
  var G__2691 = cljs.core.first.call(null, seq2690);
  var seq2690__$1 = cljs.core.next.call(null, seq2690);
  var G__2692 = cljs.core.first.call(null, seq2690__$1);
  var seq2690__$2 = cljs.core.next.call(null, seq2690__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2691, G__2692, seq2690__$2);
};
fipp.engine.annotate_begins = function fipp$engine$annotate_begins(p__2696) {
  var map__2697 = p__2696;
  var map__2697__$1 = (!(map__2697 == null) ? map__2697.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2697.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2697) : map__2697;
  var options = map__2697__$1;
  var width = cljs.core.get.call(null, map__2697__$1, new cljs.core.Keyword(null, "width", "width", -384071477));
  return function(rf) {
    var pos = cljs.core.volatile_BANG_.call(null, 0);
    var bufs = cljs.core.volatile_BANG_.call(null, fipp.deque.empty);
    return function() {
      var G__2702 = null;
      var G__2702__0 = function() {
        return rf.call(null);
      };
      var G__2702__1 = function(res) {
        return rf.call(null, res);
      };
      var G__2702__2 = function(res, p__2699) {
        var map__2700 = p__2699;
        var map__2700__$1 = (!(map__2700 == null) ? map__2700.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2700.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2700) : map__2700;
        var node = map__2700__$1;
        var op = cljs.core.get.call(null, map__2700__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
        var right = cljs.core.get.call(null, map__2700__$1, new cljs.core.Keyword(null, "right", "right", -452581833));
        var buffers = cljs.core.deref.call(null, bufs);
        if (cljs.core.empty_QMARK_.call(null, buffers)) {
          if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword(null, "begin", "begin", -319034319))) {
            var position_STAR_ = right + width;
            var buffer = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), position_STAR_, new cljs.core.Keyword(null, "nodes", "nodes", -2099585805), fipp.deque.empty], null);
            cljs.core.vreset_BANG_.call(null, pos, position_STAR_);
            cljs.core.vreset_BANG_.call(null, bufs, fipp.deque.create.call(null, buffer));
            return res;
          } else {
            return rf.call(null, res, node);
          }
        } else {
          if (cljs.core._EQ_.call(null, op, new cljs.core.Keyword(null, "end", "end", -268185958))) {
            var buffer = cljs.core.peek.call(null, buffers);
            var buffers_STAR_ = cljs.core.pop.call(null, buffers);
            var begin = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "begin", "begin", -319034319), new cljs.core.Keyword(null, "right", "right", -452581833), right], null);
            var nodes = fipp.deque.conjlr.call(null, begin, (new cljs.core.Keyword(null, "nodes", "nodes", -2099585805)).cljs$core$IFn$_invoke$arity$1(buffer), node);
            if (cljs.core.empty_QMARK_.call(null, buffers_STAR_)) {
              cljs.core.vreset_BANG_.call(null, pos, 0);
              cljs.core.vreset_BANG_.call(null, bufs, fipp.deque.empty);
              return cljs.core.reduce.call(null, rf, res, nodes);
            } else {
              if (cljs.core.vector_QMARK_.call(null, buffers_STAR_)) {
              } else {
                throw new Error("Assert failed: (vector? buffers*)");
              }
              if (cljs.core.vector_QMARK_.call(null, nodes)) {
              } else {
                throw new Error("Assert failed: (vector? nodes)");
              }
              cljs.core.vreset_BANG_.call(null, bufs, fipp.engine.update_right.call(null, buffers_STAR_, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "nodes", "nodes", -2099585805)], null), fipp.deque.concat, nodes));
              return res;
            }
          } else {
            var buffers_STAR_ = cljs.core._EQ_.call(null, op, new cljs.core.Keyword(null, "begin", "begin", -319034319)) ? fipp.deque.conjr.call(null, buffers, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "position", "position", -2011731912), right + width, new cljs.core.Keyword(null, "nodes", "nodes", -2099585805), fipp.deque.empty], null)) : fipp.engine.update_right.call(null, buffers, cljs.core.update_in, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
            [new cljs.core.Keyword(null, "nodes", "nodes", -2099585805)], null), fipp.deque.conjr, node);
            var res__$1 = res;
            while (true) {
              if (right <= cljs.core.deref.call(null, pos) && cljs.core.count.call(null, buffers_STAR_) <= width) {
                cljs.core.vreset_BANG_.call(null, bufs, buffers_STAR_);
                return res__$1;
              } else {
                var buffer = cljs.core.first.call(null, buffers_STAR_);
                var buffers_STAR__STAR_ = fipp.deque.popl.call(null, buffers_STAR_);
                var begin = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "op", "op", -1882987955), new cljs.core.Keyword(null, "begin", "begin", -319034319), new cljs.core.Keyword(null, "right", "right", -452581833), new cljs.core.Keyword(null, "too-far", "too-far", 85800617)], null);
                var res_STAR_ = rf.call(null, res__$1, begin);
                var res_STAR___$1 = cljs.core.reduce.call(null, rf, res_STAR_, (new cljs.core.Keyword(null, "nodes", "nodes", -2099585805)).cljs$core$IFn$_invoke$arity$1(buffer));
                if (cljs.core.empty_QMARK_.call(null, buffers_STAR__STAR_)) {
                  cljs.core.vreset_BANG_.call(null, pos, 0);
                  cljs.core.vreset_BANG_.call(null, bufs, fipp.deque.empty);
                  return res_STAR___$1;
                } else {
                  cljs.core.vreset_BANG_.call(null, pos, (new cljs.core.Keyword(null, "position", "position", -2011731912)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, buffers_STAR__STAR_)));
                  var G__2703 = buffers_STAR__STAR_;
                  var G__2704 = res_STAR___$1;
                  buffers_STAR_ = G__2703;
                  res__$1 = G__2704;
                  continue;
                }
              }
              break;
            }
          }
        }
      };
      G__2702 = function(res, p__2699) {
        switch(arguments.length) {
          case 0:
            return G__2702__0.call(this);
          case 1:
            return G__2702__1.call(this, res);
          case 2:
            return G__2702__2.call(this, res, p__2699);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__2702.cljs$core$IFn$_invoke$arity$0 = G__2702__0;
      G__2702.cljs$core$IFn$_invoke$arity$1 = G__2702__1;
      G__2702.cljs$core$IFn$_invoke$arity$2 = G__2702__2;
      return G__2702;
    }();
  };
};
fipp.engine.format_nodes = function fipp$engine$format_nodes(p__2705) {
  var map__2706 = p__2705;
  var map__2706__$1 = (!(map__2706 == null) ? map__2706.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2706.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2706) : map__2706;
  var options = map__2706__$1;
  var width = cljs.core.get.call(null, map__2706__$1, new cljs.core.Keyword(null, "width", "width", -384071477));
  return function(rf) {
    var fits = cljs.core.volatile_BANG_.call(null, 0);
    var length = cljs.core.volatile_BANG_.call(null, width);
    var tab_stops = cljs.core.volatile_BANG_.call(null, cljs.core.list(0));
    var column = cljs.core.volatile_BANG_.call(null, 0);
    return function() {
      var G__2712 = null;
      var G__2712__0 = function() {
        return rf.call(null);
      };
      var G__2712__1 = function(res) {
        return rf.call(null, res);
      };
      var G__2712__2 = function(res, p__2708) {
        var map__2709 = p__2708;
        var map__2709__$1 = (!(map__2709 == null) ? map__2709.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2709.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2709) : map__2709;
        var node = map__2709__$1;
        var op = cljs.core.get.call(null, map__2709__$1, new cljs.core.Keyword(null, "op", "op", -1882987955));
        var right = cljs.core.get.call(null, map__2709__$1, new cljs.core.Keyword(null, "right", "right", -452581833));
        var indent = cljs.core.peek.call(null, cljs.core.deref.call(null, tab_stops));
        var G__2711 = op;
        var G__2711__$1 = G__2711 instanceof cljs.core.Keyword ? G__2711.fqn : null;
        switch(G__2711__$1) {
          case "text":
            var text = (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(node);
            var res_STAR_ = cljs.core.deref.call(null, column) === 0 ? function() {
              cljs.core._vreset_BANG_.call(null, column, cljs.core._deref.call(null, column) + indent);
              return rf.call(null, res, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, indent, " ")));
            }() : res;
            cljs.core._vreset_BANG_.call(null, column, cljs.core._deref.call(null, column) + cljs.core.count.call(null, text));
            return rf.call(null, res_STAR_, text);
            break;
          case "escaped":
            var text = (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(node);
            var res_STAR_ = cljs.core.deref.call(null, column) === 0 ? function() {
              cljs.core._vreset_BANG_.call(null, column, cljs.core._deref.call(null, column) + indent);
              return rf.call(null, res, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, indent, " ")));
            }() : res;
            cljs.core._vreset_BANG_.call(null, column, cljs.core._deref.call(null, column) + 1);
            return rf.call(null, res_STAR_, text);
            break;
          case "pass":
            return rf.call(null, res, (new cljs.core.Keyword(null, "text", "text", -1790561697)).cljs$core$IFn$_invoke$arity$1(node));
            break;
          case "line":
            if (cljs.core.deref.call(null, fits) === 0) {
              cljs.core.vreset_BANG_.call(null, length, right + width - indent);
              cljs.core.vreset_BANG_.call(null, column, 0);
              return rf.call(null, res, [cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "terminate", "terminate", 1256003496)).cljs$core$IFn$_invoke$arity$1(node)), "\n"].join(""));
            } else {
              var inline = (new cljs.core.Keyword(null, "inline", "inline", 1399884222)).cljs$core$IFn$_invoke$arity$1(node);
              cljs.core._vreset_BANG_.call(null, column, cljs.core._deref.call(null, column) + cljs.core.count.call(null, inline));
              return rf.call(null, res, inline);
            }
            break;
          case "break":
            cljs.core.vreset_BANG_.call(null, length, right + width - indent);
            cljs.core.vreset_BANG_.call(null, column, 0);
            return rf.call(null, res, "\n");
            break;
          case "nest":
            cljs.core._vreset_BANG_.call(null, tab_stops, cljs.core.conj.call(null, cljs.core._deref.call(null, tab_stops), indent + (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(node)));
            return res;
            break;
          case "align":
            cljs.core._vreset_BANG_.call(null, tab_stops, cljs.core.conj.call(null, cljs.core._deref.call(null, tab_stops), cljs.core.deref.call(null, column) + (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(node)));
            return res;
            break;
          case "outdent":
            cljs.core._vreset_BANG_.call(null, tab_stops, cljs.core.pop.call(null, cljs.core._deref.call(null, tab_stops)));
            return res;
            break;
          case "begin":
            cljs.core.vreset_BANG_.call(null, fits, cljs.core.deref.call(null, fits) > 0 ? cljs.core.deref.call(null, fits) + 1 : cljs.core._EQ_.call(null, right, new cljs.core.Keyword(null, "too-far", "too-far", 85800617)) ? 0 : right <= cljs.core.deref.call(null, length) ? 1 : 0);
            return res;
            break;
          case "end":
            cljs.core.vreset_BANG_.call(null, fits, function() {
              var x__4273__auto__ = 0;
              var y__4274__auto__ = cljs.core.deref.call(null, fits) - 1;
              return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
            }());
            return res;
            break;
          default:
            throw cljs.core.ex_info.call(null, "Unexpected node op", new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "node", "node", 581201198), node], null));
        }
      };
      G__2712 = function(res, p__2708) {
        switch(arguments.length) {
          case 0:
            return G__2712__0.call(this);
          case 1:
            return G__2712__1.call(this, res);
          case 2:
            return G__2712__2.call(this, res, p__2708);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__2712.cljs$core$IFn$_invoke$arity$0 = G__2712__0;
      G__2712.cljs$core$IFn$_invoke$arity$1 = G__2712__1;
      G__2712.cljs$core$IFn$_invoke$arity$2 = G__2712__2;
      return G__2712;
    }();
  };
};
fipp.engine.pprint_document = function fipp$engine$pprint_document(document, options) {
  var options_2714__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "width", "width", -384071477), 70], null), options);
  cljs.core.run_BANG_.call(null, cljs.core.print, cljs.core.eduction.call(null, fipp.engine.annotate_rights, fipp.engine.annotate_begins.call(null, options_2714__$1), fipp.engine.format_nodes.call(null, options_2714__$1), fipp.engine.serialize.call(null, document)));
  return cljs.core.println.call(null);
};
goog.provide("fipp.edn");
goog.require("cljs.core");
goog.require("fipp.ednize");
goog.require("fipp.visit");
goog.require("fipp.engine");
fipp.edn.pretty_coll = function fipp$edn$pretty_coll(p__2718, open, xs, sep, close, f) {
  var map__2719 = p__2718;
  var map__2719__$1 = (!(map__2719 == null) ? map__2719.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2719.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2719) : map__2719;
  var printer = map__2719__$1;
  var print_level = cljs.core.get.call(null, map__2719__$1, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733));
  var print_length = cljs.core.get.call(null, map__2719__$1, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356));
  var printer__$1 = function() {
    var G__2721 = printer;
    if (cljs.core.truth_(print_level)) {
      return cljs.core.update.call(null, G__2721, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), cljs.core.dec);
    } else {
      return G__2721;
    }
  }();
  var xform = cljs.core.comp.call(null, cljs.core.truth_(print_length) ? cljs.core.take.call(null, print_length) : cljs.core.identity, cljs.core.map.call(null, function(p1__2717_SHARP_) {
    return f.call(null, printer__$1, p1__2717_SHARP_);
  }), cljs.core.interpose.call(null, sep));
  var ys = function() {
    var or__4185__auto__ = print_level;
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return 1;
    }
  }() > 0 ? cljs.core.sequence.call(null, xform, xs) : "#";
  var ellipsis = cljs.core.truth_(function() {
    var and__4174__auto__ = print_length;
    if (cljs.core.truth_(and__4174__auto__)) {
      return cljs.core.seq.call(null, cljs.core.drop.call(null, print_length, xs));
    } else {
      return and__4174__auto__;
    }
  }()) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), sep, "..."], null) : null;
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), open, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), ys, ellipsis], null), close], null);
};
fipp.edn.EdnPrinter = function(symbols, print_meta, print_length, print_level, __meta, __extmap, __hash) {
  this.symbols = symbols;
  this.print_meta = print_meta;
  this.print_length = print_length;
  this.print_level = print_level;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
fipp.edn.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4439__auto__, k__4440__auto__) {
  var self__ = this;
  var this__4439__auto____$1 = this;
  return this__4439__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4440__auto__, null);
};
fipp.edn.EdnPrinter.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4441__auto__, k2723, else__4442__auto__) {
  var self__ = this;
  var this__4441__auto____$1 = this;
  var G__2727 = k2723;
  var G__2727__$1 = G__2727 instanceof cljs.core.Keyword ? G__2727.fqn : null;
  switch(G__2727__$1) {
    case "symbols":
      return self__.symbols;
      break;
    case "print-meta":
      return self__.print_meta;
      break;
    case "print-length":
      return self__.print_length;
      break;
    case "print-level":
      return self__.print_level;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2723, else__4442__auto__);
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4458__auto__, f__4459__auto__, init__4460__auto__) {
  var self__ = this;
  var this__4458__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4461__auto__, p__2728) {
    var vec__2729 = p__2728;
    var k__4462__auto__ = cljs.core.nth.call(null, vec__2729, 0, null);
    var v__4463__auto__ = cljs.core.nth.call(null, vec__2729, 1, null);
    return f__4459__auto__.call(null, ret__4461__auto__, k__4462__auto__, v__4463__auto__);
  }, init__4460__auto__, this__4458__auto____$1);
};
fipp.edn.EdnPrinter.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4453__auto__, writer__4454__auto__, opts__4455__auto__) {
  var self__ = this;
  var this__4453__auto____$1 = this;
  var pr_pair__4456__auto__ = function(keyval__4457__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, cljs.core.pr_writer, "", " ", "", opts__4455__auto__, keyval__4457__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4454__auto__, pr_pair__4456__auto__, "#fipp.edn.EdnPrinter{", ", ", "}", opts__4455__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "symbols", "symbols", 1211743), self__.symbols], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), self__.print_meta], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), self__.print_length], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), self__.print_level], null)], null), self__.__extmap));
};
fipp.edn.EdnPrinter.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2722) {
  var self__ = this;
  var G__2722__$1 = this;
  return new cljs.core.RecordIter(0, G__2722__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "symbols", "symbols", 1211743), new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), new cljs.core.Keyword(null, "print-level", "print-level", -1825423733)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : 
  cljs.core.nil_iter.call(null));
};
fipp.edn.EdnPrinter.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4437__auto__) {
  var self__ = this;
  var this__4437__auto____$1 = this;
  return self__.__meta;
};
fipp.edn.EdnPrinter.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4434__auto__) {
  var self__ = this;
  var this__4434__auto____$1 = this;
  return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, self__.__extmap, self__.__hash);
};
fipp.edn.EdnPrinter.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4443__auto__) {
  var self__ = this;
  var this__4443__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$ = cljs.core.PROTOCOL_SENTINEL;
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_record$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.visit.visit.call(null, this$__$1, fipp.ednize.record__GT_tagged.call(null, x));
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_meta$arity$3 = function(this$, m, x) {
  var self__ = this;
  var this$__$1 = this;
  if (cljs.core.truth_(self__.print_meta)) {
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), "^", fipp.visit.visit.call(null, this$__$1, m)], null), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.visit.visit_STAR_.call(null, this$__$1, x)], null);
  } else {
    return fipp.visit.visit_STAR_.call(null, this$__$1, x);
  }
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_number$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.pr_str.call(null, x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_pattern$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.pr_str.call(null, x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_unknown$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.visit.visit.call(null, this$__$1, fipp.ednize.edn.call(null, x));
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_symbol$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_seq$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  var temp__5733__auto__ = self__.symbols.call(null, cljs.core.first.call(null, x));
  if (cljs.core.truth_(temp__5733__auto__)) {
    var pretty = temp__5733__auto__;
    return pretty.call(null, this$__$1, x);
  } else {
    return fipp.edn.pretty_coll.call(null, this$__$1, "(", x, new cljs.core.Keyword(null, "line", "line", 212345235), ")", fipp.visit.visit);
  }
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_boolean$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_tagged$arity$2 = function(this$, p__2732) {
  var self__ = this;
  var map__2733 = p__2732;
  var map__2733__$1 = (!(map__2733 == null) ? map__2733.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2733.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2733) : map__2733;
  var tag = cljs.core.get.call(null, map__2733__$1, new cljs.core.Keyword(null, "tag", "tag", -1290361223));
  var form = cljs.core.get.call(null, map__2733__$1, new cljs.core.Keyword(null, "form", "form", -1624062471));
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), "#", cljs.core.pr_str.call(null, tag), cljs.core.truth_(function() {
    var or__4185__auto__ = function() {
      var and__4174__auto__ = self__.print_meta;
      if (cljs.core.truth_(and__4174__auto__)) {
        return cljs.core.meta.call(null, form);
      } else {
        return and__4174__auto__;
      }
    }();
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return !cljs.core.coll_QMARK_.call(null, form);
    }
  }()) ? " " : null, fipp.visit.visit.call(null, this$__$1, form)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_keyword$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_map$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll.call(null, this$__$1, "{", x, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), ",", new cljs.core.Keyword(null, "line", "line", 212345235)], null), "}", function(printer, p__2735) {
    var vec__2736 = p__2735;
    var k = cljs.core.nth.call(null, vec__2736, 0, null);
    var v = cljs.core.nth.call(null, vec__2736, 1, null);
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), fipp.visit.visit.call(null, printer, k), " ", fipp.visit.visit.call(null, printer, v)], null);
  });
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_nil$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), "nil"], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_character$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.pr_str.call(null, x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_string$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.pr_str.call(null, x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_var$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "text", "text", -1790561697), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)], null);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_set$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll.call(null, this$__$1, "#{", x, new cljs.core.Keyword(null, "line", "line", 212345235), "}", fipp.visit.visit);
};
fipp.edn.EdnPrinter.prototype.fipp$visit$IVisitor$visit_vector$arity$2 = function(this$, x) {
  var self__ = this;
  var this$__$1 = this;
  return fipp.edn.pretty_coll.call(null, this$__$1, "[", x, new cljs.core.Keyword(null, "line", "line", 212345235), "]", fipp.visit.visit);
};
fipp.edn.EdnPrinter.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4435__auto__) {
  var self__ = this;
  var this__4435__auto____$1 = this;
  var h__4297__auto__ = self__.__hash;
  if (!(h__4297__auto__ == null)) {
    return h__4297__auto__;
  } else {
    var h__4297__auto____$1 = function(coll__4436__auto__) {
      return 222486956 ^ cljs.core.hash_unordered_coll.call(null, coll__4436__auto__);
    }.call(null, this__4435__auto____$1);
    self__.__hash = h__4297__auto____$1;
    return h__4297__auto____$1;
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2724, other2725) {
  var self__ = this;
  var this2724__$1 = this;
  return !(other2725 == null) && this2724__$1.constructor === other2725.constructor && cljs.core._EQ_.call(null, this2724__$1.symbols, other2725.symbols) && cljs.core._EQ_.call(null, this2724__$1.print_meta, other2725.print_meta) && cljs.core._EQ_.call(null, this2724__$1.print_length, other2725.print_length) && cljs.core._EQ_.call(null, this2724__$1.print_level, other2725.print_level) && cljs.core._EQ_.call(null, this2724__$1.__extmap, other2725.__extmap);
};
fipp.edn.EdnPrinter.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4448__auto__, k__4449__auto__) {
  var self__ = this;
  var this__4448__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), null, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), null, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), null, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), null], null), null), k__4449__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4448__auto____$1), self__.__meta), k__4449__auto__);
  } else {
    return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4449__auto__)), null);
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4446__auto__, k__4447__auto__, G__2722) {
  var self__ = this;
  var this__4446__auto____$1 = this;
  var pred__2739 = cljs.core.keyword_identical_QMARK_;
  var expr__2740 = k__4447__auto__;
  if (cljs.core.truth_(pred__2739.call(null, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), expr__2740))) {
    return new fipp.edn.EdnPrinter(G__2722, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2739.call(null, new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), expr__2740))) {
      return new fipp.edn.EdnPrinter(self__.symbols, G__2722, self__.print_length, self__.print_level, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2739.call(null, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), expr__2740))) {
        return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, G__2722, self__.print_level, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2739.call(null, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), expr__2740))) {
          return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, G__2722, self__.__meta, self__.__extmap, null);
        } else {
          return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4447__auto__, G__2722), null);
        }
      }
    }
  }
};
fipp.edn.EdnPrinter.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4451__auto__) {
  var self__ = this;
  var this__4451__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "symbols", "symbols", 1211743), self__.symbols, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), self__.print_meta, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), self__.print_length, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "print-level", "print-level", -1825423733), self__.print_level, null)], null), self__.__extmap));
};
fipp.edn.EdnPrinter.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4438__auto__, G__2722) {
  var self__ = this;
  var this__4438__auto____$1 = this;
  return new fipp.edn.EdnPrinter(self__.symbols, self__.print_meta, self__.print_length, self__.print_level, G__2722, self__.__extmap, self__.__hash);
};
fipp.edn.EdnPrinter.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4444__auto__, entry__4445__auto__) {
  var self__ = this;
  var this__4444__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4445__auto__)) {
    return this__4444__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4445__auto__, 0), cljs.core._nth.call(null, entry__4445__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4444__auto____$1, entry__4445__auto__);
  }
};
fipp.edn.EdnPrinter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "symbols", "symbols", 1641743270, null), new cljs.core.Symbol(null, "print-meta", "print-meta", -1620321171, null), new cljs.core.Symbol(null, "print-length", "print-length", -722569413, null), new cljs.core.Symbol(null, "print-level", "print-level", -184892206, null)], null);
};
fipp.edn.EdnPrinter.cljs$lang$type = true;
fipp.edn.EdnPrinter.cljs$lang$ctorPrSeq = function(this__4482__auto__) {
  return new cljs.core.List(null, "fipp.edn/EdnPrinter", null, 1, null);
};
fipp.edn.EdnPrinter.cljs$lang$ctorPrWriter = function(this__4482__auto__, writer__4483__auto__) {
  return cljs.core._write.call(null, writer__4483__auto__, "fipp.edn/EdnPrinter");
};
fipp.edn.__GT_EdnPrinter = function fipp$edn$__GT_EdnPrinter(symbols, print_meta, print_length, print_level) {
  return new fipp.edn.EdnPrinter(symbols, print_meta, print_length, print_level, null, null, null);
};
fipp.edn.map__GT_EdnPrinter = function fipp$edn$map__GT_EdnPrinter(G__2726) {
  var extmap__4478__auto__ = function() {
    var G__2742 = cljs.core.dissoc.call(null, G__2726, new cljs.core.Keyword(null, "symbols", "symbols", 1211743), new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), new cljs.core.Keyword(null, "print-level", "print-level", -1825423733));
    if (cljs.core.record_QMARK_.call(null, G__2726)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2742);
    } else {
      return G__2742;
    }
  }();
  return new fipp.edn.EdnPrinter((new cljs.core.Keyword(null, "symbols", "symbols", 1211743)).cljs$core$IFn$_invoke$arity$1(G__2726), (new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598)).cljs$core$IFn$_invoke$arity$1(G__2726), (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(G__2726), (new cljs.core.Keyword(null, "print-level", "print-level", -1825423733)).cljs$core$IFn$_invoke$arity$1(G__2726), null, cljs.core.not_empty.call(null, 
  extmap__4478__auto__), null);
};
fipp.edn.pprint = function fipp$edn$pprint(var_args) {
  var G__2745 = arguments.length;
  switch(G__2745) {
    case 1:
      return fipp.edn.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return fipp.edn.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
fipp.edn.pprint.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return fipp.edn.pprint.call(null, x, cljs.core.PersistentArrayMap.EMPTY);
};
fipp.edn.pprint.cljs$core$IFn$_invoke$arity$2 = function(x, options) {
  var defaults = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "symbols", "symbols", 1211743), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "print-length", "print-length", 1931866356), cljs.core._STAR_print_length_STAR_, new cljs.core.Keyword(null, "print-level", "print-level", -1825423733), cljs.core._STAR_print_level_STAR_, new cljs.core.Keyword(null, "print-meta", "print-meta", 1034114598), cljs.core._STAR_print_meta_STAR_], null);
  var printer = fipp.edn.map__GT_EdnPrinter.call(null, cljs.core.merge.call(null, defaults, options));
  var _STAR_print_meta_STAR__orig_val__2746 = cljs.core._STAR_print_meta_STAR_;
  var _STAR_print_meta_STAR__temp_val__2747 = false;
  cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__temp_val__2747;
  try {
    return fipp.engine.pprint_document.call(null, fipp.visit.visit.call(null, printer, x), options);
  } finally {
    cljs.core._STAR_print_meta_STAR_ = _STAR_print_meta_STAR__orig_val__2746;
  }
};
fipp.edn.pprint.cljs$lang$maxFixedArity = 2;
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.list_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.map_entry_QMARK_.call(null, form)) {
      return outer.call(null, new cljs.core.MapEntry(inner.call(null, cljs.core.key.call(null, form)), inner.call(null, cljs.core.val.call(null, form)), null));
    } else {
      if (cljs.core.seq_QMARK_.call(null, form)) {
        return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
      } else {
        if (cljs.core.record_QMARK_.call(null, form)) {
          return outer.call(null, cljs.core.reduce.call(null, function(r, x) {
            return cljs.core.conj.call(null, r, inner.call(null, x));
          }, form, form));
        } else {
          if (cljs.core.coll_QMARK_.call(null, form)) {
            return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
          } else {
            return outer.call(null, form);
          }
        }
      }
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__2751) {
    var vec__2752 = p__2751;
    var k = cljs.core.nth.call(null, vec__2752, 0, null);
    var v = cljs.core.nth.call(null, vec__2752, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__2755) {
    var vec__2756 = p__2755;
    var k = cljs.core.nth.call(null, vec__2756, 0, null);
    var v = cljs.core.nth.call(null, vec__2756, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("fipp.clojure");
goog.require("cljs.core");
goog.require("clojure.walk");
goog.require("fipp.visit");
goog.require("fipp.edn");
fipp.clojure.block = function fipp$clojure$block(nodes) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "nest", "nest", -314993663), 2, cljs.core.interpose.call(null, new cljs.core.Keyword(null, "line", "line", 212345235), nodes)], null);
};
fipp.clojure.list_group = function fipp$clojure$list_group(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___2762 = arguments.length;
  var i__4790__auto___2763 = 0;
  while (true) {
    if (i__4790__auto___2763 < len__4789__auto___2762) {
      args__4795__auto__.push(arguments[i__4790__auto___2763]);
      var G__2764 = i__4790__auto___2763 + 1;
      i__4790__auto___2763 = G__2764;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 0 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(0), 0, null) : null;
  return fipp.clojure.list_group.cljs$core$IFn$_invoke$arity$variadic(argseq__4796__auto__);
};
fipp.clojure.list_group.cljs$core$IFn$_invoke$arity$variadic = function(nodes) {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), "(", nodes, ")"], null);
};
fipp.clojure.list_group.cljs$lang$maxFixedArity = 0;
fipp.clojure.list_group.cljs$lang$applyTo = function(seq2761) {
  var self__4777__auto__ = this;
  return self__4777__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2761));
};
fipp.clojure.maybe_a = function fipp$clojure$maybe_a(pred, xs) {
  var x = cljs.core.first.call(null, xs);
  if (cljs.core.truth_(pred.call(null, x))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, cljs.core.rest.call(null, xs)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, xs], null);
  }
};
fipp.clojure.pretty_cond_clause = function fipp$clojure$pretty_cond_clause(p, p__2765) {
  var vec__2766 = p__2765;
  var test = cljs.core.nth.call(null, vec__2766, 0, null);
  var result = cljs.core.nth.call(null, vec__2766, 1, null);
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), fipp.visit.visit.call(null, p, test), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "nest", "nest", -314993663), 2, fipp.visit.visit.call(null, p, result)], null)], null);
};
fipp.clojure.pretty_case = function fipp$clojure$pretty_case(p, p__2770) {
  var vec__2771 = p__2770;
  var seq__2772 = cljs.core.seq.call(null, vec__2771);
  var first__2773 = cljs.core.first.call(null, seq__2772);
  var seq__2772__$1 = cljs.core.next.call(null, seq__2772);
  var head = first__2773;
  var first__2773__$1 = cljs.core.first.call(null, seq__2772__$1);
  var seq__2772__$2 = cljs.core.next.call(null, seq__2772__$1);
  var expr = first__2773__$1;
  var more = seq__2772__$2;
  var clauses = cljs.core.partition.call(null, 2, more);
  var default$ = cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, more)) ? cljs.core.last.call(null, more) : null;
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), " ", fipp.visit.visit.call(null, p, expr), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.block.call(null, cljs.core.concat.call(null, cljs.core.map.call(null, function(p1__2769_SHARP_) {
    return fipp.clojure.pretty_cond_clause.call(null, p, p1__2769_SHARP_);
  }, clauses), cljs.core.truth_(default$) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fipp.visit.visit.call(null, p, default$)], null) : null)));
};
fipp.clojure.pretty_cond = function fipp$clojure$pretty_cond(p, p__2775) {
  var vec__2776 = p__2775;
  var seq__2777 = cljs.core.seq.call(null, vec__2776);
  var first__2778 = cljs.core.first.call(null, seq__2777);
  var seq__2777__$1 = cljs.core.next.call(null, seq__2777);
  var head = first__2778;
  var more = seq__2777__$1;
  var clauses = cljs.core.partition.call(null, 2, more);
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.block.call(null, cljs.core.map.call(null, function(p1__2774_SHARP_) {
    return fipp.clojure.pretty_cond_clause.call(null, p, p1__2774_SHARP_);
  }, clauses)));
};
fipp.clojure.pretty_condp = function fipp$clojure$pretty_condp(p, p__2780) {
  var vec__2781 = p__2780;
  var seq__2782 = cljs.core.seq.call(null, vec__2781);
  var first__2783 = cljs.core.first.call(null, seq__2782);
  var seq__2782__$1 = cljs.core.next.call(null, seq__2782);
  var head = first__2783;
  var first__2783__$1 = cljs.core.first.call(null, seq__2782__$1);
  var seq__2782__$2 = cljs.core.next.call(null, seq__2782__$1);
  var pred = first__2783__$1;
  var first__2783__$2 = cljs.core.first.call(null, seq__2782__$2);
  var seq__2782__$3 = cljs.core.next.call(null, seq__2782__$2);
  var expr = first__2783__$2;
  var more = seq__2782__$3;
  var clauses = cljs.core.partition.call(null, 2, more);
  var default$ = cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, more)) ? cljs.core.last.call(null, more) : null;
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), " ", fipp.visit.visit.call(null, p, pred), " ", fipp.visit.visit.call(null, p, expr), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.block.call(null, cljs.core.concat.call(null, cljs.core.map.call(null, function(p1__2779_SHARP_) {
    return fipp.clojure.pretty_cond_clause.call(null, p, p1__2779_SHARP_);
  }, clauses), cljs.core.truth_(default$) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fipp.visit.visit.call(null, p, default$)], null) : null)));
};
fipp.clojure.pretty_arrow = function fipp$clojure$pretty_arrow(p, p__2785) {
  var vec__2786 = p__2785;
  var seq__2787 = cljs.core.seq.call(null, vec__2786);
  var first__2788 = cljs.core.first.call(null, seq__2787);
  var seq__2787__$1 = cljs.core.next.call(null, seq__2787);
  var head = first__2788;
  var stmts = seq__2787__$1;
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), " ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), cljs.core.interpose.call(null, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.core.map.call(null, function(p1__2784_SHARP_) {
    return fipp.visit.visit.call(null, p, p1__2784_SHARP_);
  }, stmts))], null));
};
fipp.clojure.pretty_if = function fipp$clojure$pretty_if(p, p__2790) {
  var vec__2791 = p__2790;
  var seq__2792 = cljs.core.seq.call(null, vec__2791);
  var first__2793 = cljs.core.first.call(null, seq__2792);
  var seq__2792__$1 = cljs.core.next.call(null, seq__2792);
  var head = first__2793;
  var first__2793__$1 = cljs.core.first.call(null, seq__2792__$1);
  var seq__2792__$2 = cljs.core.next.call(null, seq__2792__$1);
  var test = first__2793__$1;
  var more = seq__2792__$2;
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), " ", fipp.visit.visit.call(null, p, test), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.block.call(null, cljs.core.map.call(null, function(p1__2789_SHARP_) {
    return fipp.visit.visit.call(null, p, p1__2789_SHARP_);
  }, more)));
};
fipp.clojure.pretty_method = function fipp$clojure$pretty_method(p, p__2795) {
  var vec__2796 = p__2795;
  var seq__2797 = cljs.core.seq.call(null, vec__2796);
  var first__2798 = cljs.core.first.call(null, seq__2797);
  var seq__2797__$1 = cljs.core.next.call(null, seq__2797);
  var params = first__2798;
  var body = seq__2797__$1;
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, params), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.block.call(null, cljs.core.map.call(null, function(p1__2794_SHARP_) {
    return fipp.visit.visit.call(null, p, p1__2794_SHARP_);
  }, body)));
};
fipp.clojure.pretty_defn = function fipp$clojure$pretty_defn(p, p__2801) {
  var vec__2802 = p__2801;
  var seq__2803 = cljs.core.seq.call(null, vec__2802);
  var first__2804 = cljs.core.first.call(null, seq__2803);
  var seq__2803__$1 = cljs.core.next.call(null, seq__2803);
  var head = first__2804;
  var first__2804__$1 = cljs.core.first.call(null, seq__2803__$1);
  var seq__2803__$2 = cljs.core.next.call(null, seq__2803__$1);
  var fn_name = first__2804__$1;
  var more = seq__2803__$2;
  var vec__2805 = fipp.clojure.maybe_a.call(null, cljs.core.string_QMARK_, more);
  var docstring = cljs.core.nth.call(null, vec__2805, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__2805, 1, null);
  var vec__2808 = fipp.clojure.maybe_a.call(null, cljs.core.map_QMARK_, more__$1);
  var attr_map = cljs.core.nth.call(null, vec__2808, 0, null);
  var more__$2 = cljs.core.nth.call(null, vec__2808, 1, null);
  var vec__2811 = fipp.clojure.maybe_a.call(null, cljs.core.vector_QMARK_, more__$2);
  var params = cljs.core.nth.call(null, vec__2811, 0, null);
  var body = cljs.core.nth.call(null, vec__2811, 1, null);
  var params_on_first_line_QMARK_ = function() {
    var and__4174__auto__ = params;
    if (cljs.core.truth_(and__4174__auto__)) {
      return docstring == null && attr_map == null;
    } else {
      return and__4174__auto__;
    }
  }();
  var params_after_attr_map_QMARK_ = function() {
    var and__4174__auto__ = params;
    if (cljs.core.truth_(and__4174__auto__)) {
      return cljs.core.not.call(null, params_on_first_line_QMARK_);
    } else {
      return and__4174__auto__;
    }
  }();
  return fipp.clojure.list_group.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fipp.visit.visit.call(null, p, head), " ", fipp.visit.visit.call(null, p, fn_name)], null), cljs.core.truth_(params_on_first_line_QMARK_) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", fipp.visit.visit.call(null, p, params)], null) : null), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.block.call(null, 
  cljs.core.concat.call(null, cljs.core.truth_(docstring) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fipp.visit.visit.call(null, p, docstring)], null) : null, cljs.core.truth_(attr_map) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fipp.visit.visit.call(null, p, attr_map)], null) : null, cljs.core.truth_(params_after_attr_map_QMARK_) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [fipp.visit.visit.call(null, p, params)], null) : null, cljs.core.truth_(body) ? cljs.core.map.call(null, function(p1__2799_SHARP_) {
    return fipp.visit.visit.call(null, p, p1__2799_SHARP_);
  }, body) : cljs.core.map.call(null, function(p1__2800_SHARP_) {
    return fipp.clojure.pretty_method.call(null, p, p1__2800_SHARP_);
  }, more__$2))));
};
fipp.clojure.pretty_fn = function fipp$clojure$pretty_fn(p, p__2816) {
  var vec__2817 = p__2816;
  var seq__2818 = cljs.core.seq.call(null, vec__2817);
  var first__2819 = cljs.core.first.call(null, seq__2818);
  var seq__2818__$1 = cljs.core.next.call(null, seq__2818);
  var head = first__2819;
  var more = seq__2818__$1;
  var vec__2820 = fipp.clojure.maybe_a.call(null, cljs.core.symbol_QMARK_, more);
  var fn_name = cljs.core.nth.call(null, vec__2820, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__2820, 1, null);
  var vec__2823 = fipp.clojure.maybe_a.call(null, cljs.core.vector_QMARK_, more__$1);
  var params = cljs.core.nth.call(null, vec__2823, 0, null);
  var body = cljs.core.nth.call(null, vec__2823, 1, null);
  return fipp.clojure.list_group.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fipp.visit.visit.call(null, p, head)], null), cljs.core.truth_(fn_name) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", fipp.visit.visit.call(null, p, fn_name)], null) : null, cljs.core.truth_(params) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", fipp.visit.visit.call(null, 
  p, params)], null) : null), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.block.call(null, cljs.core.truth_(body) ? cljs.core.map.call(null, function(p1__2814_SHARP_) {
    return fipp.visit.visit.call(null, p, p1__2814_SHARP_);
  }, body) : cljs.core.map.call(null, function(p1__2815_SHARP_) {
    return fipp.clojure.pretty_method.call(null, p, p1__2815_SHARP_);
  }, more__$1)));
};
fipp.clojure.pretty_fn_STAR_ = function fipp$clojure$pretty_fn_STAR_(p, p__2829) {
  var vec__2830 = p__2829;
  var _ = cljs.core.nth.call(null, vec__2830, 0, null);
  var params = cljs.core.nth.call(null, vec__2830, 1, null);
  var body = cljs.core.nth.call(null, vec__2830, 2, null);
  var form = vec__2830;
  if (cljs.core.vector_QMARK_.call(null, params) && cljs.core.seq_QMARK_.call(null, body)) {
    var vec__2833 = cljs.core.split_with.call(null, function(p1__2826_SHARP_) {
      return cljs.core.not_EQ_.call(null, p1__2826_SHARP_, new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null));
    }, params);
    var inits = cljs.core.nth.call(null, vec__2833, 0, null);
    var rests = cljs.core.nth.call(null, vec__2833, 1, null);
    var params_STAR_ = cljs.core.merge.call(null, cljs.core._EQ_.call(null, cljs.core.count.call(null, inits), 1) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first.call(null, inits), new cljs.core.Symbol(null, "%", "%", -950237169, null)]) : cljs.core.zipmap.call(null, inits, cljs.core.map.call(null, function(p1__2827_SHARP_) {
      return cljs.core.symbol.call(null, ["%", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__2827_SHARP_ + 1)].join(""));
    }, cljs.core.range.call(null))), cljs.core.seq.call(null, rests) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.second.call(null, rests), new cljs.core.Symbol(null, "%\x26", "%\x26", -728707069, null)]) : null);
    var body_STAR_ = clojure.walk.prewalk_replace.call(null, params_STAR_, body);
    return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), "#(", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), 2, cljs.core.interpose.call(null, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.core.map.call(null, function(p1__2828_SHARP_) {
      return fipp.visit.visit.call(null, p, p1__2828_SHARP_);
    }, body_STAR_))], null), ")"], null);
  } else {
    return fipp.clojure.pretty_fn.call(null, p, form);
  }
};
fipp.clojure.pretty_libspec = function fipp$clojure$pretty_libspec(p, p__2837) {
  var vec__2838 = p__2837;
  var seq__2839 = cljs.core.seq.call(null, vec__2838);
  var first__2840 = cljs.core.first.call(null, seq__2839);
  var seq__2839__$1 = cljs.core.next.call(null, seq__2839);
  var head = first__2840;
  var clauses = seq__2839__$1;
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), " ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), cljs.core.interpose.call(null, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.core.map.call(null, function(p1__2836_SHARP_) {
    return fipp.visit.visit.call(null, p, p1__2836_SHARP_);
  }, clauses))], null));
};
fipp.clojure.pretty_ns = function fipp$clojure$pretty_ns(p, p__2842) {
  var vec__2843 = p__2842;
  var seq__2844 = cljs.core.seq.call(null, vec__2843);
  var first__2845 = cljs.core.first.call(null, seq__2844);
  var seq__2844__$1 = cljs.core.next.call(null, seq__2844);
  var head = first__2845;
  var first__2845__$1 = cljs.core.first.call(null, seq__2844__$1);
  var seq__2844__$2 = cljs.core.next.call(null, seq__2844__$1);
  var ns_sym = first__2845__$1;
  var more = seq__2844__$2;
  var vec__2846 = fipp.clojure.maybe_a.call(null, cljs.core.string_QMARK_, more);
  var docstring = cljs.core.nth.call(null, vec__2846, 0, null);
  var more__$1 = cljs.core.nth.call(null, vec__2846, 1, null);
  var vec__2849 = fipp.clojure.maybe_a.call(null, cljs.core.map_QMARK_, more__$1);
  var attr_map = cljs.core.nth.call(null, vec__2849, 0, null);
  var specs = cljs.core.nth.call(null, vec__2849, 1, null);
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), " ", fipp.visit.visit.call(null, p, ns_sym), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.block.call(null, cljs.core.concat.call(null, cljs.core.truth_(docstring) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [fipp.visit.visit.call(null, p, docstring)], null) : null, cljs.core.truth_(attr_map) ? new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [fipp.visit.visit.call(null, p, attr_map)], null) : null, cljs.core.map.call(null, function(p1__2841_SHARP_) {
    return fipp.clojure.pretty_libspec.call(null, p, p1__2841_SHARP_);
  }, specs))));
};
fipp.clojure.pretty_quote = function fipp$clojure$pretty_quote(p, p__2852) {
  var vec__2853 = p__2852;
  var macro = cljs.core.nth.call(null, vec__2853, 0, null);
  var arg = cljs.core.nth.call(null, vec__2853, 1, null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), function() {
    var G__2856 = cljs.core.keyword.call(null, cljs.core.name.call(null, macro));
    var G__2856__$1 = G__2856 instanceof cljs.core.Keyword ? G__2856.fqn : null;
    switch(G__2856__$1) {
      case "deref":
        return "@";
        break;
      case "quote":
        return "'";
        break;
      case "unquote":
        return "~";
        break;
      case "var":
        return "#'";
        break;
      default:
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__2856__$1)].join(""));
    }
  }(), fipp.visit.visit.call(null, p, arg)], null);
};
fipp.clojure.pretty_bindings = function fipp$clojure$pretty_bindings(p, bvec) {
  var kvps = function() {
    var iter__4582__auto__ = function fipp$clojure$pretty_bindings_$_iter__2858(s__2859) {
      return new cljs.core.LazySeq(null, function() {
        var s__2859__$1 = s__2859;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__2859__$1);
          if (temp__5735__auto__) {
            var s__2859__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__2859__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__2859__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__2861 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__2860 = 0;
                while (true) {
                  if (i__2860 < size__4581__auto__) {
                    var vec__2862 = cljs.core._nth.call(null, c__4580__auto__, i__2860);
                    var k = cljs.core.nth.call(null, vec__2862, 0, null);
                    var v = cljs.core.nth.call(null, vec__2862, 1, null);
                    cljs.core.chunk_append.call(null, b__2861, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), fipp.visit.visit.call(null, p, k), " ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), fipp.visit.visit.call(null, p, v)], null)], null));
                    var G__2868 = i__2860 + 1;
                    i__2860 = G__2868;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2861), fipp$clojure$pretty_bindings_$_iter__2858.call(null, cljs.core.chunk_rest.call(null, s__2859__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2861), null);
              }
            } else {
              var vec__2865 = cljs.core.first.call(null, s__2859__$2);
              var k = cljs.core.nth.call(null, vec__2865, 0, null);
              var v = cljs.core.nth.call(null, vec__2865, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), fipp.visit.visit.call(null, p, k), " ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), fipp.visit.visit.call(null, p, v)], null)], null), fipp$clojure$pretty_bindings_$_iter__2858.call(null, cljs.core.rest.call(null, s__2859__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, cljs.core.partition.call(null, 2, bvec));
  }();
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "group", "group", 582596132), "[", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "align", "align", 1964212802), cljs.core.interpose.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "line", "line", 212345235), ", "], null), kvps)], null), "]"], 
  null);
};
fipp.clojure.pretty_let = function fipp$clojure$pretty_let(p, p__2870) {
  var vec__2871 = p__2870;
  var seq__2872 = cljs.core.seq.call(null, vec__2871);
  var first__2873 = cljs.core.first.call(null, seq__2872);
  var seq__2872__$1 = cljs.core.next.call(null, seq__2872);
  var head = first__2873;
  var first__2873__$1 = cljs.core.first.call(null, seq__2872__$1);
  var seq__2872__$2 = cljs.core.next.call(null, seq__2872__$1);
  var bvec = first__2873__$1;
  var body = seq__2872__$2;
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), " ", fipp.clojure.pretty_bindings.call(null, p, bvec), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.block.call(null, cljs.core.map.call(null, function(p1__2869_SHARP_) {
    return fipp.visit.visit.call(null, p, p1__2869_SHARP_);
  }, body)));
};
fipp.clojure.pretty_impls = function fipp$clojure$pretty_impls(p, opts_PLUS_specs) {
  return fipp.clojure.block.call(null, cljs.core.map.call(null, function(p1__2874_SHARP_) {
    return fipp.visit.visit.call(null, p, p1__2874_SHARP_);
  }, opts_PLUS_specs));
};
fipp.clojure.pretty_type = function fipp$clojure$pretty_type(p, p__2875) {
  var vec__2876 = p__2875;
  var seq__2877 = cljs.core.seq.call(null, vec__2876);
  var first__2878 = cljs.core.first.call(null, seq__2877);
  var seq__2877__$1 = cljs.core.next.call(null, seq__2877);
  var head = first__2878;
  var first__2878__$1 = cljs.core.first.call(null, seq__2877__$1);
  var seq__2877__$2 = cljs.core.next.call(null, seq__2877__$1);
  var fields = first__2878__$1;
  var opts_PLUS_specs = seq__2877__$2;
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), " ", fipp.visit.visit.call(null, p, fields), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.pretty_impls.call(null, p, opts_PLUS_specs));
};
fipp.clojure.pretty_reify = function fipp$clojure$pretty_reify(p, p__2879) {
  var vec__2880 = p__2879;
  var seq__2881 = cljs.core.seq.call(null, vec__2880);
  var first__2882 = cljs.core.first.call(null, seq__2881);
  var seq__2881__$1 = cljs.core.next.call(null, seq__2881);
  var head = first__2882;
  var opts_PLUS_specs = seq__2881__$1;
  return fipp.clojure.list_group.call(null, fipp.visit.visit.call(null, p, head), new cljs.core.Keyword(null, "line", "line", 212345235), fipp.clojure.pretty_impls.call(null, p, opts_PLUS_specs));
};
fipp.clojure.build_symbol_map = function fipp$clojure$build_symbol_map(dispatch) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4582__auto__ = function fipp$clojure$build_symbol_map_$_iter__2883(s__2884) {
      return new cljs.core.LazySeq(null, function() {
        var s__2884__$1 = s__2884;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__2884__$1);
          if (temp__5735__auto__) {
            var xs__6292__auto__ = temp__5735__auto__;
            var vec__2891 = cljs.core.first.call(null, xs__6292__auto__);
            var pretty_fn = cljs.core.nth.call(null, vec__2891, 0, null);
            var syms = cljs.core.nth.call(null, vec__2891, 1, null);
            var iterys__4578__auto__ = function(s__2884__$1, vec__2891, pretty_fn, syms, xs__6292__auto__, temp__5735__auto__) {
              return function fipp$clojure$build_symbol_map_$_iter__2883_$_iter__2885(s__2886) {
                return new cljs.core.LazySeq(null, function(s__2884__$1, vec__2891, pretty_fn, syms, xs__6292__auto__, temp__5735__auto__) {
                  return function() {
                    var s__2886__$1 = s__2886;
                    while (true) {
                      var temp__5735__auto____$1 = cljs.core.seq.call(null, s__2886__$1);
                      if (temp__5735__auto____$1) {
                        var xs__6292__auto____$1 = temp__5735__auto____$1;
                        var sym = cljs.core.first.call(null, xs__6292__auto____$1);
                        var iterys__4578__auto__ = function(s__2886__$1, s__2884__$1, sym, xs__6292__auto____$1, temp__5735__auto____$1, vec__2891, pretty_fn, syms, xs__6292__auto__, temp__5735__auto__) {
                          return function fipp$clojure$build_symbol_map_$_iter__2883_$_iter__2885_$_iter__2887(s__2888) {
                            return new cljs.core.LazySeq(null, function(s__2886__$1, s__2884__$1, sym, xs__6292__auto____$1, temp__5735__auto____$1, vec__2891, pretty_fn, syms, xs__6292__auto__, temp__5735__auto__) {
                              return function() {
                                var s__2888__$1 = s__2888;
                                while (true) {
                                  var temp__5735__auto____$2 = cljs.core.seq.call(null, s__2888__$1);
                                  if (temp__5735__auto____$2) {
                                    var s__2888__$2 = temp__5735__auto____$2;
                                    if (cljs.core.chunked_seq_QMARK_.call(null, s__2888__$2)) {
                                      var c__4580__auto__ = cljs.core.chunk_first.call(null, s__2888__$2);
                                      var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
                                      var b__2890 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
                                      if (function() {
                                        var i__2889 = 0;
                                        while (true) {
                                          if (i__2889 < size__4581__auto__) {
                                            var sym__$1 = cljs.core._nth.call(null, c__4580__auto__, i__2889);
                                            cljs.core.chunk_append.call(null, b__2890, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym__$1, pretty_fn], null));
                                            var G__2894 = i__2889 + 1;
                                            i__2889 = G__2894;
                                            continue;
                                          } else {
                                            return true;
                                          }
                                          break;
                                        }
                                      }()) {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2890), fipp$clojure$build_symbol_map_$_iter__2883_$_iter__2885_$_iter__2887.call(null, cljs.core.chunk_rest.call(null, s__2888__$2)));
                                      } else {
                                        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__2890), null);
                                      }
                                    } else {
                                      var sym__$1 = cljs.core.first.call(null, s__2888__$2);
                                      return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym__$1, pretty_fn], null), fipp$clojure$build_symbol_map_$_iter__2883_$_iter__2885_$_iter__2887.call(null, cljs.core.rest.call(null, s__2888__$2)));
                                    }
                                  } else {
                                    return null;
                                  }
                                  break;
                                }
                              };
                            }(s__2886__$1, s__2884__$1, sym, xs__6292__auto____$1, temp__5735__auto____$1, vec__2891, pretty_fn, syms, xs__6292__auto__, temp__5735__auto__), null, null);
                          };
                        }(s__2886__$1, s__2884__$1, sym, xs__6292__auto____$1, temp__5735__auto____$1, vec__2891, pretty_fn, syms, xs__6292__auto__, temp__5735__auto__);
                        var fs__4579__auto__ = cljs.core.seq.call(null, iterys__4578__auto__.call(null, cljs.core.cons.call(null, sym, cljs.core.special_symbol_QMARK_.call(null, sym) ? null : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, "clojure.core", cljs.core.name.call(null, sym)), cljs.core.symbol.call(null, "cljs.core", cljs.core.name.call(null, sym))], null))));
                        if (fs__4579__auto__) {
                          return cljs.core.concat.call(null, fs__4579__auto__, fipp$clojure$build_symbol_map_$_iter__2883_$_iter__2885.call(null, cljs.core.rest.call(null, s__2886__$1)));
                        } else {
                          var G__2895 = cljs.core.rest.call(null, s__2886__$1);
                          s__2886__$1 = G__2895;
                          continue;
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(s__2884__$1, vec__2891, pretty_fn, syms, xs__6292__auto__, temp__5735__auto__), null, null);
              };
            }(s__2884__$1, vec__2891, pretty_fn, syms, xs__6292__auto__, temp__5735__auto__);
            var fs__4579__auto__ = cljs.core.seq.call(null, iterys__4578__auto__.call(null, syms));
            if (fs__4579__auto__) {
              return cljs.core.concat.call(null, fs__4579__auto__, fipp$clojure$build_symbol_map_$_iter__2883.call(null, cljs.core.rest.call(null, s__2884__$1)));
            } else {
              var G__2896 = cljs.core.rest.call(null, s__2884__$1);
              s__2884__$1 = G__2896;
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, dispatch);
  }());
};
fipp.clojure.default_symbols = fipp.clojure.build_symbol_map.call(null, cljs.core.PersistentHashMap.fromArrays([fipp.clojure.pretty_fn_STAR_, fipp.clojure.pretty_condp, fipp.clojure.pretty_quote, fipp.clojure.pretty_cond, fipp.clojure.pretty_fn, fipp.clojure.pretty_arrow, fipp.clojure.pretty_reify, fipp.clojure.pretty_let, fipp.clojure.pretty_type, fipp.clojure.pretty_if, fipp.clojure.pretty_defn, fipp.clojure.pretty_ns, fipp.clojure.pretty_case], [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "condp", "condp", 1054325175, null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "deref", "deref", 1494944732, null), new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "unquote", "unquote", -1004694737, null), 
new cljs.core.Symbol(null, "var", "var", 870848730, null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "cond", "cond", 1606708055, null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "fn", "fn", 465265323, null)], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, ".", ".", 1975675962, null), 
new cljs.core.Symbol(null, "..", "..", -300507420, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "-\x3e\x3e", "-\x3e\x3e", -1874332161, null), new cljs.core.Symbol(null, "and", "and", 668631710, null), new cljs.core.Symbol(null, "doto", "doto", 1252536074, null), new cljs.core.Symbol(null, "or", "or", 1876275696, null), new cljs.core.Symbol(null, "some-\x3e", "some-\x3e", -1011172200, null), new cljs.core.Symbol(null, "some-\x3e\x3e", "some-\x3e\x3e", 
-1499987794, null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "reify", "reify", 1885539699, null)], null), new cljs.core.PersistentVector(null, 16, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, "for", 
"for", 316745208, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "if-some", "if-some", 1960677609, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, 
"when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "when-some", "when-some", 1700415903, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-redefs", "with-redefs", -1143728263, null)], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "deftype", "deftype", 1980826088, null), 
new cljs.core.Symbol(null, "defrecord", "defrecord", 273038109, null)], null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, 
"when-not", "when-not", -1223136340, null)], null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defmulti", "defmulti", 1936112154, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
"ns", "ns", 2082130287, null)], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "cond-\x3e", "cond-\x3e", 561741875, null), new cljs.core.Symbol(null, "cond-\x3e\x3e", "cond-\x3e\x3e", 348844960, null)], null)]));
fipp.clojure.pprint = function fipp$clojure$pprint(var_args) {
  var G__2898 = arguments.length;
  switch(G__2898) {
    case 1:
      return fipp.clojure.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return fipp.clojure.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
fipp.clojure.pprint.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return fipp.clojure.pprint.call(null, x, cljs.core.PersistentArrayMap.EMPTY);
};
fipp.clojure.pprint.cljs$core$IFn$_invoke$arity$2 = function(x, options) {
  return fipp.edn.pprint.call(null, x, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "symbols", "symbols", 1211743), fipp.clojure.default_symbols], null), options));
};
fipp.clojure.pprint.cljs$lang$maxFixedArity = 2;
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(p1__2902_SHARP_) {
    return max === p1__2902_SHARP_;
  }, coll));
};
clojure.set.union = function clojure$set$union(var_args) {
  var G__2907 = arguments.length;
  switch(G__2907) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___2909 = arguments.length;
      var i__4790__auto___2910 = 0;
      while (true) {
        if (i__4790__auto___2910 < len__4789__auto___2909) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___2910]);
          var G__2911 = i__4790__auto___2910 + 1;
          i__4790__auto___2910 = G__2911;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq2904) {
  var G__2905 = cljs.core.first.call(null, seq2904);
  var seq2904__$1 = cljs.core.next.call(null, seq2904);
  var G__2906 = cljs.core.first.call(null, seq2904__$1);
  var seq2904__$2 = cljs.core.next.call(null, seq2904__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2905, G__2906, seq2904__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection(var_args) {
  var G__2917 = arguments.length;
  switch(G__2917) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___2919 = arguments.length;
      var i__4790__auto___2920 = 0;
      while (true) {
        if (i__4790__auto___2920 < len__4789__auto___2919) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___2920]);
          var G__2921 = i__4790__auto___2920 + 1;
          i__4790__auto___2920 = G__2921;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__2922 = s2;
      var G__2923 = s1;
      s1 = G__2922;
      s2 = G__2923;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__2912_SHARP_) {
    return -cljs.core.count.call(null, p1__2912_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq2914) {
  var G__2915 = cljs.core.first.call(null, seq2914);
  var seq2914__$1 = cljs.core.next.call(null, seq2914);
  var G__2916 = cljs.core.first.call(null, seq2914__$1);
  var seq2914__$2 = cljs.core.next.call(null, seq2914__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2915, G__2916, seq2914__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference(var_args) {
  var G__2928 = arguments.length;
  switch(G__2928) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4810__auto__ = [];
      var len__4789__auto___2930 = arguments.length;
      var i__4790__auto___2931 = 0;
      while (true) {
        if (i__4790__auto___2931 < len__4789__auto___2930) {
          args_arr__4810__auto__.push(arguments[i__4790__auto___2931]);
          var G__2932 = i__4790__auto___2931 + 1;
          i__4790__auto___2931 = G__2932;
          continue;
        } else {
        }
        break;
      }
      var argseq__4811__auto__ = new cljs.core.IndexedSeq(args_arr__4810__auto__.slice(2), 0, null);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4811__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq2925) {
  var G__2926 = cljs.core.first.call(null, seq2925);
  var seq2925__$1 = cljs.core.next.call(null, seq2925);
  var G__2927 = cljs.core.first.call(null, seq2925__$1);
  var seq2925__$2 = cljs.core.next.call(null, seq2925__$1);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__2926, G__2927, seq2925__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__2933_SHARP_) {
    return cljs.core.select_keys.call(null, p1__2933_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__2934) {
    var vec__2935 = p__2934;
    var old = cljs.core.nth.call(null, vec__2935, 0, null);
    var new$ = cljs.core.nth.call(null, vec__2935, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__2938_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__2938_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__2939) {
    var vec__2940 = p__2939;
    var k = cljs.core.nth.call(null, vec__2940, 0, null);
    var v = cljs.core.nth.call(null, vec__2940, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join(var_args) {
  var G__2948 = arguments.length;
  switch(G__2948) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__2949 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__2949, 0, null);
    var s = cljs.core.nth.call(null, vec__2949, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ret, x) {
      var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(p1__2943_SHARP_, p2__2944_SHARP_) {
          return cljs.core.conj.call(null, p1__2943_SHARP_, cljs.core.merge.call(null, p2__2944_SHARP_, x));
        }, ret, found);
      } else {
        return ret;
      }
    }, cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__2952 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__2952, 0, null);
  var s = cljs.core.nth.call(null, vec__2952, 1, null);
  var k = cljs.core.nth.call(null, vec__2952, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(ret, x) {
    var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
    if (cljs.core.truth_(found)) {
      return cljs.core.reduce.call(null, function(p1__2945_SHARP_, p2__2946_SHARP_) {
        return cljs.core.conj.call(null, p1__2945_SHARP_, cljs.core.merge.call(null, p2__2946_SHARP_, x));
      }, ret, found);
    } else {
      return ret;
    }
  }, cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__2956_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__2956_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__2957_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__2957_SHARP_);
  }, set2);
};
goog.provide("clojure.data");
goog.require("cljs.core");
goog.require("clojure.set");
clojure.data.atom_diff = function clojure$data$atom_diff(a, b) {
  if (cljs.core._EQ_.call(null, a, b)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, a], null);
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a, b, null], null);
  }
};
clojure.data.vectorize = function clojure$data$vectorize(m) {
  if (cljs.core.seq.call(null, m)) {
    return cljs.core.reduce.call(null, function(result, p__2960) {
      var vec__2961 = p__2960;
      var k = cljs.core.nth.call(null, vec__2961, 0, null);
      var v = cljs.core.nth.call(null, vec__2961, 1, null);
      return cljs.core.assoc.call(null, result, k, v);
    }, cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.apply.call(null, cljs.core.max, cljs.core.keys.call(null, m)), null)), m);
  } else {
    return null;
  }
};
clojure.data.diff_associative_key = function clojure$data$diff_associative_key(a, b, k) {
  var va = cljs.core.get.call(null, a, k);
  var vb = cljs.core.get.call(null, b, k);
  var vec__2964 = clojure.data.diff.call(null, va, vb);
  var a_STAR_ = cljs.core.nth.call(null, vec__2964, 0, null);
  var b_STAR_ = cljs.core.nth.call(null, vec__2964, 1, null);
  var ab = cljs.core.nth.call(null, vec__2964, 2, null);
  var in_a = cljs.core.contains_QMARK_.call(null, a, k);
  var in_b = cljs.core.contains_QMARK_.call(null, b, k);
  var same = in_a && in_b && (!(ab == null) || va == null && vb == null);
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [in_a && (!(a_STAR_ == null) || !same) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, a_STAR_]) : null, in_b && (!(b_STAR_ == null) || !same) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, b_STAR_]) : null, same ? cljs.core.PersistentArrayMap.createAsIfByAssoc([k, ab]) : null], null);
};
clojure.data.diff_associative = function clojure$data$diff_associative(var_args) {
  var G__2968 = arguments.length;
  switch(G__2968) {
    case 2:
      return clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  return clojure.data.diff_associative.call(null, a, b, clojure.set.union.call(null, cljs.core.keys.call(null, a), cljs.core.keys.call(null, b)));
};
clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3 = function(a, b, ks) {
  return cljs.core.reduce.call(null, function(diff1, diff2) {
    return cljs.core.doall.call(null, cljs.core.map.call(null, cljs.core.merge, diff1, diff2));
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, null], null), cljs.core.map.call(null, cljs.core.partial.call(null, clojure.data.diff_associative_key, a, b), ks));
};
clojure.data.diff_associative.cljs$lang$maxFixedArity = 3;
clojure.data.diff_sequential = function clojure$data$diff_sequential(a, b) {
  return cljs.core.vec.call(null, cljs.core.map.call(null, clojure.data.vectorize, clojure.data.diff_associative.call(null, cljs.core.vector_QMARK_.call(null, a) ? a : cljs.core.vec.call(null, a), cljs.core.vector_QMARK_.call(null, b) ? b : cljs.core.vec.call(null, b), cljs.core.range.call(null, function() {
    var x__4273__auto__ = cljs.core.count.call(null, a);
    var y__4274__auto__ = cljs.core.count.call(null, b);
    return x__4273__auto__ > y__4274__auto__ ? x__4273__auto__ : y__4274__auto__;
  }()))));
};
clojure.data.diff_set = function clojure$data$diff_set(a, b) {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not_empty.call(null, clojure.set.difference.call(null, a, b)), cljs.core.not_empty.call(null, clojure.set.difference.call(null, b, a)), cljs.core.not_empty.call(null, clojure.set.intersection.call(null, a, b))], null);
};
clojure.data.EqualityPartition = function() {
};
clojure.data.equality_partition = function clojure$data$equality_partition(x) {
  if (!(x == null) && !(x.clojure$data$EqualityPartition$equality_partition$arity$1 == null)) {
    return x.clojure$data$EqualityPartition$equality_partition$arity$1(x);
  } else {
    var x__4487__auto__ = x == null ? null : x;
    var m__4488__auto__ = clojure.data.equality_partition[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, x);
    } else {
      var m__4485__auto__ = clojure.data.equality_partition["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, x);
      } else {
        throw cljs.core.missing_protocol.call(null, "EqualityPartition.equality-partition", x);
      }
    }
  }
};
clojure.data.Diff = function() {
};
clojure.data.diff_similar = function clojure$data$diff_similar(a, b) {
  if (!(a == null) && !(a.clojure$data$Diff$diff_similar$arity$2 == null)) {
    return a.clojure$data$Diff$diff_similar$arity$2(a, b);
  } else {
    var x__4487__auto__ = a == null ? null : a;
    var m__4488__auto__ = clojure.data.diff_similar[goog.typeOf(x__4487__auto__)];
    if (!(m__4488__auto__ == null)) {
      return m__4488__auto__.call(null, a, b);
    } else {
      var m__4485__auto__ = clojure.data.diff_similar["_"];
      if (!(m__4485__auto__ == null)) {
        return m__4485__auto__.call(null, a, b);
      } else {
        throw cljs.core.missing_protocol.call(null, "Diff.diff-similar", a);
      }
    }
  }
};
goog.object.set(clojure.data.EqualityPartition, "null", true);
goog.object.set(clojure.data.equality_partition, "null", function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "string", true);
goog.object.set(clojure.data.equality_partition, "string", function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "number", true);
goog.object.set(clojure.data.equality_partition, "number", function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "array", true);
goog.object.set(clojure.data.equality_partition, "array", function(x) {
  return new cljs.core.Keyword(null, "sequential", "sequential", -1082983960);
});
goog.object.set(clojure.data.EqualityPartition, "function", true);
goog.object.set(clojure.data.equality_partition, "function", function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "boolean", true);
goog.object.set(clojure.data.equality_partition, "boolean", function(x) {
  return new cljs.core.Keyword(null, "atom", "atom", -397043653);
});
goog.object.set(clojure.data.EqualityPartition, "_", true);
goog.object.set(clojure.data.equality_partition, "_", function(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IMap, x)) {
    return new cljs.core.Keyword(null, "map", "map", 1371690461);
  } else {
    if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISet, x)) {
      return new cljs.core.Keyword(null, "set", "set", 304602554);
    } else {
      if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.ISequential, x)) {
        return new cljs.core.Keyword(null, "sequential", "sequential", -1082983960);
      } else {
        return new cljs.core.Keyword(null, "atom", "atom", -397043653);
      }
    }
  }
});
goog.object.set(clojure.data.Diff, "null", true);
goog.object.set(clojure.data.diff_similar, "null", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "string", true);
goog.object.set(clojure.data.diff_similar, "string", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "number", true);
goog.object.set(clojure.data.diff_similar, "number", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "array", true);
goog.object.set(clojure.data.diff_similar, "array", function(a, b) {
  return clojure.data.diff_sequential.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "function", true);
goog.object.set(clojure.data.diff_similar, "function", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "boolean", true);
goog.object.set(clojure.data.diff_similar, "boolean", function(a, b) {
  return clojure.data.atom_diff.call(null, a, b);
});
goog.object.set(clojure.data.Diff, "_", true);
goog.object.set(clojure.data.diff_similar, "_", function(a, b) {
  return function() {
    var G__2973 = clojure.data.equality_partition.call(null, a);
    var G__2973__$1 = G__2973 instanceof cljs.core.Keyword ? G__2973.fqn : null;
    switch(G__2973__$1) {
      case "atom":
        return clojure.data.atom_diff;
        break;
      case "set":
        return clojure.data.diff_set;
        break;
      case "sequential":
        return clojure.data.diff_sequential;
        break;
      case "map":
        return clojure.data.diff_associative;
        break;
      default:
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__2973__$1)].join(""));
    }
  }().call(null, a, b);
});
clojure.data.diff = function clojure$data$diff(a, b) {
  if (cljs.core._EQ_.call(null, a, b)) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null, a], null);
  } else {
    if (cljs.core._EQ_.call(null, clojure.data.equality_partition.call(null, a), clojure.data.equality_partition.call(null, b))) {
      return clojure.data.diff_similar.call(null, a, b);
    } else {
      return clojure.data.atom_diff.call(null, a, b);
    }
  }
};
goog.provide("jx.reporter.karma");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("clojure.data");
goog.require("fipp.clojure");
goog.require("clojure.string");
goog.require("goog.object");
jx.reporter.karma.karma = cljs.core.volatile_BANG_.call(null, null);
jx.reporter.karma.karma_QMARK_ = function jx$reporter$karma$karma_QMARK_() {
  return !(cljs.core.deref.call(null, jx.reporter.karma.karma) == null);
};
jx.reporter.karma.karma_info_BANG_ = function jx$reporter$karma$karma_info_BANG_(m) {
  if (jx.reporter.karma.karma_QMARK_.call(null)) {
    return cljs.core.deref.call(null, jx.reporter.karma.karma).info(cljs.core.clj__GT_js.call(null, m));
  } else {
    return null;
  }
};
jx.reporter.karma.karma_result_BANG_ = function jx$reporter$karma$karma_result_BANG_(m) {
  if (jx.reporter.karma.karma_QMARK_.call(null)) {
    return cljs.core.deref.call(null, jx.reporter.karma.karma).result(cljs.core.clj__GT_js.call(null, m));
  } else {
    return null;
  }
};
jx.reporter.karma.coverage_result = function jx$reporter$karma$coverage_result() {
  return {"coverage":goog.object.get(window, "__coverage__")};
};
jx.reporter.karma.karma_complete_BANG_ = function jx$reporter$karma$karma_complete_BANG_() {
  if (jx.reporter.karma.karma_QMARK_.call(null)) {
    return cljs.core.deref.call(null, jx.reporter.karma.karma).complete(jx.reporter.karma.coverage_result.call(null));
  } else {
    return null;
  }
};
jx.reporter.karma.now = function jx$reporter$karma$now() {
  return (new Date).getTime();
};
jx.reporter.karma.indent = function jx$reporter$karma$indent(n, s) {
  var indentation = cljs.core.reduce.call(null, cljs.core.str, "", cljs.core.repeat.call(null, n, " "));
  return clojure.string.replace.call(null, s, /\n/, ["\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(indentation)].join(""));
};
jx.reporter.karma.remove_last_new_line = function jx$reporter$karma$remove_last_new_line(s) {
  return cljs.core.subs.call(null, s, 0, cljs.core.count.call(null, s) - 1);
};
jx.reporter.karma.format_fn = function jx$reporter$karma$format_fn(indentation, p__3017) {
  var vec__3018 = p__3017;
  var seq__3019 = cljs.core.seq.call(null, vec__3018);
  var first__3020 = cljs.core.first.call(null, seq__3019);
  var seq__3019__$1 = cljs.core.next.call(null, seq__3019);
  var c = first__3020;
  var q = seq__3019__$1;
  var e = ["\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__3016_SHARP_) {
    var sb__4720__auto__ = new goog.string.StringBuffer;
    var _STAR_print_newline_STAR__orig_val__3025_3029 = cljs.core._STAR_print_newline_STAR_;
    var _STAR_print_fn_STAR__orig_val__3026_3030 = cljs.core._STAR_print_fn_STAR_;
    var _STAR_print_newline_STAR__temp_val__3027_3031 = true;
    var _STAR_print_fn_STAR__temp_val__3028_3032 = function(x__4721__auto__) {
      return sb__4720__auto__.append(x__4721__auto__);
    };
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__3027_3031;
    cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__3028_3032;
    try {
      fipp.clojure.pprint.call(null, p1__3016_SHARP_);
    } finally {
      cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__3026_3030;
      cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__3025_3029;
    }
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4720__auto__);
  }, q)))].join("");
  return ["(", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c), jx.reporter.karma.indent.call(null, indentation + 2, jx.reporter.karma.remove_last_new_line.call(null, e)), ")"].join("");
};
jx.reporter.karma.format_diff = function jx$reporter$karma$format_diff(indentation, assert, p__3033) {
  var vec__3034 = p__3033;
  var seq__3035 = cljs.core.seq.call(null, vec__3034);
  var first__3036 = cljs.core.first.call(null, seq__3035);
  var seq__3035__$1 = cljs.core.next.call(null, seq__3035);
  var c = first__3036;
  var first__3036__$1 = cljs.core.first.call(null, seq__3035__$1);
  var seq__3035__$2 = cljs.core.next.call(null, seq__3035__$1);
  var a = first__3036__$1;
  var first__3036__$2 = cljs.core.first.call(null, seq__3035__$2);
  var seq__3035__$3 = cljs.core.next.call(null, seq__3035__$2);
  var b = first__3036__$2;
  var q = seq__3035__$3;
  if (cljs.core._EQ_.call(null, c, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null)) && cljs.core._EQ_.call(null, cljs.core.count.call(null, assert), 3) && q == null) {
    var format = function(sign, value) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(sign), " ", cljs.core.truth_(value) ? jx.reporter.karma.indent.call(null, indentation + 2, jx.reporter.karma.remove_last_new_line.call(null, function() {
        var sb__4720__auto__ = new goog.string.StringBuffer;
        var _STAR_print_newline_STAR__orig_val__3044_3048 = cljs.core._STAR_print_newline_STAR_;
        var _STAR_print_fn_STAR__orig_val__3045_3049 = cljs.core._STAR_print_fn_STAR_;
        var _STAR_print_newline_STAR__temp_val__3046_3050 = true;
        var _STAR_print_fn_STAR__temp_val__3047_3051 = function(x__4721__auto__) {
          return sb__4720__auto__.append(x__4721__auto__);
        };
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__temp_val__3046_3050;
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__3047_3051;
        try {
          fipp.clojure.pprint.call(null, value);
        } finally {
          cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__3045_3049;
          cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR__orig_val__3044_3048;
        }
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__4720__auto__);
      }())) : "\n"].join("");
    };
    var vec__3037 = clojure.data.diff.call(null, a, b);
    var removed = cljs.core.nth.call(null, vec__3037, 0, null);
    var added = cljs.core.nth.call(null, vec__3037, 1, null);
    return [format.call(null, "-", removed), format.call(null, ["\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, indentation, " "))), "+"].join(""), added)].join("");
  } else {
    return null;
  }
};
jx.reporter.karma.format_log = function jx$reporter$karma$format_log(p__3052) {
  var map__3053 = p__3052;
  var map__3053__$1 = (!(map__3053 == null) ? map__3053.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__3053.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__3053) : map__3053;
  var result = map__3053__$1;
  var expected = cljs.core.get.call(null, map__3053__$1, new cljs.core.Keyword(null, "expected", "expected", 1583670997));
  var actual = cljs.core.get.call(null, map__3053__$1, new cljs.core.Keyword(null, "actual", "actual", 107306363));
  var message = cljs.core.get.call(null, map__3053__$1, new cljs.core.Keyword(null, "message", "message", -406056002));
  var testing_contexts_str = cljs.core.get.call(null, map__3053__$1, new cljs.core.Keyword(null, "testing-contexts-str", "testing-contexts-str", 2139637215));
  var indentation = "expected: ".length;
  return ["FAIL in   ", cljs.test.testing_vars_str.call(null, result), "\n", clojure.string.blank_QMARK_.call(null, testing_contexts_str) ? null : ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(testing_contexts_str), '"\n'].join(""), cljs.core.seq_QMARK_.call(null, expected) && cljs.core.seq_QMARK_.call(null, actual) ? ["expected: ", jx.reporter.karma.format_fn.call(null, indentation, expected), "\n", "  actual: ", jx.reporter.karma.format_fn.call(null, indentation, cljs.core.second.call(null, 
  actual)), "\n", function() {
    var temp__5735__auto__ = jx.reporter.karma.format_diff.call(null, indentation, expected, cljs.core.second.call(null, actual));
    if (cljs.core.truth_(temp__5735__auto__)) {
      var diff = temp__5735__auto__;
      return ["    diff: ", diff, "\n"].join("");
    } else {
      return null;
    }
  }()].join("") : [cljs.core.str.cljs$core$IFn$_invoke$arity$1(expected), " failed with ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(actual), "\n"].join(""), cljs.core.truth_(message) ? [" message: ", jx.reporter.karma.indent.call(null, indentation, message), "\n"].join("") : null].join("");
};
jx.reporter.karma.test_var_result = cljs.core.volatile_BANG_.call(null, cljs.core.PersistentVector.EMPTY);
jx.reporter.karma.test_var_time_start = cljs.core.volatile_BANG_.call(null, jx.reporter.karma.now.call(null));
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "karma", "karma", 1375588493), function(_) {
  return null;
});
cljs.core.derive.call(null, new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(_) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(_) {
  cljs.core.vreset_BANG_.call(null, jx.reporter.karma.test_var_time_start, jx.reporter.karma.now.call(null));
  return cljs.core.vreset_BANG_.call(null, jx.reporter.karma.test_var_result, cljs.core.PersistentVector.EMPTY);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  var var_meta = cljs.core.meta.call(null, (new cljs.core.Keyword(null, "var", "var", -769682797)).cljs$core$IFn$_invoke$arity$1(m));
  var result = new cljs.core.PersistentArrayMap(null, 6, ["suite", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(var_meta)], null), "description", (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(var_meta), "success", cljs.core.count.call(null, cljs.core.deref.call(null, jx.reporter.karma.test_var_result)) === 0, "skipped", null, "time", jx.reporter.karma.now.call(null) - 
  cljs.core.deref.call(null, jx.reporter.karma.test_var_time_start), "log", cljs.core.map.call(null, jx.reporter.karma.format_log, cljs.core.deref.call(null, jx.reporter.karma.test_var_result))], null);
  return jx.reporter.karma.karma_result_BANG_.call(null, result);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  return cljs.core._vreset_BANG_.call(null, jx.reporter.karma.test_var_result, cljs.core.conj.call(null, cljs.core._deref.call(null, jx.reporter.karma.test_var_result), cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "testing-contexts-str", "testing-contexts-str", 2139637215), cljs.test.testing_contexts_str.call(null))));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  return cljs.core._vreset_BANG_.call(null, jx.reporter.karma.test_var_result, cljs.core.conj.call(null, cljs.core._deref.call(null, jx.reporter.karma.test_var_result), cljs.core.assoc.call(null, m, new cljs.core.Keyword(null, "testing-contexts-str", "testing-contexts-str", 2139637215), cljs.test.testing_contexts_str.call(null))));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(_) {
  return jx.reporter.karma.karma_complete_BANG_.call(null);
});
jx.reporter.karma.start = function jx$reporter$karma$start(tc, total_count) {
  cljs.core.vreset_BANG_.call(null, jx.reporter.karma.karma, tc);
  return jx.reporter.karma.karma_info_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "total", "total", 1916810418), total_count], null));
};
goog.provide("doo.runner");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("goog.object");
goog.require("jx.reporter.karma");
cljs.core.enable_console_print_BANG_.call(null);
doo.runner.set_print_fn_BANG_ = function doo$runner$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
goog.exportSymbol("doo.runner.set_print_fn_BANG_", doo.runner.set_print_fn_BANG_);
doo.runner.karma_QMARK_ = function doo$runner$karma_QMARK_() {
  return typeof window !== "undefined" && !(goog.object.get(window, "__karma__") == null) || typeof global !== "undefined" && !(goog.object.get(global, "__karma__") == null);
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "Testing", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
doo.runner._STAR_exit_fn_STAR_ = null;
doo.runner.set_exit_point_BANG_ = function doo$runner$set_exit_point_BANG_(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
  } else {
    throw new Error("Assert failed: (fn? f)");
  }
  return doo.runner._STAR_exit_fn_STAR_ = f;
};
goog.exportSymbol("doo.runner.set_exit_point_BANG_", doo.runner.set_exit_point_BANG_);
doo.runner.exit_BANG_ = function doo$runner$exit_BANG_(success_QMARK_) {
  try {
    var temp__5733__auto__ = typeof process !== "undefined" ? goog.object.get(process, "exit") : false;
    if (cljs.core.truth_(temp__5733__auto__)) {
      var nodejs_exit = temp__5733__auto__;
      return nodejs_exit.call(null, cljs.core.truth_(success_QMARK_) ? 0 : 1);
    } else {
      return doo.runner._STAR_exit_fn_STAR_.call(null, success_QMARK_);
    }
  } catch (e3057) {
    var e = e3057;
    cljs.core.println.call(null, "WARNING: doo's exit function was not properly set");
    return cljs.core.println.call(null, e);
  }
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return doo.runner.exit_BANG_.call(null, cljs.test.successful_QMARK_.call(null, m));
});
doo.runner.run_BANG_ = function doo$runner$run_BANG_(a) {
  if (!cljs.core.fn_QMARK_.call(null, cljs.core._STAR_main_cli_fn_STAR_)) {
    cljs.core.println.call(null, "WARNING: doo's init function was not set or is not a function");
    return doo.runner.exit_BANG_.call(null, false);
  } else {
    try {
      return cljs.core._STAR_main_cli_fn_STAR_.call(null, a);
    } catch (e3058) {
      var e = e3058;
      cljs.core.println.call(null);
      cljs.core.println.call(null, "ERROR: Exception outside tests:");
      cljs.core.println.call(null, "ERROR:", e);
      if (cljs.core.truth_(e.hasOwnProperty("stack"))) {
        cljs.core.println.call(null);
        cljs.core.println.call(null, "ERROR: Stacktrace:");
        cljs.core.println.call(null, "ERROR:", e.stack);
      } else {
        cljs.core.println.call(null);
        cljs.core.println.call(null, "ERROR: No stacktrace available.");
      }
      return doo.runner.exit_BANG_.call(null, false);
    }
  }
};
goog.exportSymbol("doo.runner.run_BANG_", doo.runner.run_BANG_);
doo.runner.set_entry_point_BANG_ = function doo$runner$set_entry_point_BANG_(f) {
  if (cljs.core.fn_QMARK_.call(null, f)) {
  } else {
    throw new Error("Assert failed: (fn? f)");
  }
  return cljs.core._STAR_main_cli_fn_STAR_ = f;
};
goog.provide("clj_json_patch.util");
goog.require("cljs.core");
goog.require("clojure.string");
clj_json_patch.util._STAR_keywordize_STAR_ = false;
clj_json_patch.util.diff_STAR_ = function clj_json_patch$util$diff_STAR_(obj1, obj2, prefix) {
  return clj_json_patch.util.transform_moves.call(null, obj1, obj2, cljs.core.vector_QMARK_.call(null, obj1) && cljs.core.vector_QMARK_.call(null, obj2) ? function() {
    var result = clj_json_patch.util.diff_vecs.call(null, obj1, obj2, prefix);
    if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, result))) {
      return cljs.core.first.call(null, result);
    } else {
      return result;
    }
  }() : cljs.core.map_QMARK_.call(null, obj1) && cljs.core.map_QMARK_.call(null, obj2) ? cljs.core.vec.call(null, cljs.core.flatten.call(null, cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.concat.call(null, function() {
    var iter__4582__auto__ = function clj_json_patch$util$diff_STAR__$_iter__1448(s__1449) {
      return new cljs.core.LazySeq(null, function() {
        var s__1449__$1 = s__1449;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__1449__$1);
          if (temp__5735__auto__) {
            var s__1449__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__1449__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__1449__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__1451 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__1450 = 0;
                while (true) {
                  if (i__1450 < size__4581__auto__) {
                    var vec__1452 = cljs.core._nth.call(null, c__4580__auto__, i__1450);
                    var k = cljs.core.nth.call(null, vec__1452, 0, null);
                    var v1 = cljs.core.nth.call(null, vec__1452, 1, null);
                    cljs.core.chunk_append.call(null, b__1451, function() {
                      var k_STAR_ = cljs.core.name.call(null, k);
                      var v2 = cljs.core.get.call(null, obj2, k);
                      if (cljs.core.vector_QMARK_.call(null, v1) && cljs.core.vector_QMARK_.call(null, v2)) {
                        return clj_json_patch.util.diff_STAR_.call(null, v1, v2, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_, "/"].join(""));
                      } else {
                        if (!cljs.core.contains_QMARK_.call(null, obj2, k)) {
                          return clj_json_patch.util.gen_op.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["remove", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_].join("")], null));
                        } else {
                          if (cljs.core.map_QMARK_.call(null, v1) && cljs.core.map_QMARK_.call(null, v2)) {
                            return clj_json_patch.util.diff_STAR_.call(null, v1, v2, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_, "/"].join(""));
                          } else {
                            if (cljs.core.contains_QMARK_.call(null, obj2, k) && cljs.core.not_EQ_.call(null, v1, v2)) {
                              return clj_json_patch.util.gen_op.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["replace", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_].join(""), v2], null));
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }());
                    var G__1468 = i__1450 + 1;
                    i__1450 = G__1468;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1451), clj_json_patch$util$diff_STAR__$_iter__1448.call(null, cljs.core.chunk_rest.call(null, s__1449__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1451), null);
              }
            } else {
              var vec__1455 = cljs.core.first.call(null, s__1449__$2);
              var k = cljs.core.nth.call(null, vec__1455, 0, null);
              var v1 = cljs.core.nth.call(null, vec__1455, 1, null);
              return cljs.core.cons.call(null, function() {
                var k_STAR_ = cljs.core.name.call(null, k);
                var v2 = cljs.core.get.call(null, obj2, k);
                if (cljs.core.vector_QMARK_.call(null, v1) && cljs.core.vector_QMARK_.call(null, v2)) {
                  return clj_json_patch.util.diff_STAR_.call(null, v1, v2, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_, "/"].join(""));
                } else {
                  if (!cljs.core.contains_QMARK_.call(null, obj2, k)) {
                    return clj_json_patch.util.gen_op.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["remove", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_].join("")], null));
                  } else {
                    if (cljs.core.map_QMARK_.call(null, v1) && cljs.core.map_QMARK_.call(null, v2)) {
                      return clj_json_patch.util.diff_STAR_.call(null, v1, v2, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_, "/"].join(""));
                    } else {
                      if (cljs.core.contains_QMARK_.call(null, obj2, k) && cljs.core.not_EQ_.call(null, v1, v2)) {
                        return clj_json_patch.util.gen_op.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["replace", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_].join(""), v2], null));
                      } else {
                        return null;
                      }
                    }
                  }
                }
              }(), clj_json_patch$util$diff_STAR__$_iter__1448.call(null, cljs.core.rest.call(null, s__1449__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, obj1);
  }(), function() {
    var iter__4582__auto__ = function clj_json_patch$util$diff_STAR__$_iter__1458(s__1459) {
      return new cljs.core.LazySeq(null, function() {
        var s__1459__$1 = s__1459;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__1459__$1);
          if (temp__5735__auto__) {
            var s__1459__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__1459__$2)) {
              var c__4580__auto__ = cljs.core.chunk_first.call(null, s__1459__$2);
              var size__4581__auto__ = cljs.core.count.call(null, c__4580__auto__);
              var b__1461 = cljs.core.chunk_buffer.call(null, size__4581__auto__);
              if (function() {
                var i__1460 = 0;
                while (true) {
                  if (i__1460 < size__4581__auto__) {
                    var vec__1462 = cljs.core._nth.call(null, c__4580__auto__, i__1460);
                    var k = cljs.core.nth.call(null, vec__1462, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__1462, 1, null);
                    cljs.core.chunk_append.call(null, b__1461, function() {
                      var k_STAR_ = cljs.core.name.call(null, k);
                      var v1 = cljs.core.get.call(null, obj1, k);
                      if (!cljs.core.contains_QMARK_.call(null, obj1, k)) {
                        return clj_json_patch.util.gen_op.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["add", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_].join(""), v2], null));
                      } else {
                        return null;
                      }
                    }());
                    var G__1469 = i__1460 + 1;
                    i__1460 = G__1469;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1461), clj_json_patch$util$diff_STAR__$_iter__1458.call(null, cljs.core.chunk_rest.call(null, s__1459__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__1461), null);
              }
            } else {
              var vec__1465 = cljs.core.first.call(null, s__1459__$2);
              var k = cljs.core.nth.call(null, vec__1465, 0, null);
              var v2 = cljs.core.nth.call(null, vec__1465, 1, null);
              return cljs.core.cons.call(null, function() {
                var k_STAR_ = cljs.core.name.call(null, k);
                var v1 = cljs.core.get.call(null, obj1, k);
                if (!cljs.core.contains_QMARK_.call(null, obj1, k)) {
                  return clj_json_patch.util.gen_op.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["add", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), k_STAR_].join(""), v2], null));
                } else {
                  return null;
                }
              }(), clj_json_patch$util$diff_STAR__$_iter__1458.call(null, cljs.core.rest.call(null, s__1459__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4582__auto__.call(null, obj2);
  }())))) : null);
};
clj_json_patch.util.eval_escape_characters = function clj_json_patch$util$eval_escape_characters(segment) {
  return clojure.string.replace.call(null, segment, /(~0|~1)/, function(p__1470) {
    var vec__1471 = p__1470;
    var _ = cljs.core.nth.call(null, vec__1471, 0, null);
    var s = cljs.core.nth.call(null, vec__1471, 1, null);
    if (cljs.core._EQ_.call(null, s, "~0")) {
      return "~";
    } else {
      if (cljs.core._EQ_.call(null, s, "~1")) {
        return "/";
      } else {
        return null;
      }
    }
  });
};
clj_json_patch.util.__GT_key = function clj_json_patch$util$__GT_key(seg) {
  if (cljs.core.truth_(clj_json_patch.util._STAR_keywordize_STAR_)) {
    return cljs.core.keyword.call(null, seg);
  } else {
    return seg;
  }
};
clj_json_patch.util.has_path_QMARK_ = function clj_json_patch$util$has_path_QMARK_(obj, path) {
  var path__$1 = clojure.string.starts_with_QMARK_.call(null, path, "#") ? cljs.core.subs.call(null, path, 1) : path;
  if (cljs.core.truth_(function() {
    var and__4174__auto__ = obj;
    if (cljs.core.truth_(and__4174__auto__)) {
      return cljs.core._EQ_.call(null, path__$1, "") || cljs.core._EQ_.call(null, path__$1, "#");
    } else {
      return and__4174__auto__;
    }
  }())) {
    return true;
  } else {
    if (cljs.core._EQ_.call(null, path__$1, "/") && cljs.core.map_QMARK_.call(null, obj) && cljs.core.contains_QMARK_.call(null, obj, "")) {
      return true;
    } else {
      var temp__5733__auto__ = cljs.core.re_find.call(null, /^\/([^\/]+)(.*)/, path__$1);
      if (cljs.core.truth_(temp__5733__auto__)) {
        var match = temp__5733__auto__;
        var seg = clj_json_patch.util.eval_escape_characters.call(null, cljs.core.second.call(null, match));
        var segs = cljs.core.nth.call(null, match, 2);
        var vec__1474 = function() {
          var ky = cljs.core.vector_QMARK_.call(null, obj) ? parseInt(seg) : clj_json_patch.util.__GT_key.call(null, seg);
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.contains_QMARK_.call(null, obj, ky), cljs.core.get.call(null, obj, ky)], null);
        }();
        var h_path_QMARK_ = cljs.core.nth.call(null, vec__1474, 0, null);
        var val = cljs.core.nth.call(null, vec__1474, 1, null);
        if (cljs.core.truth_(function() {
          var and__4174__auto__ = h_path_QMARK_;
          if (cljs.core.truth_(and__4174__auto__)) {
            return !cljs.core.empty_QMARK_.call(null, segs);
          } else {
            return and__4174__auto__;
          }
        }())) {
          return clj_json_patch.util.has_path_QMARK_.call(null, val, segs);
        } else {
          return h_path_QMARK_;
        }
      } else {
        return null;
      }
    }
  }
};
clj_json_patch.util.get_patch_value = function clj_json_patch$util$get_patch_value(obj, path) {
  var path__$1 = clojure.string.starts_with_QMARK_.call(null, path, "#") ? cljs.core.subs.call(null, path, 1) : path;
  if (cljs.core._EQ_.call(null, path__$1, "") || cljs.core._EQ_.call(null, path__$1, "#")) {
    return obj;
  } else {
    if (cljs.core.truth_(cljs.core._EQ_.call(null, path__$1, "/") ? cljs.core.map_QMARK_.call(null, obj) ? cljs.core.get.call(null, obj, "") : false : false)) {
      return cljs.core.get.call(null, obj, "");
    } else {
      var temp__5733__auto__ = cljs.core.re_find.call(null, /^\/([^\/]+)(.*)/, path__$1);
      if (cljs.core.truth_(temp__5733__auto__)) {
        var match = temp__5733__auto__;
        var seg = clj_json_patch.util.eval_escape_characters.call(null, cljs.core.second.call(null, match));
        var segs = cljs.core.nth.call(null, match, 2);
        var val = cljs.core.map_QMARK_.call(null, obj) ? cljs.core.get.call(null, obj, clj_json_patch.util.__GT_key.call(null, seg)) : cljs.core.vector_QMARK_.call(null, obj) ? cljs.core.nth.call(null, obj, parseInt(seg)) : null;
        if (!cljs.core.empty_QMARK_.call(null, segs)) {
          return clj_json_patch.util.get_patch_value.call(null, val, segs);
        } else {
          return val;
        }
      } else {
        return null;
      }
    }
  }
};
clj_json_patch.util.set_patch_value = function clj_json_patch$util$set_patch_value(var_args) {
  var args__4795__auto__ = [];
  var len__4789__auto___1487 = arguments.length;
  var i__4790__auto___1488 = 0;
  while (true) {
    if (i__4790__auto___1488 < len__4789__auto___1487) {
      args__4795__auto__.push(arguments[i__4790__auto___1488]);
      var G__1489 = i__4790__auto___1488 + 1;
      i__4790__auto___1488 = G__1489;
      continue;
    } else {
    }
    break;
  }
  var argseq__4796__auto__ = 3 < args__4795__auto__.length ? new cljs.core.IndexedSeq(args__4795__auto__.slice(3), 0, null) : null;
  return clj_json_patch.util.set_patch_value.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4796__auto__);
};
clj_json_patch.util.set_patch_value.cljs$core$IFn$_invoke$arity$variadic = function(obj, path, val, p__1481) {
  var vec__1482 = p__1481;
  var insert = cljs.core.nth.call(null, vec__1482, 0, null);
  var temp__5733__auto__ = cljs.core.re_seq.call(null, /\/([^\/]+)/, path);
  if (cljs.core.truth_(temp__5733__auto__)) {
    var segs = temp__5733__auto__;
    if (cljs.core.count.call(null, segs) > 1) {
      var temp__5733__auto____$1 = function() {
        try {
          return clj_json_patch.util.get_patch_value.call(null, obj, path);
        } catch (e1485) {
          if (e1485 instanceof Object) {
            var e = e1485;
            throw new Error(["Unable to set value at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), "'."].join(""));
          } else {
            throw e1485;
          }
        }
      }();
      if (cljs.core.truth_(temp__5733__auto____$1)) {
        var path_exists = temp__5733__auto____$1;
        var parent_path = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, cljs.core.first, cljs.core.take.call(null, cljs.core.count.call(null, segs) - 1, segs)));
        var parent = clj_json_patch.util.get_patch_value.call(null, obj, parent_path);
        return clj_json_patch.util.set_patch_value.call(null, obj, parent_path, clj_json_patch.util.set_patch_value.call(null, parent, cljs.core.first.call(null, cljs.core.last.call(null, segs)), val));
      } else {
        throw new Error(["Unable to set value at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), "'. Consider adding a more explicit data ", "structure as a child of an existing object."].join(""));
      }
    } else {
      if (cljs.core.map_QMARK_.call(null, obj)) {
        return cljs.core.assoc.call(null, obj, clj_json_patch.util.__GT_key.call(null, clj_json_patch.util.eval_escape_characters.call(null, cljs.core.second.call(null, cljs.core.first.call(null, segs)))), val);
      } else {
        if (cljs.core.vector_QMARK_.call(null, obj)) {
          var idx = parseInt(cljs.core.second.call(null, cljs.core.re_find.call(null, /\/(\d+)/, path)));
          try {
            return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.subvec.call(null, obj, 0, idx), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [val], null), cljs.core.subvec.call(null, obj, cljs.core.truth_(insert) ? idx : idx + 1)));
          } catch (e1486) {
            if (e1486 instanceof Object) {
              var e = e1486;
              throw new Error(["Unable to set value at ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(idx), "."].join(""));
            } else {
              throw e1486;
            }
          }
        } else {
          return null;
        }
      }
    }
  } else {
    throw new Error("Patch path must start with '/'");
  }
};
clj_json_patch.util.set_patch_value.cljs$lang$maxFixedArity = 3;
clj_json_patch.util.set_patch_value.cljs$lang$applyTo = function(seq1477) {
  var G__1478 = cljs.core.first.call(null, seq1477);
  var seq1477__$1 = cljs.core.next.call(null, seq1477);
  var G__1479 = cljs.core.first.call(null, seq1477__$1);
  var seq1477__$2 = cljs.core.next.call(null, seq1477__$1);
  var G__1480 = cljs.core.first.call(null, seq1477__$2);
  var seq1477__$3 = cljs.core.next.call(null, seq1477__$2);
  var self__4776__auto__ = this;
  return self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__1478, G__1479, G__1480, seq1477__$3);
};
clj_json_patch.util.add_patch_value = function clj_json_patch$util$add_patch_value(obj, path, val) {
  var temp__5733__auto__ = cljs.core.re_seq.call(null, /\/([^\/]+)/, path);
  if (cljs.core.truth_(temp__5733__auto__)) {
    var segs = temp__5733__auto__;
    if (cljs.core.count.call(null, segs) > 1) {
      var parent_path = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, cljs.core.first, cljs.core.take.call(null, cljs.core.count.call(null, segs) - 1, segs)));
      var parent = clj_json_patch.util.get_patch_value.call(null, obj, parent_path);
      if (cljs.core.vector_QMARK_.call(null, parent)) {
        var str_idx = cljs.core.last.call(null, cljs.core.last.call(null, segs));
        if (cljs.core._EQ_.call(null, "-", str_idx) || cljs.core._EQ_.call(null, cljs.core.count.call(null, parent), cljs.core.truth_(isNaN(parseInt(str_idx))) ? function() {
          throw new Error(["Unable to determine array index from '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(str_idx), "'."].join(""));
        }() : parseInt(str_idx))) {
          return clj_json_patch.util.set_patch_value.call(null, obj, parent_path, cljs.core.conj.call(null, parent, val));
        } else {
          var first_last_seg = cljs.core.first.call(null, cljs.core.last.call(null, segs));
          var insert = path.endsWith(str_idx);
          return clj_json_patch.util.set_patch_value.call(null, obj, parent_path, clj_json_patch.util.set_patch_value.call(null, parent, cljs.core.first.call(null, cljs.core.last.call(null, segs)), val, insert));
        }
      } else {
        var temp__5733__auto____$1 = function() {
          try {
            return clj_json_patch.util.get_patch_value.call(null, obj, parent_path);
          } catch (e1490) {
            if (e1490 instanceof Object) {
              var e = e1490;
              throw new Error(["Unable to set value at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), "'."].join(""));
            } else {
              throw e1490;
            }
          }
        }();
        if (cljs.core.truth_(temp__5733__auto____$1)) {
          var path_exists = temp__5733__auto____$1;
          return clj_json_patch.util.set_patch_value.call(null, obj, parent_path, clj_json_patch.util.set_patch_value.call(null, parent, cljs.core.first.call(null, cljs.core.last.call(null, segs)), val));
        } else {
          throw new Error(["Unable to set value at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), "'. Consider adding a more explicit data ", "structure as a child of an existing object."].join(""));
        }
      }
    } else {
      return clj_json_patch.util.set_patch_value.call(null, obj, path, val);
    }
  } else {
    throw new Error("Patch path must start with '/'");
  }
};
clj_json_patch.util.move_patch_value = function clj_json_patch$util$move_patch_value(obj, from, path) {
  var temp__5733__auto__ = cljs.core.re_seq.call(null, /\/([^\/]+)/, path);
  if (cljs.core.truth_(temp__5733__auto__)) {
    var to_segs = temp__5733__auto__;
    var temp__5733__auto____$1 = cljs.core.re_seq.call(null, /\/([^\/]+)/, from);
    if (cljs.core.truth_(temp__5733__auto____$1)) {
      var from_segs = temp__5733__auto____$1;
      var val = clj_json_patch.util.get_patch_value.call(null, obj, from);
      if (!(val == null)) {
        if (cljs.core.count.call(null, to_segs) > 1) {
          var from_parent_path = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, cljs.core.first, cljs.core.take.call(null, cljs.core.count.call(null, from_segs) - 1, from_segs)));
          var to_parent_path = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, cljs.core.first, cljs.core.take.call(null, cljs.core.count.call(null, to_segs) - 1, to_segs)));
          var parent = clj_json_patch.util.get_patch_value.call(null, obj, to_parent_path);
          if (cljs.core._EQ_.call(null, from_parent_path, to_parent_path)) {
            return clj_json_patch.util.set_patch_value.call(null, obj, from_parent_path, clj_json_patch.util.move_patch_value.call(null, clj_json_patch.util.get_patch_value.call(null, obj, from_parent_path), cljs.core.first.call(null, cljs.core.last.call(null, from_segs)), cljs.core.first.call(null, cljs.core.last.call(null, to_segs))));
          } else {
            return clj_json_patch.util.set_patch_value.call(null, clj_json_patch.util.remove_patch_value.call(null, obj, from), to_parent_path, clj_json_patch.util.set_patch_value.call(null, parent, cljs.core.first.call(null, cljs.core.last.call(null, to_segs)), val));
          }
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return cljs.core.dissoc.call(null, cljs.core.assoc.call(null, obj, clj_json_patch.util.__GT_key.call(null, cljs.core.second.call(null, cljs.core.first.call(null, to_segs))), val), clj_json_patch.util.__GT_key.call(null, cljs.core.second.call(null, cljs.core.first.call(null, from_segs))));
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              var from_int = function() {
                try {
                  return parseInt(cljs.core.second.call(null, cljs.core.re_find.call(null, /\/(\d+)/, from)));
                } catch (e1491) {
                  if (e1491 instanceof Object) {
                    var e = e1491;
                    throw new Error(["Move attempted on value that does not exist at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(from), "'."].join(""));
                  } else {
                    throw e1491;
                  }
                }
              }();
              var to_int = function() {
                try {
                  return parseInt(cljs.core.second.call(null, cljs.core.re_find.call(null, /\/(\d+)/, path)));
                } catch (e1492) {
                  if (e1492 instanceof Object) {
                    var e = e1492;
                    throw new Error(["Move attempted on value that does not exist at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), "'."].join(""));
                  } else {
                    throw e1492;
                  }
                }
              }();
              return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.subvec.call(null, obj, 0, from_int), cljs.core.subvec.call(null, obj, from_int + 1, to_int + 1), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get.call(null, obj, from_int)], null), cljs.core.subvec.call(null, obj, to_int + 1)));
            } else {
              return null;
            }
          }
        }
      } else {
        throw new Error(["Move attempted on value that does not exist at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(from), "'."].join(""));
      }
    } else {
      throw new Error("Patch 'from' value must start with '/'");
    }
  } else {
    throw new Error("Patch 'path' value must start with '/'");
  }
};
clj_json_patch.util.replace_patch_value = function clj_json_patch$util$replace_patch_value(obj, path, val) {
  if (cljs.core.truth_(clj_json_patch.util.has_path_QMARK_.call(null, obj, path))) {
    var temp__5733__auto__ = cljs.core.re_seq.call(null, /\/([^\/]+)/, path);
    if (cljs.core.truth_(temp__5733__auto__)) {
      var segs = temp__5733__auto__;
      if (cljs.core.count.call(null, segs) > 1) {
        var parent_path = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, cljs.core.first, cljs.core.take.call(null, cljs.core.count.call(null, segs) - 1, segs)));
        var parent = clj_json_patch.util.get_patch_value.call(null, obj, parent_path);
        return clj_json_patch.util.replace_patch_value.call(null, obj, parent_path, clj_json_patch.util.replace_patch_value.call(null, parent, cljs.core.first.call(null, cljs.core.last.call(null, segs)), val));
      } else {
        if (cljs.core.map_QMARK_.call(null, obj)) {
          return cljs.core.assoc.call(null, obj, clj_json_patch.util.__GT_key.call(null, cljs.core.second.call(null, cljs.core.first.call(null, segs))), val);
        } else {
          if (cljs.core.vector_QMARK_.call(null, obj)) {
            var idx = parseInt(cljs.core.second.call(null, cljs.core.re_find.call(null, /\/(\d+)/, path)));
            return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.subvec.call(null, obj, 0, idx), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [val], null), cljs.core.subvec.call(null, obj, idx + 1)));
          } else {
            return null;
          }
        }
      }
    } else {
      throw new Error("Patch path must start with '/'");
    }
  } else {
    throw new Error(["Can't replace a value that does not exist at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), "'."].join(""));
  }
};
clj_json_patch.util.remove_patch_value_func = function clj_json_patch$util$remove_patch_value_func(obj, path) {
  if (cljs.core.truth_(clj_json_patch.util.has_path_QMARK_.call(null, obj, path))) {
    var temp__5735__auto__ = cljs.core.re_seq.call(null, /\/([^\/]+)/, path);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var segs = temp__5735__auto__;
      if (cljs.core.count.call(null, segs) > 1) {
        var parent_path = cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, cljs.core.first, cljs.core.take.call(null, cljs.core.count.call(null, segs) - 1, segs)));
        var parent = clj_json_patch.util.get_patch_value.call(null, obj, parent_path);
        return clj_json_patch.util.replace_patch_value.call(null, obj, parent_path, clj_json_patch.util.remove_patch_value.call(null, parent, cljs.core.first.call(null, cljs.core.last.call(null, segs))));
      } else {
        if (cljs.core.map_QMARK_.call(null, obj)) {
          return cljs.core.dissoc.call(null, obj, cljs.core.second.call(null, cljs.core.first.call(null, segs)));
        } else {
          if (cljs.core.vector_QMARK_.call(null, obj)) {
            var idx = parseInt(cljs.core.second.call(null, cljs.core.re_find.call(null, /\/(\d+)/, path)));
            return cljs.core.vec.call(null, cljs.core.concat.call(null, cljs.core.subvec.call(null, obj, 0, idx), cljs.core.subvec.call(null, obj, idx + 1)));
          } else {
            return null;
          }
        }
      }
    } else {
      return null;
    }
  } else {
    throw new Error(["There is no value at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), "' to remove."].join(""));
  }
};
clj_json_patch.util.remove_patch_value = function clj_json_patch$util$remove_patch_value(obj, path) {
  try {
    return clj_json_patch.util.remove_patch_value_func.call(null, obj, path);
  } catch (e1493) {
    if (e1493 instanceof Object) {
      var e = e1493;
      throw new Error(["There is no value at '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), "' to remove."].join(""));
    } else {
      throw e1493;
    }
  }
};
clj_json_patch.util.test_patch_value = function clj_json_patch$util$test_patch_value(obj, path, val) {
  try {
    var value = clj_json_patch.util.get_patch_value.call(null, obj, path);
    if (cljs.core.not_EQ_.call(null, val, value)) {
      throw new Error(["The value is: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(JSON.stringify(cljs.core.clj__GT_js.call(null, value)))].join(""));
    } else {
      return obj;
    }
  } catch (e1494) {
    if (e1494 instanceof Object) {
      var e = e1494;
      throw new Error(["The test failed. ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(JSON.stringify(cljs.core.clj__GT_js.call(null, val))), " is not found at ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(path), ". ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(""));
    } else {
      throw e1494;
    }
  }
};
clj_json_patch.util.apply_patch = function clj_json_patch$util$apply_patch(obj, patch) {
  var op = function() {
    var or__4185__auto__ = cljs.core.get.call(null, patch, "op");
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core.get.call(null, patch, new cljs.core.Keyword(null, "op", "op", -1882987955));
    }
  }();
  var path = function() {
    var or__4185__auto__ = cljs.core.get.call(null, patch, "path");
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core.get.call(null, patch, new cljs.core.Keyword(null, "path", "path", -188191168));
    }
  }();
  var from = function() {
    var or__4185__auto__ = cljs.core.get.call(null, patch, "from");
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core.get.call(null, patch, new cljs.core.Keyword(null, "from", "from", 1815293044));
    }
  }();
  var value = function() {
    var or__4185__auto__ = cljs.core.get.call(null, patch, "value");
    if (cljs.core.truth_(or__4185__auto__)) {
      return or__4185__auto__;
    } else {
      return cljs.core.get.call(null, patch, new cljs.core.Keyword(null, "value", "value", 305978217));
    }
  }();
  if (cljs.core._EQ_.call(null, "add", op)) {
    return clj_json_patch.util.add_patch_value.call(null, obj, path, value);
  } else {
    if (cljs.core._EQ_.call(null, "move", op)) {
      return clj_json_patch.util.move_patch_value.call(null, obj, from, path);
    } else {
      if (cljs.core._EQ_.call(null, "remove", op)) {
        return clj_json_patch.util.remove_patch_value.call(null, obj, path);
      } else {
        if (cljs.core._EQ_.call(null, "replace", op)) {
          return clj_json_patch.util.replace_patch_value.call(null, obj, path, value);
        } else {
          if (cljs.core._EQ_.call(null, "test", op)) {
            return clj_json_patch.util.test_patch_value.call(null, obj, path, value);
          } else {
            return null;
          }
        }
      }
    }
  }
};
clj_json_patch.util.gen_op = function clj_json_patch$util$gen_op(t) {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    var result = new cljs.core.PersistentArrayMap(null, 2, ["op", cljs.core.first.call(null, t), "path", cljs.core.second.call(null, t)], null);
    if (cljs.core.count.call(null, t) > 2) {
      return cljs.core.assoc.call(null, result, "value", cljs.core.nth.call(null, t, 2));
    } else {
      return result;
    }
  }()], null);
};
clj_json_patch.util.clean_prefix = function clj_json_patch$util$clean_prefix(prefix, path) {
  return clojure.string.replace.call(null, path, cljs.core.re_pattern.call(null, prefix), "/");
};
clj_json_patch.util.sanitize = function clj_json_patch$util$sanitize(prefix, patch) {
  var path = cljs.core.get.call(null, patch, "path");
  var cleaned_path = cljs.core.assoc.call(null, patch, "path", clj_json_patch.util.clean_prefix.call(null, prefix, path));
  var temp__5733__auto__ = cljs.core.get.call(null, patch, "from");
  if (cljs.core.truth_(temp__5733__auto__)) {
    var from = temp__5733__auto__;
    return cljs.core.assoc.call(null, cleaned_path, "from", clj_json_patch.util.clean_prefix.call(null, prefix, from));
  } else {
    return cleaned_path;
  }
};
clj_json_patch.util.sanitize_prefix_in_patch = function clj_json_patch$util$sanitize_prefix_in_patch(prefix, idx, patch) {
  if (cljs.core.vector_QMARK_.call(null, patch)) {
    return cljs.core.map.call(null, cljs.core.partial.call(null, clj_json_patch.util.sanitize, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(idx)].join("")), patch);
  } else {
    return clj_json_patch.util.sanitize.call(null, prefix, patch);
  }
};
clj_json_patch.util.diff_vecs = function clj_json_patch$util$diff_vecs(obj1, obj2, prefix) {
  var v1 = obj1;
  var v2 = obj2;
  var i = 0;
  var ops = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, v1) && cljs.core.empty_QMARK_.call(null, v2)) {
      if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, ops))) {
        return cljs.core.vec.call(null, cljs.core.apply.call(null, cljs.core.concat, ops));
      } else {
        return ops;
      }
    } else {
      if (cljs.core._EQ_.call(null, v1, cljs.core.rest.call(null, v2))) {
        return cljs.core.conj.call(null, ops, clj_json_patch.util.gen_op.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["add", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(i)].join(""), cljs.core.first.call(null, v2)], null)));
      } else {
        if (cljs.core._EQ_.call(null, cljs.core.rest.call(null, v1), v2)) {
          return cljs.core.conj.call(null, ops, clj_json_patch.util.gen_op.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["remove", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(i)].join("")], null)));
        } else {
          if (cljs.core.not_EQ_.call(null, cljs.core.first.call(null, v1), cljs.core.first.call(null, v2))) {
            if (cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, v1)) && cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, v2))) {
              var G__1499 = cljs.core.rest.call(null, v1);
              var G__1500 = cljs.core.rest.call(null, v2);
              var G__1501 = i + 1;
              var G__1502 = cljs.core.conj.call(null, ops, clj_json_patch.util.diff_STAR_.call(null, cljs.core.first.call(null, v1), cljs.core.first.call(null, v2), [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), "/"].join("")));
              v1 = G__1499;
              v2 = G__1500;
              i = G__1501;
              ops = G__1502;
              continue;
            } else {
              var G__1503 = cljs.core.rest.call(null, v1);
              var G__1504 = cljs.core.rest.call(null, v2);
              var G__1505 = i + 1;
              var G__1506 = cljs.core.conj.call(null, ops, clj_json_patch.util.gen_op.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["replace", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(i)].join(""), cljs.core.first.call(null, v2)], null)));
              v1 = G__1503;
              v2 = G__1504;
              i = G__1505;
              ops = G__1506;
              continue;
            }
          } else {
            if (cljs.core.count.call(null, ops) > 0 && cljs.core._EQ_.call(null, v2, cljs.core.reduce.call(null, function(v1, v2, i, ops) {
              return function(p1__1495_SHARP_, p2__1496_SHARP_) {
                return clj_json_patch.util.apply_patch.call(null, p1__1495_SHARP_, p2__1496_SHARP_);
              };
            }(v1, v2, i, ops), v1, cljs.core.map.call(null, cljs.core.partial.call(null, clj_json_patch.util.sanitize_prefix_in_patch, prefix, i - 1), ops)))) {
              return ops;
            } else {
              if (cljs.core._EQ_.call(null, cljs.core.set.call(null, v1), cljs.core.set.call(null, v2))) {
                if (cljs.core._EQ_.call(null, i, cljs.core.count.call(null, v1))) {
                  return ops;
                } else {
                  if (cljs.core._EQ_.call(null, cljs.core.get.call(null, v1, i), cljs.core.get.call(null, v2, i))) {
                    var G__1507 = v1;
                    var G__1508 = v2;
                    var G__1509 = i + 1;
                    var G__1510 = ops;
                    v1 = G__1507;
                    v2 = G__1508;
                    i = G__1509;
                    ops = G__1510;
                    continue;
                  } else {
                    if (cljs.core.not_EQ_.call(null, cljs.core.get.call(null, v1, i), cljs.core.get.call(null, v2, i))) {
                      var moved_idx = cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.complement.call(null, cljs.core.nil_QMARK_), cljs.core.map_indexed.call(null, function(v1, v2, i, ops) {
                        return function(p1__1498_SHARP_, p2__1497_SHARP_) {
                          if (cljs.core._EQ_.call(null, cljs.core.get.call(null, v1, i), p2__1497_SHARP_)) {
                            return p1__1498_SHARP_;
                          } else {
                            return null;
                          }
                        };
                      }(v1, v2, i, ops), v2)));
                      var G__1511 = v1;
                      var G__1512 = v2;
                      var G__1513 = i + 1;
                      var G__1514 = cljs.core.conj.call(null, ops, new cljs.core.PersistentArrayMap(null, 3, ["op", "move", "from", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(i)].join(""), "path", [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), cljs.core.str.cljs$core$IFn$_invoke$arity$1(moved_idx)].join("")], null));
                      v1 = G__1511;
                      v2 = G__1512;
                      i = G__1513;
                      ops = G__1514;
                      continue;
                    } else {
                      return null;
                    }
                  }
                }
              } else {
                if (cljs.core._EQ_.call(null, cljs.core.first.call(null, v1), cljs.core.first.call(null, v2)) && cljs.core.not_EQ_.call(null, cljs.core.rest.call(null, v1), cljs.core.rest.call(null, v2))) {
                  var G__1515 = cljs.core.rest.call(null, v1);
                  var G__1516 = cljs.core.rest.call(null, v2);
                  var G__1517 = i + 1;
                  var G__1518 = ops;
                  v1 = G__1515;
                  v2 = G__1516;
                  i = G__1517;
                  ops = G__1518;
                  continue;
                } else {
                  return null;
                }
              }
            }
          }
        }
      }
    }
    break;
  }
};
clj_json_patch.util.transform_moves = function clj_json_patch$util$transform_moves(obj1, obj2, patch) {
  var adds = cljs.core.filter.call(null, function(p1__1519_SHARP_) {
    return cljs.core._EQ_.call(null, "add", cljs.core.get.call(null, p1__1519_SHARP_, "op"));
  }, patch);
  var removes = cljs.core.filter.call(null, function(adds) {
    return function(p1__1520_SHARP_) {
      return cljs.core._EQ_.call(null, "remove", cljs.core.get.call(null, p1__1520_SHARP_, "op"));
    };
  }(adds), patch);
  var p = patch;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, adds) || cljs.core.empty_QMARK_.call(null, removes)) {
      return p;
    } else {
      var f_add = cljs.core.first.call(null, adds);
      var f_path = cljs.core.get.call(null, f_add, "path");
      var f_val = cljs.core.get.call(null, f_add, "value");
      var moved = cljs.core.filter.call(null, function(adds, removes, p, f_add, f_path, f_val) {
        return function(p1__1521_SHARP_) {
          return cljs.core._EQ_.call(null, f_val, clj_json_patch.util.get_patch_value.call(null, obj1, cljs.core.get.call(null, p1__1521_SHARP_, "path")));
        };
      }(adds, removes, p, f_add, f_path, f_val), removes);
      var temp__5733__auto__ = cljs.core.first.call(null, moved);
      if (cljs.core.truth_(temp__5733__auto__)) {
        var fmoved = temp__5733__auto__;
        var G__1525 = cljs.core.rest.call(null, adds);
        var G__1526 = cljs.core.filter.call(null, function(adds, removes, p, fmoved, temp__5733__auto__, f_add, f_path, f_val, moved) {
          return function(p1__1522_SHARP_) {
            return cljs.core.not_EQ_.call(null, fmoved, p1__1522_SHARP_);
          };
        }(adds, removes, p, fmoved, temp__5733__auto__, f_add, f_path, f_val, moved), removes);
        var G__1527 = cljs.core.conj.call(null, cljs.core.filter.call(null, function(adds, removes, p, fmoved, temp__5733__auto__, f_add, f_path, f_val, moved) {
          return function(p1__1523_SHARP_) {
            return cljs.core.not_EQ_.call(null, f_add, p1__1523_SHARP_);
          };
        }(adds, removes, p, fmoved, temp__5733__auto__, f_add, f_path, f_val, moved), cljs.core.filter.call(null, function(adds, removes, p, fmoved, temp__5733__auto__, f_add, f_path, f_val, moved) {
          return function(p1__1524_SHARP_) {
            return cljs.core.not_EQ_.call(null, fmoved, p1__1524_SHARP_);
          };
        }(adds, removes, p, fmoved, temp__5733__auto__, f_add, f_path, f_val, moved), patch)), new cljs.core.PersistentArrayMap(null, 3, ["op", "move", "from", cljs.core.get.call(null, fmoved, "path"), "path", f_path], null));
        adds = G__1525;
        removes = G__1526;
        p = G__1527;
        continue;
      } else {
        var G__1528 = cljs.core.rest.call(null, adds);
        var G__1529 = removes;
        var G__1530 = p;
        adds = G__1528;
        removes = G__1529;
        p = G__1530;
        continue;
      }
    }
    break;
  }
};
goog.provide("clj_json_patch.core");
goog.require("cljs.core");
goog.require("clj_json_patch.util");
clj_json_patch.core.call_apply_patch = function clj_json_patch$core$call_apply_patch(obj, patches) {
  return cljs.core.reduce.call(null, function(p1__1535_SHARP_, p2__1536_SHARP_) {
    return clj_json_patch.util.apply_patch.call(null, p1__1535_SHARP_, p2__1536_SHARP_);
  }, cljs.core.js__GT_clj.call(null, JSON.parse(obj)), cljs.core.js__GT_clj.call(null, JSON.parse(patches)));
};
clj_json_patch.core.patch = function clj_json_patch$core$patch(var_args) {
  var G__1538 = arguments.length;
  switch(G__1538) {
    case 2:
      return clj_json_patch.core.patch.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clj_json_patch.core.patch.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clj_json_patch.core.patch.cljs$core$IFn$_invoke$arity$2 = function(obj, patches) {
  return clj_json_patch.core.call_apply_patch.call(null, obj, patches);
};
clj_json_patch.core.patch.cljs$core$IFn$_invoke$arity$3 = function(obj, patches, keywordize_QMARK_) {
  var _STAR_keywordize_STAR__orig_val__1539 = clj_json_patch.util._STAR_keywordize_STAR_;
  var _STAR_keywordize_STAR__temp_val__1540 = keywordize_QMARK_;
  clj_json_patch.util._STAR_keywordize_STAR_ = _STAR_keywordize_STAR__temp_val__1540;
  try {
    return clj_json_patch.core.call_apply_patch.call(null, obj, patches);
  } finally {
    clj_json_patch.util._STAR_keywordize_STAR_ = _STAR_keywordize_STAR__orig_val__1539;
  }
};
clj_json_patch.core.patch.cljs$lang$maxFixedArity = 3;
clj_json_patch.core.call_diff_STAR_ = function clj_json_patch$core$call_diff_STAR_(obj1, obj2, prefix) {
  return clj_json_patch.util.diff_STAR_.call(null, cljs.core.js__GT_clj.call(null, JSON.parse(obj1)), cljs.core.js__GT_clj.call(null, JSON.parse(obj2)), prefix);
};
clj_json_patch.core.diff = function clj_json_patch$core$diff(var_args) {
  var G__1543 = arguments.length;
  switch(G__1543) {
    case 2:
      return clj_json_patch.core.diff.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clj_json_patch.core.diff.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clj_json_patch.core.diff.cljs$core$IFn$_invoke$arity$2 = function(obj1, obj2) {
  return clj_json_patch.core.call_diff_STAR_.call(null, obj1, obj2, "/");
};
clj_json_patch.core.diff.cljs$core$IFn$_invoke$arity$3 = function(obj1, obj2, keywordize_QMARK_) {
  var _STAR_keywordize_STAR__orig_val__1544_1547 = clj_json_patch.util._STAR_keywordize_STAR_;
  var _STAR_keywordize_STAR__temp_val__1545_1548 = keywordize_QMARK_;
  clj_json_patch.util._STAR_keywordize_STAR_ = _STAR_keywordize_STAR__temp_val__1545_1548;
  try {
  } finally {
    clj_json_patch.util._STAR_keywordize_STAR_ = _STAR_keywordize_STAR__orig_val__1544_1547;
  }
  return clj_json_patch.core.call_diff_STAR_.call(null, obj1, obj2, "/");
};
clj_json_patch.core.diff.cljs$lang$maxFixedArity = 3;
goog.provide("clj_json_patch.core_test_cljs");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("clj_json_patch.core");
clj_json_patch.core_test_cljs.apply_patch = function clj_json_patch$core_test_cljs$apply_patch() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.apply_patch.cljs$lang$var);
};
clj_json_patch.core_test_cljs.apply_patch.cljs$lang$test = function() {
  var v = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "grass", "cows", "eat", "slowly"], null)));
  var p = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["from", "/1", "op", "move", "path", "/3"], null)], null)));
  var expected = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "cows", "eat", "grass", "slowly"], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, v, p), new cljs.core.List(null, expected, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "p", 
      "p", 1791580836, null)), new cljs.core.Symbol(null, "expected", "expected", -1070764772, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "p", 
      "p", 1791580836, null)), new cljs.core.Symbol(null, "expected", "expected", -1070764772, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3129) {
    var t__2341__auto__ = e3129;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, 
    "p", "p", 1791580836, null)), new cljs.core.Symbol(null, "expected", "expected", -1070764772, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.apply_patch.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.apply_patch;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "apply-patch", "clj-json-patch.core-test-cljs/apply-patch", -1331120766, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "apply-patch", "apply-patch", -641869788, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
21, 1, 6, 6, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.apply_patch) ? clj_json_patch.core_test_cljs.apply_patch.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_no_diff = function clj_json_patch$core_test_cljs$d_no_diff() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_no_diff.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_no_diff.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var patches = cljs.core.PersistentVector.EMPTY;
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3130) {
    var t__2341__auto__ = e3130;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_no_diff.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_no_diff;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-no-diff", "clj-json-patch.core-test-cljs/d-no-diff", -312102797, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-no-diff", "d-no-diff", 1385877397, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
19, 1, 13, 13, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_no_diff) ? clj_json_patch.core_test_cljs.d_no_diff.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_add_member = function clj_json_patch$core_test_cljs$d_add_member() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_add_member.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_add_member.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["baz", "qux", "foo", "bar"], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/baz", "value", "qux"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3131) {
    var t__2341__auto__ = e3131;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_add_member.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_add_member;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-member", "clj-json-patch.core-test-cljs/d-add-member", 2098523429, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-member", "d-add-member", 69710151, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
22, 1, 19, 19, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_member) ? clj_json_patch.core_test_cljs.d_add_member.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_add_array = function clj_json_patch$core_test_cljs$d_add_array() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_add_array.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_add_array.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["qux", "bar", "baz"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/foo/0", "value", "qux"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3132) {
    var t__2341__auto__ = e3132;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_add_array.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_add_array;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-array", "clj-json-patch.core-test-cljs/d-add-array", 1051557030, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-array", "d-add-array", 1234424004, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
21, 1, 25, 25, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_array) ? clj_json_patch.core_test_cljs.d_add_array.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_add_second_array = function clj_json_patch$core_test_cljs$d_add_second_array() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_add_second_array.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_add_second_array.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "qux", "baz"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/foo/1", "value", "qux"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3133) {
    var t__2341__auto__ = e3133;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_add_second_array.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_add_second_array;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-second-array", "clj-json-patch.core-test-cljs/d-add-second-array", 1231282204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-second-array", "d-add-second-array", 806706302, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
28, 1, 31, 31, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_second_array) ? clj_json_patch.core_test_cljs.d_add_second_array.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_remove_member = function clj_json_patch$core_test_cljs$d_remove_member() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_remove_member.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_remove_member.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", "bar", "baz", "qux"], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/baz"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3134) {
    var t__2341__auto__ = e3134;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_remove_member.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_remove_member;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-member", "clj-json-patch.core-test-cljs/d-remove-member", 841302121, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-member", "d-remove-member", -617093681, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
25, 1, 37, 37, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_member) ? clj_json_patch.core_test_cljs.d_remove_member.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_remove_first_element = function clj_json_patch$core_test_cljs$d_remove_first_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_remove_first_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_remove_first_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["qux", "bar", "baz"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/foo/0"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3135) {
    var t__2341__auto__ = e3135;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_remove_first_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_remove_first_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-first-element", "clj-json-patch.core-test-cljs/d-remove-first-element", 1172562579, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-first-element", "d-remove-first-element", -286357711, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
32, 1, 43, 43, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_first_element) ? clj_json_patch.core_test_cljs.d_remove_first_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_remove_second_element = function clj_json_patch$core_test_cljs$d_remove_second_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_remove_second_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_remove_second_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "qux", "baz"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/foo/1"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3136) {
    var t__2341__auto__ = e3136;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_remove_second_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_remove_second_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-second-element", "clj-json-patch.core-test-cljs/d-remove-second-element", -1774858695, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-second-element", "d-remove-second-element", 1328246235, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
33, 1, 49, 49, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_second_element) ? clj_json_patch.core_test_cljs.d_remove_second_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_remove_third_element = function clj_json_patch$core_test_cljs$d_remove_third_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_remove_third_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_remove_third_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz", "qux"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/foo/2"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3137) {
    var t__2341__auto__ = e3137;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_remove_third_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_remove_third_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-third-element", "clj-json-patch.core-test-cljs/d-remove-third-element", -1671280495, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-third-element", "d-remove-third-element", 1198467895, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
32, 1, 55, 55, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_third_element) ? clj_json_patch.core_test_cljs.d_remove_third_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_replace_value = function clj_json_patch$core_test_cljs$d_replace_value() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_replace_value.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_replace_value.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", "bar", "baz", "qux"], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["baz", "boo", "foo", "bar"], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "replace", "path", "/baz", "value", "boo"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3138) {
    var t__2341__auto__ = e3138;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_replace_value.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_replace_value;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-replace-value", "clj-json-patch.core-test-cljs/d-replace-value", -59850245, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-replace-value", "d-replace-value", 1432052829, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
25, 1, 61, 61, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_replace_value) ? clj_json_patch.core_test_cljs.d_replace_value.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_remove_nested_member = function clj_json_patch$core_test_cljs$d_remove_nested_member() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_remove_nested_member.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_remove_nested_member.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentArrayMap(null, 2, ["bar", "kill me", "baz", "boo"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentArrayMap(null, 1, ["baz", "boo"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/foo/bar"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3139) {
    var t__2341__auto__ = e3139;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_remove_nested_member.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_remove_nested_member;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-nested-member", "clj-json-patch.core-test-cljs/d-remove-nested-member", -652239462, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-nested-member", "d-remove-nested-member", -1307822024, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
32, 1, 67, 67, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_nested_member) ? clj_json_patch.core_test_cljs.d_remove_nested_member.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_add_nested_member = function clj_json_patch$core_test_cljs$d_add_nested_member() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_add_nested_member.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_add_nested_member.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentArrayMap(null, 1, ["baz", "boo"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["child", new cljs.core.PersistentArrayMap(null, 1, ["grandchild", cljs.core.PersistentArrayMap.EMPTY], null), "foo", new cljs.core.PersistentArrayMap(null, 1, ["baz", "boo"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/child", "value", new cljs.core.PersistentArrayMap(null, 1, ["grandchild", cljs.core.PersistentArrayMap.EMPTY], null)], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3140) {
    var t__2341__auto__ = e3140;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_add_nested_member.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_add_nested_member;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-nested-member", "clj-json-patch.core-test-cljs/d-add-nested-member", -1856063190, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-nested-member", "d-add-nested-member", 1236128964, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
29, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_nested_member) ? clj_json_patch.core_test_cljs.d_add_nested_member.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_move_value = function clj_json_patch$core_test_cljs$d_move_value() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_move_value.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_move_value.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", new cljs.core.PersistentArrayMap(null, 2, ["bar", "baz", "waldo", "fred"], null), "qux", new cljs.core.PersistentArrayMap(null, 1, ["corge", "grault"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", new cljs.core.PersistentArrayMap(null, 1, ["bar", "baz"], null), "qux", new cljs.core.PersistentArrayMap(null, 2, ["corge", "grault", "thud", "fred"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "move", "from", "/foo/waldo", "path", "/qux/thud"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3141) {
    var t__2341__auto__ = e3141;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_move_value.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_move_value;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-move-value", "clj-json-patch.core-test-cljs/d-move-value", 1554338046, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-move-value", "d-move-value", -2017850340, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
22, 1, 81, 81, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_move_value) ? clj_json_patch.core_test_cljs.d_move_value.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_move_array_element = function clj_json_patch$core_test_cljs$d_move_array_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_move_array_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_move_array_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "grass", "cows", "eat"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "cows", "eat", "grass"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "move", "from", "/foo/1", "path", "/foo/3"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3142) {
    var t__2341__auto__ = e3142;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_move_array_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_move_array_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-move-array-element", "clj-json-patch.core-test-cljs/d-move-array-element", 1664301351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-move-array-element", "d-move-array-element", 465622409, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
30, 1, 91, 91, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_move_array_element) ? clj_json_patch.core_test_cljs.d_move_array_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_replace_value_with_array = function clj_json_patch$core_test_cljs$d_replace_value_with_array() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_replace_value_with_array.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_replace_value_with_array.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "cows", "eat", "grass"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "replace", "path", "/foo", "value", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "cows", "eat", "grass"], null)], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3143) {
    var t__2341__auto__ = e3143;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_replace_value_with_array.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_replace_value_with_array;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-replace-value-with-array", "clj-json-patch.core-test-cljs/d-replace-value-with-array", 247600914, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-replace-value-with-array", "d-replace-value-with-array", -1510884496, 
null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 36, 1, 97, 97, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_replace_value_with_array) ? clj_json_patch.core_test_cljs.d_replace_value_with_array.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_nil_vs_absent = function clj_json_patch$core_test_cljs$d_nil_vs_absent() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_nil_vs_absent.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_nil_vs_absent.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["key1", clj_json_patch.core_test_cljs.null$, "key2", "val2"], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["key2", "val2"], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/key1"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3144) {
    var t__2341__auto__ = e3144;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_nil_vs_absent.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_nil_vs_absent;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-nil-vs-absent", "clj-json-patch.core-test-cljs/d-nil-vs-absent", 770795512, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-nil-vs-absent", "d-nil-vs-absent", 1390854746, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
25, 1, 104, 104, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_nil_vs_absent) ? clj_json_patch.core_test_cljs.d_nil_vs_absent.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_nested_nil_vs_absent = function clj_json_patch$core_test_cljs$d_nested_nil_vs_absent() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_nested_nil_vs_absent.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_nested_nil_vs_absent.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["test", new cljs.core.PersistentArrayMap(null, 2, ["key1", clj_json_patch.core_test_cljs.null$, "key2", "val2"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["test", new cljs.core.PersistentArrayMap(null, 1, ["key2", "val2"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/test/key1"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3145) {
    var t__2341__auto__ = e3145;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_nested_nil_vs_absent.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_nested_nil_vs_absent;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-nested-nil-vs-absent", "clj-json-patch.core-test-cljs/d-nested-nil-vs-absent", 1754374474, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-nested-nil-vs-absent", "d-nested-nil-vs-absent", -777716308, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
32, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_nested_nil_vs_absent) ? clj_json_patch.core_test_cljs.d_nested_nil_vs_absent.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_replace_value_in_vector = function clj_json_patch$core_test_cljs$d_replace_value_in_vector() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_replace_value_in_vector.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_replace_value_in_vector.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["test", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["key1", "val1"], null)], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["test", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["key1", "val1replaced"], null)], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "replace", "path", "/test/0/key1", "value", "val1replaced"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3146) {
    var t__2341__auto__ = e3146;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_replace_value_in_vector.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_replace_value_in_vector;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-replace-value-in-vector", "clj-json-patch.core-test-cljs/d-replace-value-in-vector", -728875398, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-replace-value-in-vector", "d-replace-value-in-vector", -1141253416, 
null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 35, 1, 118, 118, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_replace_value_in_vector) ? clj_json_patch.core_test_cljs.d_replace_value_in_vector.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector = function clj_json_patch$core_test_cljs$d_nil_vs_absent_in_vector() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["test", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["key1", clj_json_patch.core_test_cljs.null$, "key2", "val2"], null)], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["test", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["key2", "val2"], null)], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/test/0/key1"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3147) {
    var t__2341__auto__ = e3147;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-nil-vs-absent-in-vector", "clj-json-patch.core-test-cljs/d-nil-vs-absent-in-vector", -78275167, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-nil-vs-absent-in-vector", "d-nil-vs-absent-in-vector", 306609667, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
35, 1, 124, 124, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector) ? clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_vector_compare = function clj_json_patch$core_test_cljs$d_vector_compare() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_vector_compare.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_vector_compare.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["key1", clj_json_patch.core_test_cljs.null$, "key2", "val2"], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["key2", "val2"], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/0/key1"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3148) {
    var t__2341__auto__ = e3148;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_vector_compare.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_vector_compare;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-vector-compare", "clj-json-patch.core-test-cljs/d-vector-compare", 481892246, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-vector-compare", "d-vector-compare", 1974252528, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
26, 1, 131, 131, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_vector_compare) ? clj_json_patch.core_test_cljs.d_vector_compare.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.d_vector_different_maps = function clj_json_patch$core_test_cljs$d_vector_different_maps() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.d_vector_different_maps.cljs$lang$var);
};
clj_json_patch.core_test_cljs.d_vector_different_maps.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["baz", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["first", "test"], null), new cljs.core.PersistentArrayMap(null, 1, ["second", "test"], null), new cljs.core.PersistentArrayMap(null, 1, ["third", "test"], null)], null)], null)));
  var obj2 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["baz", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["first", "test"], null), new cljs.core.PersistentArrayMap(null, 1, ["second", "second"], null), new cljs.core.PersistentArrayMap(null, 1, ["third", "level"], null)], null)], null)));
  var patches = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "replace", "path", "/baz/1/second", "value", "second"], null), new cljs.core.PersistentArrayMap(null, 3, ["op", "replace", "path", "/baz/2/third", "value", "level"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.diff.call(null, obj1, obj2), new cljs.core.List(null, patches, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3149) {
    var t__2341__auto__ = e3149;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "diff", "diff", -518492986, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "obj2", "obj2", 504239630, null)), new cljs.core.Symbol(null, "patches", "patches", 487750060, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.d_vector_different_maps.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.d_vector_different_maps;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-vector-different-maps", "clj-json-patch.core-test-cljs/d-vector-different-maps", -1958357373, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-vector-different-maps", "d-vector-different-maps", 576092965, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
33, 1, 138, 138, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_vector_different_maps) ? clj_json_patch.core_test_cljs.d_vector_different_maps.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_no_change = function clj_json_patch$core_test_cljs$p_no_change() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_no_change.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_no_change.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, cljs.core.PersistentVector.EMPTY));
  var result = new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, result, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "result", "result", -1239343558, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "result", "result", -1239343558, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3150) {
    var t__2341__auto__ = e3150;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "result", "result", -1239343558, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_no_change.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_no_change;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-no-change", "clj-json-patch.core-test-cljs/p-no-change", 1745963590, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-no-change", "p-no-change", -1056133592, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
21, 1, 150, 150, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_no_change) ? clj_json_patch.core_test_cljs.p_no_change.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_member = function clj_json_patch$core_test_cljs$p_add_member() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_member.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_member.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 2, ["baz", "qux", "foo", "bar"], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/baz", "value", "qux"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3151) {
    var t__2341__auto__ = e3151;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_member.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_member;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-member", "clj-json-patch.core-test-cljs/p-add-member", 186355194, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-member", "p-add-member", -1561828968, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
22, 1, 156, 156, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_member) ? clj_json_patch.core_test_cljs.p_add_member.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_element = function clj_json_patch$core_test_cljs$p_add_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["qux", "bar", "baz"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/foo/0", "value", "qux"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3152) {
    var t__2341__auto__ = e3152;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-element", "clj-json-patch.core-test-cljs/p-add-element", -1385340870, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-element", "p-add-element", 1918946776, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
23, 1, 162, 162, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_element) ? clj_json_patch.core_test_cljs.p_add_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_second_array_element = function clj_json_patch$core_test_cljs$p_add_second_array_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_second_array_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_second_array_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "qux", "baz"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/foo/1", "value", "qux"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3153) {
    var t__2341__auto__ = e3153;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_second_array_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_second_array_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-second-array-element", "clj-json-patch.core-test-cljs/p-add-second-array-element", 1540913220, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-second-array-element", "p-add-second-array-element", -2100656922, 
null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 36, 1, 168, 168, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_second_array_element) ? clj_json_patch.core_test_cljs.p_add_second_array_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_remove_member = function clj_json_patch$core_test_cljs$p_remove_member() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_remove_member.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_remove_member.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", "bar", "baz", "qux"], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/baz"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3154) {
    var t__2341__auto__ = e3154;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_remove_member.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_remove_member;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-member", "clj-json-patch.core-test-cljs/p-remove-member", -739402943, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-member", "p-remove-member", -2065743905, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
25, 1, 174, 174, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_member) ? clj_json_patch.core_test_cljs.p_remove_member.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_remove_array_element = function clj_json_patch$core_test_cljs$p_remove_array_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_remove_array_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_remove_array_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["qux", "bar", "baz"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/foo/0"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3155) {
    var t__2341__auto__ = e3155;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_remove_array_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_remove_array_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-array-element", "clj-json-patch.core-test-cljs/p-remove-array-element", -641660791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-array-element", "p-remove-array-element", 1993332523, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
32, 1, 180, 180, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_array_element) ? clj_json_patch.core_test_cljs.p_remove_array_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_remove_second_array_element = function clj_json_patch$core_test_cljs$p_remove_second_array_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_remove_second_array_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_remove_second_array_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "qux", "baz"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/foo/1"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3156) {
    var t__2341__auto__ = e3156;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_remove_second_array_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_remove_second_array_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-second-array-element", "clj-json-patch.core-test-cljs/p-remove-second-array-element", 2080028831, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-second-array-element", "p-remove-second-array-element", 
15194941, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 39, 1, 186, 186, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_second_array_element) ? clj_json_patch.core_test_cljs.p_remove_second_array_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_remove_third_array_element = function clj_json_patch$core_test_cljs$p_remove_third_array_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_remove_third_array_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_remove_third_array_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz", "qux"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/foo/2"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3157) {
    var t__2341__auto__ = e3157;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_remove_third_array_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_remove_third_array_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-third-array-element", "clj-json-patch.core-test-cljs/p-remove-third-array-element", -360780930, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-third-array-element", "p-remove-third-array-element", 
-1286893800, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 38, 1, 192, 192, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_third_array_element) ? clj_json_patch.core_test_cljs.p_remove_third_array_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_replace_value = function clj_json_patch$core_test_cljs$p_replace_value() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_replace_value.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_replace_value.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", "bar", "baz", "qux"], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 2, ["baz", "boo", "foo", "bar"], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "replace", "path", "/baz", "value", "boo"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3158) {
    var t__2341__auto__ = e3158;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_replace_value.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_replace_value;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-replace-value", "clj-json-patch.core-test-cljs/p-replace-value", 1027368866, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-replace-value", "p-replace-value", -2077308100, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
25, 1, 198, 198, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_replace_value) ? clj_json_patch.core_test_cljs.p_replace_value.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_replace_boolean = function clj_json_patch$core_test_cljs$p_replace_boolean() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_replace_boolean.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_replace_boolean.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", false, "baz", "qux"], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 2, ["baz", "qux", "foo", true], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "replace", "path", "/foo", "value", true], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3159) {
    var t__2341__auto__ = e3159;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_replace_boolean.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_replace_boolean;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-replace-boolean", "clj-json-patch.core-test-cljs/p-replace-boolean", -730703596, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-replace-boolean", "p-replace-boolean", -1919973642, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
27, 1, 204, 204, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_replace_boolean) ? clj_json_patch.core_test_cljs.p_replace_boolean.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_remove_nested_member = function clj_json_patch$core_test_cljs$p_remove_nested_member() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_remove_nested_member.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_remove_nested_member.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentArrayMap(null, 2, ["bar", "kill me", "baz", "boo"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentArrayMap(null, 1, ["baz", "boo"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/foo/bar"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3160) {
    var t__2341__auto__ = e3160;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_remove_nested_member.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_remove_nested_member;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nested-member", "clj-json-patch.core-test-cljs/p-remove-nested-member", 982298702, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nested-member", "p-remove-nested-member", 1671425264, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
32, 1, 210, 210, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nested_member) ? clj_json_patch.core_test_cljs.p_remove_nested_member.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_nested_member = function clj_json_patch$core_test_cljs$p_add_nested_member() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_nested_member.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_nested_member.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentArrayMap(null, 1, ["baz", "boo"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 2, ["child", new cljs.core.PersistentArrayMap(null, 1, ["grandchild", cljs.core.PersistentArrayMap.EMPTY], null), "foo", new cljs.core.PersistentArrayMap(null, 1, ["baz", "boo"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/child", "value", new cljs.core.PersistentArrayMap(null, 1, ["grandchild", cljs.core.PersistentArrayMap.EMPTY], null)], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3161) {
    var t__2341__auto__ = e3161;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_nested_member.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_nested_member;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-nested-member", "clj-json-patch.core-test-cljs/p-add-nested-member", 1497016344, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-nested-member", "p-add-nested-member", -2146677574, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
29, 1, 217, 217, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_nested_member) ? clj_json_patch.core_test_cljs.p_add_nested_member.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_nested_arry = function clj_json_patch$core_test_cljs$p_add_nested_arry() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_nested_arry.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_nested_arry.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["baz", "boo"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["baz", "boo", "added"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/foo/2", "value", "added"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3162) {
    var t__2341__auto__ = e3162;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_nested_arry.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_nested_arry;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-nested-arry", "clj-json-patch.core-test-cljs/p-add-nested-arry", 1961114199, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-nested-arry", "p-add-nested-arry", -1678141899, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
27, 1, 224, 224, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_nested_arry) ? clj_json_patch.core_test_cljs.p_add_nested_arry.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_to_end_nested_array = function clj_json_patch$core_test_cljs$p_add_to_end_nested_array() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_to_end_nested_array.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_to_end_nested_array.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["baz", "boo"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["baz", "boo", "added"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/foo/-", "value", "added"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3163) {
    var t__2341__auto__ = e3163;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_to_end_nested_array.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_to_end_nested_array;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-to-end-nested-array", "clj-json-patch.core-test-cljs/p-add-to-end-nested-array", -1363985249, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-to-end-nested-array", "p-add-to-end-nested-array", -678526723, 
null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 35, 1, 230, 230, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_to_end_nested_array) ? clj_json_patch.core_test_cljs.p_add_to_end_nested_array.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_ignore_unregonized_elements = function clj_json_patch$core_test_cljs$p_ignore_unregonized_elements() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_ignore_unregonized_elements.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_ignore_unregonized_elements.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 2, ["foo", "bar", "baz", "qux"], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 4, ["op", "add", "path", "/baz", "value", "qux", "xyz", 123], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3164) {
    var t__2341__auto__ = e3164;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_ignore_unregonized_elements.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_ignore_unregonized_elements;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-ignore-unregonized-elements", "clj-json-patch.core-test-cljs/p-ignore-unregonized-elements", -1803164260, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-ignore-unregonized-elements", "p-ignore-unregonized-elements", 
2073510462, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 39, 1, 236, 236, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_ignore_unregonized_elements) ? clj_json_patch.core_test_cljs.p_ignore_unregonized_elements.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_nonexistent_target = function clj_json_patch$core_test_cljs$p_add_nonexistent_target() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_nonexistent_target.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_nonexistent_target.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/baz/bat", "value", "qux"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to set value at '\/baz\/bat'. Consider adding a more explicit data structure as a child of an existing object./, 
      cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3166) {
      if (e3166 instanceof Error) {
        var e__2335__auto__ = e3166;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Unable to set value at '\/baz\/bat'. Consider adding a more explicit data structure as a child of an existing object./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to set value at '\/baz\/bat'. Consider adding a more explicit data structure as a child of an existing object./, 
          cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to set value at '\/baz\/bat'. Consider adding a more explicit data structure as a child of an existing object./, 
          cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3166;
      }
    }
  } catch (e3165) {
    var t__2341__auto__ = e3165;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to set value at '\/baz\/bat'. Consider adding a more explicit data structure as a child of an existing object./, 
    cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_nonexistent_target.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_nonexistent_target;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-nonexistent-target", "clj-json-patch.core-test-cljs/p-add-nonexistent-target", 2057750117, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-nonexistent-target", "p-add-nonexistent-target", -743884085, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
34, 1, 242, 242, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_nonexistent_target) ? clj_json_patch.core_test_cljs.p_add_nonexistent_target.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_move_value = function clj_json_patch$core_test_cljs$p_move_value() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_move_value.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_move_value.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", new cljs.core.PersistentArrayMap(null, 2, ["bar", "baz", "waldo", "fred"], null), "qux", new cljs.core.PersistentArrayMap(null, 1, ["corge", "grault"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 2, ["foo", new cljs.core.PersistentArrayMap(null, 1, ["bar", "baz"], null), "qux", new cljs.core.PersistentArrayMap(null, 2, ["corge", "grault", "thud", "fred"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "move", "from", "/foo/waldo", "path", "/qux/thud"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3167) {
    var t__2341__auto__ = e3167;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_move_value.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_move_value;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-move-value", "clj-json-patch.core-test-cljs/p-move-value", 203097871, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-move-value", "p-move-value", 1441636589, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
22, 1, 247, 247, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_move_value) ? clj_json_patch.core_test_cljs.p_move_value.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_move_array_element = function clj_json_patch$core_test_cljs$p_move_array_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_move_array_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_move_array_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "grass", "cows", "eat"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "cows", "eat", "grass"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "move", "from", "/foo/1", "path", "/foo/3"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3168) {
    var t__2341__auto__ = e3168;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_move_array_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_move_array_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-move-array-element", "clj-json-patch.core-test-cljs/p-move-array-element", 1694849598, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-move-array-element", "p-move-array-element", -1913587240, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
30, 1, 257, 257, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_move_array_element) ? clj_json_patch.core_test_cljs.p_move_array_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_test_object = function clj_json_patch$core_test_cljs$p_test_object() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_test_object.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_test_object.cljs$lang$test = function() {
  var obj = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", 2, "c"], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "test", "path", "/1", "value", 2], null)], null)));
  var result = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", 2, "c"], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj, patches), new cljs.core.List(null, result, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "result", "result", -1239343558, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "result", "result", -1239343558, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3169) {
    var t__2341__auto__ = e3169;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "result", "result", -1239343558, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_test_object.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_test_object;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-object", "clj-json-patch.core-test-cljs/p-test-object", -19580782, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-object", "p-test-object", 1472750700, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
23, 1, 263, 263, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_object) ? clj_json_patch.core_test_cljs.p_test_object.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_test_multiple_objects = function clj_json_patch$core_test_cljs$p_test_multiple_objects() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_test_multiple_objects.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_test_multiple_objects.cljs$lang$test = function() {
  var obj = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["baz", "qux", "foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", 2, "c"], null)], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "test", "path", "/baz", "value", "qux"], null), new cljs.core.PersistentArrayMap(null, 3, ["op", "test", "path", "/foo/1", "value", 2], null)], null)));
  var result = new cljs.core.PersistentArrayMap(null, 2, ["baz", "qux", "foo", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", 2, "c"], null)], null);
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj, patches), new cljs.core.List(null, result, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "result", "result", -1239343558, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "result", "result", -1239343558, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3170) {
    var t__2341__auto__ = e3170;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "result", "result", -1239343558, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_test_multiple_objects.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_test_multiple_objects;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-multiple-objects", "clj-json-patch.core-test-cljs/p-test-multiple-objects", -12632757, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-multiple-objects", "p-test-multiple-objects", 369777069, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
33, 1, 269, 269, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_multiple_objects) ? clj_json_patch.core_test_cljs.p_test_multiple_objects.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_expected_patched = function clj_json_patch$core_test_cljs$p_expected_patched() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_expected_patched.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_expected_patched.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["k1", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["s0k1", "s0v1"], null), new cljs.core.PersistentArrayMap(null, 1, ["s1k1", "s1v1"], null)], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["k1", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["s0k1", "new value"], null), new cljs.core.PersistentArrayMap(null, 1, ["s1k1", "s1v1"], null)], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "replace", "path", "/k1/0/s0k1", "value", "new value"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3171) {
    var t__2341__auto__ = e3171;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_expected_patched.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_expected_patched;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-expected-patched", "clj-json-patch.core-test-cljs/p-expected-patched", -1109147380, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-expected-patched", "p-expected-patched", -420434510, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
28, 1, 276, 276, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_expected_patched) ? clj_json_patch.core_test_cljs.p_expected_patched.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_path_with_escape = function clj_json_patch$core_test_cljs$p_path_with_escape() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_path_with_escape.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_path_with_escape.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentArrayMap(null, 1, ["bar", 42], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentArrayMap(null, 2, ["bar", 42, "baz/bar", "ohyeah"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/foo/baz~1bar", "value", "ohyeah"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3172) {
    var t__2341__auto__ = e3172;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_path_with_escape.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_path_with_escape;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-path-with-escape", "clj-json-patch.core-test-cljs/p-path-with-escape", 61576995, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-path-with-escape", "p-path-with-escape", -1163987779, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
28, 1, 282, 282, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_path_with_escape) ? clj_json_patch.core_test_cljs.p_path_with_escape.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_patch_nested_map = function clj_json_patch$core_test_cljs$p_patch_nested_map() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_patch_nested_map.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_patch_nested_map.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["nested", new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)], null)));
  var obj2 = new cljs.core.PersistentArrayMap(null, 1, ["nested", new cljs.core.PersistentArrayMap(null, 2, ["foo", "bar", "zot", "baz"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/nested/zot", "value", "baz"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3173) {
    var t__2341__auto__ = e3173;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_patch_nested_map.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_patch_nested_map;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-patch-nested-map", "clj-json-patch.core-test-cljs/p-patch-nested-map", 9202614, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-patch-nested-map", "p-patch-nested-map", -1180758188, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
28, 1, 295, 295, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_patch_nested_map) ? clj_json_patch.core_test_cljs.p_patch_nested_map.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_remove_nested_vector_item = function clj_json_patch$core_test_cljs$p_remove_nested_vector_item() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_remove_nested_vector_item.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_remove_nested_vector_item.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["name", "item1", "foo", "bar"], null), new cljs.core.PersistentArrayMap(null, 2, ["name", "item2", "foo", "bar"], null)], null)));
  var obj2 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["name", "item1"], null), new cljs.core.PersistentArrayMap(null, 2, ["name", "item2", "foo", "bar"], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/0/foo"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj1, patches), new cljs.core.List(null, obj2, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3174) {
    var t__2341__auto__ = e3174;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "obj2", "obj2", 504239630, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_remove_nested_vector_item.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_remove_nested_vector_item;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nested-vector-item", "clj-json-patch.core-test-cljs/p-remove-nested-vector-item", 566485298, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nested-vector-item", "p-remove-nested-vector-item", 
-1966031536, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 37, 1, 303, 303, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nested_vector_item) ? clj_json_patch.core_test_cljs.p_remove_nested_vector_item.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector = function clj_json_patch$core_test_cljs$p_add_item_to_map_in_vector() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector.cljs$lang$test = function() {
  var obj = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["array", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, ["id", "hello"], null)], null)], null)));
  var expected = new cljs.core.PersistentArrayMap(null, 1, ["array", new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["id", "hello", "foo", "bar"], null)], null)], null);
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/array/0/foo", "value", "bar"], null)], null)));
  try {
    var values__2296__auto__ = new cljs.core.List(null, clj_json_patch.core.patch.call(null, obj, patches), new cljs.core.List(null, expected, null, 1, null), 2, null);
    var result__2297__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__2296__auto__);
    if (cljs.core.truth_(result__2297__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "expected", "expected", -1070764772, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__2296__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, 
      "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "expected", "expected", -1070764772, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__2296__auto__), null, 1, null), 2, null), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__2297__auto__;
  } catch (e3175) {
    var t__2341__auto__ = e3175;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, 
    "patches", "patches", 487750060, null)), new cljs.core.Symbol(null, "expected", "expected", -1070764772, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-item-to-map-in-vector", "clj-json-patch.core-test-cljs/p-add-item-to-map-in-vector", 144780316, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-item-to-map-in-vector", "p-add-item-to-map-in-vector", 
-1554855746, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 37, 1, 312, 312, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector) ? clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_test_for_nonexistent_object = function clj_json_patch$core_test_cljs$p_test_for_nonexistent_object() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_test_for_nonexistent_object.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_test_for_nonexistent_object.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "test", "path", "/baz", "value", "qux"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /The test failed./, cljs.core.list(new cljs.core.Symbol(null, "patch", 
      "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3177) {
      if (e3177 instanceof Error) {
        var e__2335__auto__ = e3177;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /The test failed./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /The test failed./, cljs.core.list(new cljs.core.Symbol(null, "patch", 
          "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /The test failed./, cljs.core.list(new cljs.core.Symbol(null, "patch", 
          "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3177;
      }
    }
  } catch (e3176) {
    var t__2341__auto__ = e3176;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /The test failed./, cljs.core.list(new cljs.core.Symbol(null, "patch", 
    "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_test_for_nonexistent_object.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_test_for_nonexistent_object;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-for-nonexistent-object", "clj-json-patch.core-test-cljs/p-test-for-nonexistent-object", -321527647, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-for-nonexistent-object", "p-test-for-nonexistent-object", 
-2086190013, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 39, 1, 321, 321, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_for_nonexistent_object) ? clj_json_patch.core_test_cljs.p_test_for_nonexistent_object.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2 = function clj_json_patch$core_test_cljs$p_test_for_nonexistent_object2() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "bar"], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "test", "path", "/4", "value", "qux"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /The test failed./, cljs.core.list(new cljs.core.Symbol(null, "patch", 
      "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3179) {
      if (e3179 instanceof Error) {
        var e__2335__auto__ = e3179;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /The test failed./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /The test failed./, cljs.core.list(new cljs.core.Symbol(null, "patch", 
          "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /The test failed./, cljs.core.list(new cljs.core.Symbol(null, "patch", 
          "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3179;
      }
    }
  } catch (e3178) {
    var t__2341__auto__ = e3178;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /The test failed./, cljs.core.list(new cljs.core.Symbol(null, "patch", 
    "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-for-nonexistent-object2", "clj-json-patch.core-test-cljs/p-test-for-nonexistent-object2", 1392003560, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-for-nonexistent-object2", "p-test-for-nonexistent-object2", 
768535818, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 40, 1, 326, 326, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2) ? clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_remove_nonexisting_object = function clj_json_patch$core_test_cljs$p_remove_nonexisting_object() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_remove_nonexisting_object.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_remove_nonexisting_object.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", "bar"], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "remove", "path", "/baz", "value", "qux"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/baz' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
      "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3181) {
      if (e3181 instanceof Error) {
        var e__2335__auto__ = e3181;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /There is no value at '\/baz' to remove./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/baz' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/baz' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3181;
      }
    }
  } catch (e3180) {
    var t__2341__auto__ = e3180;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/baz' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
    "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_remove_nonexisting_object.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_remove_nonexisting_object;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nonexisting-object", "clj-json-patch.core-test-cljs/p-remove-nonexisting-object", -1242876770, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nonexisting-object", "p-remove-nonexisting-object", 
1813614592, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 37, 1, 331, 331, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nonexisting_object) ? clj_json_patch.core_test_cljs.p_remove_nonexisting_object.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element = function clj_json_patch$core_test_cljs$p_remove_nonexisting_array_element() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "remove", "path", "/foo/6", "value", "qux"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/foo\/6' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
      "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3183) {
      if (e3183 instanceof Error) {
        var e__2335__auto__ = e3183;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /There is no value at '\/foo\/6' to remove./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/foo\/6' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/foo\/6' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3183;
      }
    }
  } catch (e3182) {
    var t__2341__auto__ = e3182;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/foo\/6' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
    "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nonexisting-array-element", "clj-json-patch.core-test-cljs/p-remove-nonexisting-array-element", -113392590, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nonexisting-array-element", "p-remove-nonexisting-array-element", 
540041616, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 44, 1, 336, 336, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element) ? clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_value_wrong_index = function clj_json_patch$core_test_cljs$p_add_value_wrong_index() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_value_wrong_index.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_value_wrong_index.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", "baz"], null)], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "add", "path", "/foo/3", "value", "qux"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to set value at 3./, cljs.core.list(new cljs.core.Symbol(null, 
      "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3185) {
      if (e3185 instanceof Error) {
        var e__2335__auto__ = e3185;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Unable to set value at 3./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to set value at 3./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to set value at 3./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3185;
      }
    }
  } catch (e3184) {
    var t__2341__auto__ = e3184;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to set value at 3./, cljs.core.list(new cljs.core.Symbol(null, 
    "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_value_wrong_index.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_value_wrong_index;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-value-wrong-index", "clj-json-patch.core-test-cljs/p-add-value-wrong-index", 1209968516, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-value-wrong-index", "p-add-value-wrong-index", 823133158, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
33, 1, 341, 341, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_value_wrong_index) ? clj_json_patch.core_test_cljs.p_add_value_wrong_index.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_replace_nonexsisting_value = function clj_json_patch$core_test_cljs$p_replace_nonexsisting_value() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_replace_nonexsisting_value.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_replace_nonexsisting_value.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", "bar", "boo", "qux"], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "replace", "path", "/baz", "value", "boo"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Can't replace a value that does not exist at '\/baz'./, cljs.core.list(new cljs.core.Symbol(null, 
      "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3187) {
      if (e3187 instanceof Error) {
        var e__2335__auto__ = e3187;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Can't replace a value that does not exist at '\/baz'./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Can't replace a value that does not exist at '\/baz'./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Can't replace a value that does not exist at '\/baz'./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3187;
      }
    }
  } catch (e3186) {
    var t__2341__auto__ = e3186;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Can't replace a value that does not exist at '\/baz'./, cljs.core.list(new cljs.core.Symbol(null, 
    "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_replace_nonexsisting_value.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_replace_nonexsisting_value;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-replace-nonexsisting-value", "clj-json-patch.core-test-cljs/p-replace-nonexsisting-value", -1193226161, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-replace-nonexsisting-value", "p-replace-nonexsisting-value", 
1375155441, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 38, 1, 346, 346, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_replace_nonexsisting_value) ? clj_json_patch.core_test_cljs.p_replace_nonexsisting_value.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path = function clj_json_patch$core_test_cljs$p_remove_nonexisting_nested_path() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentArrayMap(null, 2, ["beer", "booze", "baz", "boo"], null)], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "remove", "path", "/foo/bar"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/foo\/bar' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
      "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3189) {
      if (e3189 instanceof Error) {
        var e__2335__auto__ = e3189;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /There is no value at '\/foo\/bar' to remove./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/foo\/bar' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/foo\/bar' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3189;
      }
    }
  } catch (e3188) {
    var t__2341__auto__ = e3188;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /There is no value at '\/foo\/bar' to remove./, cljs.core.list(new cljs.core.Symbol(null, 
    "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nonexisting-nested-path", "clj-json-patch.core-test-cljs/p-remove-nonexisting-nested-path", 408515319, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nonexisting-nested-path", "p-remove-nonexisting-nested-path", 
-1553215919, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 42, 1, 351, 351, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path) ? clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_move_nonexisting_value = function clj_json_patch$core_test_cljs$p_move_nonexisting_value() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_move_nonexisting_value.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_move_nonexisting_value.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 2, ["foo", new cljs.core.PersistentArrayMap(null, 2, ["bar", "baz", "waldorf", "fred"], null), "qux", new cljs.core.PersistentArrayMap(null, 1, ["corge", "grault"], null)], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "move", "from", "/foo/waldo", "path", "/qux/thud"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Move attempted on value that does not exist at '\/foo\/waldo'./, 
      cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3191) {
      if (e3191 instanceof Error) {
        var e__2335__auto__ = e3191;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Move attempted on value that does not exist at '\/foo\/waldo'./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Move attempted on value that does not exist at '\/foo\/waldo'./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Move attempted on value that does not exist at '\/foo\/waldo'./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3191;
      }
    }
  } catch (e3190) {
    var t__2341__auto__ = e3190;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Move attempted on value that does not exist at '\/foo\/waldo'./, 
    cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_move_nonexisting_value.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_move_nonexisting_value;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-move-nonexisting-value", "clj-json-patch.core-test-cljs/p-move-nonexisting-value", -1090920415, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-move-nonexisting-value", "p-move-nonexisting-value", 99304579, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
34, 1, 357, 357, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_move_nonexisting_value) ? clj_json_patch.core_test_cljs.p_move_nonexisting_value.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_illegal_move_of_array = function clj_json_patch$core_test_cljs$p_illegal_move_of_array() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_illegal_move_of_array.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_illegal_move_of_array.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "grass", "cows", "eat"], null)], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, ["op", "move", "from", "/foo/1", "path", "/foo/-1"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, 
      "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3193) {
      if (e3193 instanceof Error) {
        var e__2330__auto__ = e3193;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, 
        "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2330__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        return e__2330__auto__;
      } else {
        throw e3193;
      }
    }
  } catch (e3192) {
    var t__2341__auto__ = e3192;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, 
    "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_illegal_move_of_array.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_illegal_move_of_array;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-illegal-move-of-array", "clj-json-patch.core-test-cljs/p-illegal-move-of-array", -1573281390, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-illegal-move-of-array", "p-illegal-move-of-array", -886422032, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
33, 1, 364, 364, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_illegal_move_of_array) ? clj_json_patch.core_test_cljs.p_illegal_move_of_array.cljs$lang$test : null]));
clj_json_patch.core_test_cljs.p_add_array_to_non_number_index = function clj_json_patch$core_test_cljs$p_add_array_to_non_number_index() {
  return cljs.test.test_var.call(null, clj_json_patch.core_test_cljs.p_add_array_to_non_number_index.cljs$lang$var);
};
clj_json_patch.core_test_cljs.p_add_array_to_non_number_index.cljs$lang$test = function() {
  var obj1 = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentArrayMap(null, 1, ["foo", new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["all", "grass", "cows", "eat"], null)], null)));
  var patches = JSON.stringify(cljs.core.clj__GT_js.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 2, ["op", "add", "path", "/foo/two"], null)], null)));
  try {
    try {
      clj_json_patch.core.patch.call(null, obj1, patches);
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to determine array index from 'two'./, cljs.core.list(new cljs.core.Symbol(null, 
      "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e3195) {
      if (e3195 instanceof Error) {
        var e__2335__auto__ = e3195;
        var m__2336__auto__ = e__2335__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Unable to determine array index from 'two'./, m__2336__auto__))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to determine array index from 'two'./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to determine array index from 'two'./, cljs.core.list(new cljs.core.Symbol(null, 
          "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__2335__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return e__2335__auto__;
      } else {
        throw e3195;
      }
    }
  } catch (e3194) {
    var t__2341__auto__ = e3194;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Unable to determine array index from 'two'./, cljs.core.list(new cljs.core.Symbol(null, 
    "patch", "patch", 2021306636, null), new cljs.core.Symbol(null, "obj1", "obj1", -594814223, null), new cljs.core.Symbol(null, "patches", "patches", 487750060, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__2341__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
clj_json_patch.core_test_cljs.p_add_array_to_non_number_index.cljs$lang$var = new cljs.core.Var(function() {
  return clj_json_patch.core_test_cljs.p_add_array_to_non_number_index;
}, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-array-to-non-number-index", "clj-json-patch.core-test-cljs/p-add-array-to-non-number-index", 2104776162, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-array-to-non-number-index", "p-add-array-to-non-number-index", 
174585408, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 41, 1, 369, 369, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_array_to_non_number_index) ? clj_json_patch.core_test_cljs.p_add_array_to_non_number_index.cljs$lang$test : null]));
goog.provide("clj_json_patch.runner_cljs");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("doo.runner");
goog.require("clj_json_patch.core_test_cljs");
doo.runner.set_entry_point_BANG_.call(null, doo.runner.karma_QMARK_.call(null) ? function(tc__3115__auto__) {
  jx.reporter.karma.start.call(null, tc__3115__auto__, 56);
  return cljs.test.run_block.call(null, function() {
    var env3198 = cljs.test.empty_env.call(null, new cljs.core.Keyword("jx.reporter.karma", "karma", "jx.reporter.karma/karma", 404831826));
    var summary3199 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
      cljs.test.set_env_BANG_.call(null, env3198);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__2409__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          if (env__2409__auto__ == null) {
            cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
          } else {
          }
          return null;
        }], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.fromArray([new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.apply_patch;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "apply-patch", "clj-json-patch.core-test-cljs/apply-patch", -1331120766, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "apply-patch", "apply-patch", -641869788, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        21, 1, 6, 6, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.apply_patch) ? clj_json_patch.core_test_cljs.apply_patch.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_no_diff;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-no-diff", "clj-json-patch.core-test-cljs/d-no-diff", -312102797, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-no-diff", "d-no-diff", 1385877397, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        19, 1, 13, 13, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_no_diff) ? clj_json_patch.core_test_cljs.d_no_diff.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_add_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-member", "clj-json-patch.core-test-cljs/d-add-member", 2098523429, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-member", "d-add-member", 69710151, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        22, 1, 19, 19, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_member) ? clj_json_patch.core_test_cljs.d_add_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_add_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-array", "clj-json-patch.core-test-cljs/d-add-array", 1051557030, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-array", "d-add-array", 1234424004, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        21, 1, 25, 25, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_array) ? clj_json_patch.core_test_cljs.d_add_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_add_second_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-second-array", "clj-json-patch.core-test-cljs/d-add-second-array", 1231282204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-second-array", "d-add-second-array", 806706302, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        28, 1, 31, 31, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_second_array) ? clj_json_patch.core_test_cljs.d_add_second_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-member", "clj-json-patch.core-test-cljs/d-remove-member", 841302121, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-member", "d-remove-member", -617093681, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 37, 37, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_member) ? clj_json_patch.core_test_cljs.d_remove_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_first_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-first-element", "clj-json-patch.core-test-cljs/d-remove-first-element", 1172562579, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-first-element", "d-remove-first-element", -286357711, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 43, 43, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_first_element) ? clj_json_patch.core_test_cljs.d_remove_first_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_second_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-second-element", "clj-json-patch.core-test-cljs/d-remove-second-element", -1774858695, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-second-element", "d-remove-second-element", 
        1328246235, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 49, 49, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_second_element) ? clj_json_patch.core_test_cljs.d_remove_second_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_third_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-third-element", "clj-json-patch.core-test-cljs/d-remove-third-element", -1671280495, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-third-element", "d-remove-third-element", 1198467895, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 55, 55, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_third_element) ? clj_json_patch.core_test_cljs.d_remove_third_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_replace_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-replace-value", "clj-json-patch.core-test-cljs/d-replace-value", -59850245, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-replace-value", "d-replace-value", 1432052829, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 61, 61, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_replace_value) ? clj_json_patch.core_test_cljs.d_replace_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_nested_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-nested-member", "clj-json-patch.core-test-cljs/d-remove-nested-member", -652239462, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-nested-member", "d-remove-nested-member", -1307822024, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 67, 67, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_nested_member) ? clj_json_patch.core_test_cljs.d_remove_nested_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_add_nested_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-nested-member", "clj-json-patch.core-test-cljs/d-add-nested-member", -1856063190, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-nested-member", "d-add-nested-member", 1236128964, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        29, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_nested_member) ? clj_json_patch.core_test_cljs.d_add_nested_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_move_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-move-value", "clj-json-patch.core-test-cljs/d-move-value", 1554338046, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-move-value", "d-move-value", -2017850340, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        22, 1, 81, 81, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_move_value) ? clj_json_patch.core_test_cljs.d_move_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_move_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-move-array-element", "clj-json-patch.core-test-cljs/d-move-array-element", 1664301351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-move-array-element", "d-move-array-element", 465622409, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        30, 1, 91, 91, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_move_array_element) ? clj_json_patch.core_test_cljs.d_move_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_replace_value_with_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-replace-value-with-array", "clj-json-patch.core-test-cljs/d-replace-value-with-array", 247600914, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-replace-value-with-array", "d-replace-value-with-array", 
        -1510884496, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 36, 1, 97, 97, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_replace_value_with_array) ? clj_json_patch.core_test_cljs.d_replace_value_with_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_nil_vs_absent;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-nil-vs-absent", "clj-json-patch.core-test-cljs/d-nil-vs-absent", 770795512, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-nil-vs-absent", "d-nil-vs-absent", 1390854746, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 104, 104, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_nil_vs_absent) ? clj_json_patch.core_test_cljs.d_nil_vs_absent.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_nested_nil_vs_absent;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-nested-nil-vs-absent", "clj-json-patch.core-test-cljs/d-nested-nil-vs-absent", 1754374474, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-nested-nil-vs-absent", "d-nested-nil-vs-absent", -777716308, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_nested_nil_vs_absent) ? clj_json_patch.core_test_cljs.d_nested_nil_vs_absent.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_replace_value_in_vector;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-replace-value-in-vector", "clj-json-patch.core-test-cljs/d-replace-value-in-vector", -728875398, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-replace-value-in-vector", "d-replace-value-in-vector", 
        -1141253416, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 35, 1, 118, 118, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_replace_value_in_vector) ? clj_json_patch.core_test_cljs.d_replace_value_in_vector.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-nil-vs-absent-in-vector", "clj-json-patch.core-test-cljs/d-nil-vs-absent-in-vector", -78275167, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-nil-vs-absent-in-vector", "d-nil-vs-absent-in-vector", 
        306609667, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 35, 1, 124, 124, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector) ? clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_vector_compare;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-vector-compare", "clj-json-patch.core-test-cljs/d-vector-compare", 481892246, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-vector-compare", "d-vector-compare", 1974252528, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        26, 1, 131, 131, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_vector_compare) ? clj_json_patch.core_test_cljs.d_vector_compare.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_vector_different_maps;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-vector-different-maps", "clj-json-patch.core-test-cljs/d-vector-different-maps", -1958357373, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-vector-different-maps", "d-vector-different-maps", 
        576092965, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 138, 138, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_vector_different_maps) ? clj_json_patch.core_test_cljs.d_vector_different_maps.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_no_change;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-no-change", "clj-json-patch.core-test-cljs/p-no-change", 1745963590, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-no-change", "p-no-change", -1056133592, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        21, 1, 150, 150, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_no_change) ? clj_json_patch.core_test_cljs.p_no_change.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-member", "clj-json-patch.core-test-cljs/p-add-member", 186355194, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-member", "p-add-member", -1561828968, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        22, 1, 156, 156, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_member) ? clj_json_patch.core_test_cljs.p_add_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-element", "clj-json-patch.core-test-cljs/p-add-element", -1385340870, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-element", "p-add-element", 1918946776, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        23, 1, 162, 162, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_element) ? clj_json_patch.core_test_cljs.p_add_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_second_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-second-array-element", "clj-json-patch.core-test-cljs/p-add-second-array-element", 1540913220, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-second-array-element", "p-add-second-array-element", 
        -2100656922, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 36, 1, 168, 168, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_second_array_element) ? clj_json_patch.core_test_cljs.p_add_second_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-member", "clj-json-patch.core-test-cljs/p-remove-member", -739402943, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-member", "p-remove-member", -2065743905, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 174, 174, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_member) ? clj_json_patch.core_test_cljs.p_remove_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-array-element", "clj-json-patch.core-test-cljs/p-remove-array-element", -641660791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-array-element", "p-remove-array-element", 1993332523, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 180, 180, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_array_element) ? clj_json_patch.core_test_cljs.p_remove_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_second_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-second-array-element", "clj-json-patch.core-test-cljs/p-remove-second-array-element", 2080028831, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-second-array-element", "p-remove-second-array-element", 
        15194941, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 39, 1, 186, 186, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_second_array_element) ? clj_json_patch.core_test_cljs.p_remove_second_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_third_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-third-array-element", "clj-json-patch.core-test-cljs/p-remove-third-array-element", -360780930, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-third-array-element", "p-remove-third-array-element", 
        -1286893800, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 38, 1, 192, 192, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_third_array_element) ? clj_json_patch.core_test_cljs.p_remove_third_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_replace_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-replace-value", "clj-json-patch.core-test-cljs/p-replace-value", 1027368866, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-replace-value", "p-replace-value", -2077308100, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 198, 198, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_replace_value) ? clj_json_patch.core_test_cljs.p_replace_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_replace_boolean;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-replace-boolean", "clj-json-patch.core-test-cljs/p-replace-boolean", -730703596, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-replace-boolean", "p-replace-boolean", -1919973642, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        27, 1, 204, 204, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_replace_boolean) ? clj_json_patch.core_test_cljs.p_replace_boolean.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nested_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nested-member", "clj-json-patch.core-test-cljs/p-remove-nested-member", 982298702, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nested-member", "p-remove-nested-member", 1671425264, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 210, 210, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nested_member) ? clj_json_patch.core_test_cljs.p_remove_nested_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_nested_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-nested-member", "clj-json-patch.core-test-cljs/p-add-nested-member", 1497016344, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-nested-member", "p-add-nested-member", -2146677574, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        29, 1, 217, 217, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_nested_member) ? clj_json_patch.core_test_cljs.p_add_nested_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_nested_arry;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-nested-arry", "clj-json-patch.core-test-cljs/p-add-nested-arry", 1961114199, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-nested-arry", "p-add-nested-arry", -1678141899, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        27, 1, 224, 224, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_nested_arry) ? clj_json_patch.core_test_cljs.p_add_nested_arry.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_to_end_nested_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-to-end-nested-array", "clj-json-patch.core-test-cljs/p-add-to-end-nested-array", -1363985249, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-to-end-nested-array", "p-add-to-end-nested-array", 
        -678526723, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 35, 1, 230, 230, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_to_end_nested_array) ? clj_json_patch.core_test_cljs.p_add_to_end_nested_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_ignore_unregonized_elements;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-ignore-unregonized-elements", "clj-json-patch.core-test-cljs/p-ignore-unregonized-elements", -1803164260, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-ignore-unregonized-elements", "p-ignore-unregonized-elements", 
        2073510462, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 39, 1, 236, 236, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_ignore_unregonized_elements) ? clj_json_patch.core_test_cljs.p_ignore_unregonized_elements.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_nonexistent_target;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-nonexistent-target", "clj-json-patch.core-test-cljs/p-add-nonexistent-target", 2057750117, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-nonexistent-target", "p-add-nonexistent-target", 
        -743884085, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 34, 1, 242, 242, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_nonexistent_target) ? clj_json_patch.core_test_cljs.p_add_nonexistent_target.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_move_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-move-value", "clj-json-patch.core-test-cljs/p-move-value", 203097871, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-move-value", "p-move-value", 1441636589, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        22, 1, 247, 247, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_move_value) ? clj_json_patch.core_test_cljs.p_move_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_move_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-move-array-element", "clj-json-patch.core-test-cljs/p-move-array-element", 1694849598, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-move-array-element", "p-move-array-element", -1913587240, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        30, 1, 257, 257, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_move_array_element) ? clj_json_patch.core_test_cljs.p_move_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_test_object;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-object", "clj-json-patch.core-test-cljs/p-test-object", -19580782, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-object", "p-test-object", 1472750700, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        23, 1, 263, 263, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_object) ? clj_json_patch.core_test_cljs.p_test_object.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_test_multiple_objects;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-multiple-objects", "clj-json-patch.core-test-cljs/p-test-multiple-objects", -12632757, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-multiple-objects", "p-test-multiple-objects", 
        369777069, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 269, 269, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_multiple_objects) ? clj_json_patch.core_test_cljs.p_test_multiple_objects.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_expected_patched;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-expected-patched", "clj-json-patch.core-test-cljs/p-expected-patched", -1109147380, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-expected-patched", "p-expected-patched", -420434510, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        28, 1, 276, 276, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_expected_patched) ? clj_json_patch.core_test_cljs.p_expected_patched.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_path_with_escape;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-path-with-escape", "clj-json-patch.core-test-cljs/p-path-with-escape", 61576995, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-path-with-escape", "p-path-with-escape", -1163987779, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        28, 1, 282, 282, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_path_with_escape) ? clj_json_patch.core_test_cljs.p_path_with_escape.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_patch_nested_map;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-patch-nested-map", "clj-json-patch.core-test-cljs/p-patch-nested-map", 9202614, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-patch-nested-map", "p-patch-nested-map", -1180758188, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        28, 1, 295, 295, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_patch_nested_map) ? clj_json_patch.core_test_cljs.p_patch_nested_map.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nested_vector_item;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nested-vector-item", "clj-json-patch.core-test-cljs/p-remove-nested-vector-item", 566485298, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nested-vector-item", "p-remove-nested-vector-item", 
        -1966031536, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 37, 1, 303, 303, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nested_vector_item) ? clj_json_patch.core_test_cljs.p_remove_nested_vector_item.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-item-to-map-in-vector", "clj-json-patch.core-test-cljs/p-add-item-to-map-in-vector", 144780316, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-item-to-map-in-vector", "p-add-item-to-map-in-vector", 
        -1554855746, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 37, 1, 312, 312, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector) ? clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_test_for_nonexistent_object;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-for-nonexistent-object", "clj-json-patch.core-test-cljs/p-test-for-nonexistent-object", -321527647, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-for-nonexistent-object", "p-test-for-nonexistent-object", 
        -2086190013, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 39, 1, 321, 321, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_for_nonexistent_object) ? clj_json_patch.core_test_cljs.p_test_for_nonexistent_object.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-for-nonexistent-object2", "clj-json-patch.core-test-cljs/p-test-for-nonexistent-object2", 1392003560, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-for-nonexistent-object2", "p-test-for-nonexistent-object2", 
        768535818, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 40, 1, 326, 326, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2) ? clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nonexisting_object;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nonexisting-object", "clj-json-patch.core-test-cljs/p-remove-nonexisting-object", -1242876770, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nonexisting-object", "p-remove-nonexisting-object", 
        1813614592, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 37, 1, 331, 331, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nonexisting_object) ? clj_json_patch.core_test_cljs.p_remove_nonexisting_object.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nonexisting-array-element", "clj-json-patch.core-test-cljs/p-remove-nonexisting-array-element", -113392590, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
        "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nonexisting-array-element", 
        "p-remove-nonexisting-array-element", 540041616, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 44, 1, 336, 336, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element) ? clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_value_wrong_index;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-value-wrong-index", "clj-json-patch.core-test-cljs/p-add-value-wrong-index", 1209968516, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-value-wrong-index", "p-add-value-wrong-index", 
        823133158, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 341, 341, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_value_wrong_index) ? clj_json_patch.core_test_cljs.p_add_value_wrong_index.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_replace_nonexsisting_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-replace-nonexsisting-value", "clj-json-patch.core-test-cljs/p-replace-nonexsisting-value", -1193226161, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-replace-nonexsisting-value", "p-replace-nonexsisting-value", 
        1375155441, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 38, 1, 346, 346, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_replace_nonexsisting_value) ? clj_json_patch.core_test_cljs.p_replace_nonexsisting_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nonexisting-nested-path", "clj-json-patch.core-test-cljs/p-remove-nonexisting-nested-path", 408515319, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nonexisting-nested-path", "p-remove-nonexisting-nested-path", 
        -1553215919, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 42, 1, 351, 351, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path) ? clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_move_nonexisting_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-move-nonexisting-value", "clj-json-patch.core-test-cljs/p-move-nonexisting-value", -1090920415, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-move-nonexisting-value", "p-move-nonexisting-value", 
        99304579, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 34, 1, 357, 357, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_move_nonexisting_value) ? clj_json_patch.core_test_cljs.p_move_nonexisting_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_illegal_move_of_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-illegal-move-of-array", "clj-json-patch.core-test-cljs/p-illegal-move-of-array", -1573281390, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-illegal-move-of-array", "p-illegal-move-of-array", 
        -886422032, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 364, 364, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_illegal_move_of_array) ? clj_json_patch.core_test_cljs.p_illegal_move_of_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_array_to_non_number_index;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-array-to-non-number-index", "clj-json-patch.core-test-cljs/p-add-array-to-non-number-index", 2104776162, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-array-to-non-number-index", "p-add-array-to-non-number-index", 
        174585408, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 41, 1, 369, 369, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_array_to_non_number_index) ? clj_json_patch.core_test_cljs.p_add_array_to_non_number_index.cljs$lang$test : null]))], true)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          if (env__2409__auto__ == null) {
            return cljs.test.clear_env_BANG_.call(null);
          } else {
            return null;
          }
        }], null));
      }());
    }, function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    }], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
      return cljs.core._vreset_BANG_.call(null, summary3199, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary3199), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    }], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
      cljs.test.set_env_BANG_.call(null, env3198);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary3199));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary3199), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    }], null));
  }());
} : function() {
  return cljs.test.run_block.call(null, function() {
    var env3200 = cljs.test.empty_env.call(null);
    var summary3201 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
      cljs.test.set_env_BANG_.call(null, env3200);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__2409__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          if (env__2409__auto__ == null) {
            cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
          } else {
          }
          return null;
        }], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.fromArray([new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.apply_patch;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "apply-patch", "clj-json-patch.core-test-cljs/apply-patch", -1331120766, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "apply-patch", "apply-patch", -641869788, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        21, 1, 6, 6, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.apply_patch) ? clj_json_patch.core_test_cljs.apply_patch.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_no_diff;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-no-diff", "clj-json-patch.core-test-cljs/d-no-diff", -312102797, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-no-diff", "d-no-diff", 1385877397, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        19, 1, 13, 13, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_no_diff) ? clj_json_patch.core_test_cljs.d_no_diff.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_add_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-member", "clj-json-patch.core-test-cljs/d-add-member", 2098523429, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-member", "d-add-member", 69710151, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        22, 1, 19, 19, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_member) ? clj_json_patch.core_test_cljs.d_add_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_add_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-array", "clj-json-patch.core-test-cljs/d-add-array", 1051557030, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-array", "d-add-array", 1234424004, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        21, 1, 25, 25, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_array) ? clj_json_patch.core_test_cljs.d_add_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_add_second_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-second-array", "clj-json-patch.core-test-cljs/d-add-second-array", 1231282204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-second-array", "d-add-second-array", 806706302, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        28, 1, 31, 31, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_second_array) ? clj_json_patch.core_test_cljs.d_add_second_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-member", "clj-json-patch.core-test-cljs/d-remove-member", 841302121, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-member", "d-remove-member", -617093681, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 37, 37, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_member) ? clj_json_patch.core_test_cljs.d_remove_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_first_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-first-element", "clj-json-patch.core-test-cljs/d-remove-first-element", 1172562579, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-first-element", "d-remove-first-element", -286357711, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 43, 43, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_first_element) ? clj_json_patch.core_test_cljs.d_remove_first_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_second_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-second-element", "clj-json-patch.core-test-cljs/d-remove-second-element", -1774858695, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-second-element", "d-remove-second-element", 
        1328246235, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 49, 49, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_second_element) ? clj_json_patch.core_test_cljs.d_remove_second_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_third_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-third-element", "clj-json-patch.core-test-cljs/d-remove-third-element", -1671280495, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-third-element", "d-remove-third-element", 1198467895, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 55, 55, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_third_element) ? clj_json_patch.core_test_cljs.d_remove_third_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_replace_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-replace-value", "clj-json-patch.core-test-cljs/d-replace-value", -59850245, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-replace-value", "d-replace-value", 1432052829, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 61, 61, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_replace_value) ? clj_json_patch.core_test_cljs.d_replace_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_remove_nested_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-remove-nested-member", "clj-json-patch.core-test-cljs/d-remove-nested-member", -652239462, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-remove-nested-member", "d-remove-nested-member", -1307822024, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 67, 67, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_remove_nested_member) ? clj_json_patch.core_test_cljs.d_remove_nested_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_add_nested_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-add-nested-member", "clj-json-patch.core-test-cljs/d-add-nested-member", -1856063190, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-add-nested-member", "d-add-nested-member", 1236128964, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        29, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_add_nested_member) ? clj_json_patch.core_test_cljs.d_add_nested_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_move_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-move-value", "clj-json-patch.core-test-cljs/d-move-value", 1554338046, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-move-value", "d-move-value", -2017850340, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        22, 1, 81, 81, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_move_value) ? clj_json_patch.core_test_cljs.d_move_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_move_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-move-array-element", "clj-json-patch.core-test-cljs/d-move-array-element", 1664301351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-move-array-element", "d-move-array-element", 465622409, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        30, 1, 91, 91, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_move_array_element) ? clj_json_patch.core_test_cljs.d_move_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_replace_value_with_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-replace-value-with-array", "clj-json-patch.core-test-cljs/d-replace-value-with-array", 247600914, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-replace-value-with-array", "d-replace-value-with-array", 
        -1510884496, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 36, 1, 97, 97, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_replace_value_with_array) ? clj_json_patch.core_test_cljs.d_replace_value_with_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_nil_vs_absent;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-nil-vs-absent", "clj-json-patch.core-test-cljs/d-nil-vs-absent", 770795512, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-nil-vs-absent", "d-nil-vs-absent", 1390854746, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 104, 104, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_nil_vs_absent) ? clj_json_patch.core_test_cljs.d_nil_vs_absent.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_nested_nil_vs_absent;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-nested-nil-vs-absent", "clj-json-patch.core-test-cljs/d-nested-nil-vs-absent", 1754374474, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-nested-nil-vs-absent", "d-nested-nil-vs-absent", -777716308, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_nested_nil_vs_absent) ? clj_json_patch.core_test_cljs.d_nested_nil_vs_absent.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_replace_value_in_vector;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-replace-value-in-vector", "clj-json-patch.core-test-cljs/d-replace-value-in-vector", -728875398, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-replace-value-in-vector", "d-replace-value-in-vector", 
        -1141253416, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 35, 1, 118, 118, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_replace_value_in_vector) ? clj_json_patch.core_test_cljs.d_replace_value_in_vector.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-nil-vs-absent-in-vector", "clj-json-patch.core-test-cljs/d-nil-vs-absent-in-vector", -78275167, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-nil-vs-absent-in-vector", "d-nil-vs-absent-in-vector", 
        306609667, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 35, 1, 124, 124, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector) ? clj_json_patch.core_test_cljs.d_nil_vs_absent_in_vector.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_vector_compare;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-vector-compare", "clj-json-patch.core-test-cljs/d-vector-compare", 481892246, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-vector-compare", "d-vector-compare", 1974252528, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        26, 1, 131, 131, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_vector_compare) ? clj_json_patch.core_test_cljs.d_vector_compare.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.d_vector_different_maps;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "d-vector-different-maps", "clj-json-patch.core-test-cljs/d-vector-different-maps", -1958357373, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "d-vector-different-maps", "d-vector-different-maps", 
        576092965, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 138, 138, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.d_vector_different_maps) ? clj_json_patch.core_test_cljs.d_vector_different_maps.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_no_change;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-no-change", "clj-json-patch.core-test-cljs/p-no-change", 1745963590, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-no-change", "p-no-change", -1056133592, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        21, 1, 150, 150, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_no_change) ? clj_json_patch.core_test_cljs.p_no_change.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-member", "clj-json-patch.core-test-cljs/p-add-member", 186355194, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-member", "p-add-member", -1561828968, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        22, 1, 156, 156, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_member) ? clj_json_patch.core_test_cljs.p_add_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-element", "clj-json-patch.core-test-cljs/p-add-element", -1385340870, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-element", "p-add-element", 1918946776, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        23, 1, 162, 162, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_element) ? clj_json_patch.core_test_cljs.p_add_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_second_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-second-array-element", "clj-json-patch.core-test-cljs/p-add-second-array-element", 1540913220, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-second-array-element", "p-add-second-array-element", 
        -2100656922, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 36, 1, 168, 168, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_second_array_element) ? clj_json_patch.core_test_cljs.p_add_second_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-member", "clj-json-patch.core-test-cljs/p-remove-member", -739402943, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-member", "p-remove-member", -2065743905, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 174, 174, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_member) ? clj_json_patch.core_test_cljs.p_remove_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-array-element", "clj-json-patch.core-test-cljs/p-remove-array-element", -641660791, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-array-element", "p-remove-array-element", 1993332523, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 180, 180, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_array_element) ? clj_json_patch.core_test_cljs.p_remove_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_second_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-second-array-element", "clj-json-patch.core-test-cljs/p-remove-second-array-element", 2080028831, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-second-array-element", "p-remove-second-array-element", 
        15194941, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 39, 1, 186, 186, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_second_array_element) ? clj_json_patch.core_test_cljs.p_remove_second_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_third_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-third-array-element", "clj-json-patch.core-test-cljs/p-remove-third-array-element", -360780930, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-third-array-element", "p-remove-third-array-element", 
        -1286893800, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 38, 1, 192, 192, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_third_array_element) ? clj_json_patch.core_test_cljs.p_remove_third_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_replace_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-replace-value", "clj-json-patch.core-test-cljs/p-replace-value", 1027368866, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-replace-value", "p-replace-value", -2077308100, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        25, 1, 198, 198, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_replace_value) ? clj_json_patch.core_test_cljs.p_replace_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_replace_boolean;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-replace-boolean", "clj-json-patch.core-test-cljs/p-replace-boolean", -730703596, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-replace-boolean", "p-replace-boolean", -1919973642, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        27, 1, 204, 204, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_replace_boolean) ? clj_json_patch.core_test_cljs.p_replace_boolean.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nested_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nested-member", "clj-json-patch.core-test-cljs/p-remove-nested-member", 982298702, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nested-member", "p-remove-nested-member", 1671425264, 
        null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 32, 1, 210, 210, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nested_member) ? clj_json_patch.core_test_cljs.p_remove_nested_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_nested_member;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-nested-member", "clj-json-patch.core-test-cljs/p-add-nested-member", 1497016344, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-nested-member", "p-add-nested-member", -2146677574, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        29, 1, 217, 217, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_nested_member) ? clj_json_patch.core_test_cljs.p_add_nested_member.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_nested_arry;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-nested-arry", "clj-json-patch.core-test-cljs/p-add-nested-arry", 1961114199, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-nested-arry", "p-add-nested-arry", -1678141899, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        27, 1, 224, 224, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_nested_arry) ? clj_json_patch.core_test_cljs.p_add_nested_arry.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_to_end_nested_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-to-end-nested-array", "clj-json-patch.core-test-cljs/p-add-to-end-nested-array", -1363985249, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-to-end-nested-array", "p-add-to-end-nested-array", 
        -678526723, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 35, 1, 230, 230, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_to_end_nested_array) ? clj_json_patch.core_test_cljs.p_add_to_end_nested_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_ignore_unregonized_elements;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-ignore-unregonized-elements", "clj-json-patch.core-test-cljs/p-ignore-unregonized-elements", -1803164260, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-ignore-unregonized-elements", "p-ignore-unregonized-elements", 
        2073510462, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 39, 1, 236, 236, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_ignore_unregonized_elements) ? clj_json_patch.core_test_cljs.p_ignore_unregonized_elements.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_nonexistent_target;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-nonexistent-target", "clj-json-patch.core-test-cljs/p-add-nonexistent-target", 2057750117, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-nonexistent-target", "p-add-nonexistent-target", 
        -743884085, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 34, 1, 242, 242, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_nonexistent_target) ? clj_json_patch.core_test_cljs.p_add_nonexistent_target.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_move_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-move-value", "clj-json-patch.core-test-cljs/p-move-value", 203097871, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-move-value", "p-move-value", 1441636589, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        22, 1, 247, 247, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_move_value) ? clj_json_patch.core_test_cljs.p_move_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_move_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-move-array-element", "clj-json-patch.core-test-cljs/p-move-array-element", 1694849598, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-move-array-element", "p-move-array-element", -1913587240, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        30, 1, 257, 257, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_move_array_element) ? clj_json_patch.core_test_cljs.p_move_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_test_object;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-object", "clj-json-patch.core-test-cljs/p-test-object", -19580782, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-object", "p-test-object", 1472750700, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        23, 1, 263, 263, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_object) ? clj_json_patch.core_test_cljs.p_test_object.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_test_multiple_objects;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-multiple-objects", "clj-json-patch.core-test-cljs/p-test-multiple-objects", -12632757, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-multiple-objects", "p-test-multiple-objects", 
        369777069, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 269, 269, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_multiple_objects) ? clj_json_patch.core_test_cljs.p_test_multiple_objects.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_expected_patched;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-expected-patched", "clj-json-patch.core-test-cljs/p-expected-patched", -1109147380, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-expected-patched", "p-expected-patched", -420434510, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        28, 1, 276, 276, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_expected_patched) ? clj_json_patch.core_test_cljs.p_expected_patched.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_path_with_escape;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-path-with-escape", "clj-json-patch.core-test-cljs/p-path-with-escape", 61576995, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-path-with-escape", "p-path-with-escape", -1163987779, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        28, 1, 282, 282, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_path_with_escape) ? clj_json_patch.core_test_cljs.p_path_with_escape.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_patch_nested_map;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-patch-nested-map", "clj-json-patch.core-test-cljs/p-patch-nested-map", 9202614, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-patch-nested-map", "p-patch-nested-map", -1180758188, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 
        28, 1, 295, 295, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_patch_nested_map) ? clj_json_patch.core_test_cljs.p_patch_nested_map.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nested_vector_item;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nested-vector-item", "clj-json-patch.core-test-cljs/p-remove-nested-vector-item", 566485298, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nested-vector-item", "p-remove-nested-vector-item", 
        -1966031536, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 37, 1, 303, 303, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nested_vector_item) ? clj_json_patch.core_test_cljs.p_remove_nested_vector_item.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-item-to-map-in-vector", "clj-json-patch.core-test-cljs/p-add-item-to-map-in-vector", 144780316, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-item-to-map-in-vector", "p-add-item-to-map-in-vector", 
        -1554855746, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 37, 1, 312, 312, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector) ? clj_json_patch.core_test_cljs.p_add_item_to_map_in_vector.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_test_for_nonexistent_object;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-for-nonexistent-object", "clj-json-patch.core-test-cljs/p-test-for-nonexistent-object", -321527647, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-for-nonexistent-object", "p-test-for-nonexistent-object", 
        -2086190013, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 39, 1, 321, 321, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_for_nonexistent_object) ? clj_json_patch.core_test_cljs.p_test_for_nonexistent_object.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-test-for-nonexistent-object2", "clj-json-patch.core-test-cljs/p-test-for-nonexistent-object2", 1392003560, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-test-for-nonexistent-object2", "p-test-for-nonexistent-object2", 
        768535818, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 40, 1, 326, 326, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2) ? clj_json_patch.core_test_cljs.p_test_for_nonexistent_object2.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nonexisting_object;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nonexisting-object", "clj-json-patch.core-test-cljs/p-remove-nonexisting-object", -1242876770, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nonexisting-object", "p-remove-nonexisting-object", 
        1813614592, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 37, 1, 331, 331, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nonexisting_object) ? clj_json_patch.core_test_cljs.p_remove_nonexisting_object.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nonexisting-array-element", "clj-json-patch.core-test-cljs/p-remove-nonexisting-array-element", -113392590, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
        "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nonexisting-array-element", 
        "p-remove-nonexisting-array-element", 540041616, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 44, 1, 336, 336, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element) ? clj_json_patch.core_test_cljs.p_remove_nonexisting_array_element.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_value_wrong_index;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-value-wrong-index", "clj-json-patch.core-test-cljs/p-add-value-wrong-index", 1209968516, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-value-wrong-index", "p-add-value-wrong-index", 
        823133158, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 341, 341, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_value_wrong_index) ? clj_json_patch.core_test_cljs.p_add_value_wrong_index.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_replace_nonexsisting_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-replace-nonexsisting-value", "clj-json-patch.core-test-cljs/p-replace-nonexsisting-value", -1193226161, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-replace-nonexsisting-value", "p-replace-nonexsisting-value", 
        1375155441, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 38, 1, 346, 346, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_replace_nonexsisting_value) ? clj_json_patch.core_test_cljs.p_replace_nonexsisting_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-remove-nonexisting-nested-path", "clj-json-patch.core-test-cljs/p-remove-nonexisting-nested-path", 408515319, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-remove-nonexisting-nested-path", "p-remove-nonexisting-nested-path", 
        -1553215919, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 42, 1, 351, 351, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path) ? clj_json_patch.core_test_cljs.p_remove_nonexisting_nested_path.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_move_nonexisting_value;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-move-nonexisting-value", "clj-json-patch.core-test-cljs/p-move-nonexisting-value", -1090920415, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-move-nonexisting-value", "p-move-nonexisting-value", 
        99304579, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 34, 1, 357, 357, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_move_nonexisting_value) ? clj_json_patch.core_test_cljs.p_move_nonexisting_value.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_illegal_move_of_array;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-illegal-move-of-array", "clj-json-patch.core-test-cljs/p-illegal-move-of-array", -1573281390, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-illegal-move-of-array", "p-illegal-move-of-array", 
        -886422032, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 33, 1, 364, 364, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_illegal_move_of_array) ? clj_json_patch.core_test_cljs.p_illegal_move_of_array.cljs$lang$test : null])), new cljs.core.Var(function() {
          return clj_json_patch.core_test_cljs.p_add_array_to_non_number_index;
        }, new cljs.core.Symbol("clj-json-patch.core-test-cljs", "p-add-array-to-non-number-index", "clj-json-patch.core-test-cljs/p-add-array-to-non-number-index", 2104776162, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
        2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Symbol(null, "p-add-array-to-non-number-index", "p-add-array-to-non-number-index", 
        174585408, null), "/run/media/jeroen/MyDocuments/git/clj-json-patch_NEW/test/cljs/clj_json_patch/core_test_cljs.cljs", 41, 1, 369, 369, cljs.core.List.EMPTY, null, cljs.core.truth_(clj_json_patch.core_test_cljs.p_add_array_to_non_number_index) ? clj_json_patch.core_test_cljs.p_add_array_to_non_number_index.cljs$lang$test : null]))], true)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          if (env__2409__auto__ == null) {
            return cljs.test.clear_env_BANG_.call(null);
          } else {
            return null;
          }
        }], null));
      }());
    }, function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "clj-json-patch.core-test-cljs", "clj-json-patch.core-test-cljs", -1436941331, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    }], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
      return cljs.core._vreset_BANG_.call(null, summary3201, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary3201), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    }], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
      cljs.test.set_env_BANG_.call(null, env3200);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary3201));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary3201), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    }], null));
  }());
});
